/*! For license information please see 74.4de6bdcaaa2ec9ef2577.js.LICENSE.txt */
(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[74],{WkPL:e=>{e.exports=function(e,a){(null==a||a>e.length)&&(a=e.length);for(var n=0,t=new Array(a);n<a;n++)t[n]=e[n];return t}},wTVA:e=>{e.exports=function(e){if(Array.isArray(e))return e}},Ijbi:(e,a,n)=>{var t=n("WkPL");e.exports=function(e){if(Array.isArray(e))return t(e)}},PJYZ:e=>{e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},lwsE:e=>{e.exports=function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}},W8MJ:e=>{function a(e,a){for(var n=0;n<a.length;n++){var t=a[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}e.exports=function(e,n,t){return n&&a(e.prototype,n),t&&a(e,t),e}},lSNA:e=>{e.exports=function(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}},pVnL:e=>{function a(){return e.exports=a=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},a.apply(this,arguments)}e.exports=a},Nsbk:e=>{function a(n){return e.exports=a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},a(n)}e.exports=a},"7W2i":(e,a,n)=>{var t=n("SksO");e.exports=function(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&t(e,a)}},EbDI:e=>{e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},m0LI:e=>{e.exports=function(e,a){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],t=!0,i=!1,r=void 0;try{for(var s,l=e[Symbol.iterator]();!(t=(s=l.next()).done)&&(n.push(s.value),!a||n.length!==a);t=!0);}catch(e){i=!0,r=e}finally{try{t||null==l.return||l.return()}finally{if(i)throw r}}return n}}},wkBT:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},Bnag:e=>{e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},QILm:(e,a,n)=>{var t=n("8OQS");e.exports=function(e,a){if(null==e)return{};var n,i,r=t(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}},"8OQS":e=>{e.exports=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}},a1gu:(e,a,n)=>{var t=n("cDf5"),i=n("PJYZ");e.exports=function(e,a){return!a||"object"!==t(a)&&"function"!=typeof a?i(e):a}},SksO:e=>{function a(n,t){return e.exports=a=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e},a(n,t)}e.exports=a},J4zp:(e,a,n)=>{var t=n("wTVA"),i=n("m0LI"),r=n("ZhPi"),s=n("wkBT");e.exports=function(e,a){return t(e)||i(e,a)||r(e,a)||s()}},RIqP:(e,a,n)=>{var t=n("Ijbi"),i=n("EbDI"),r=n("ZhPi"),s=n("Bnag");e.exports=function(e){return t(e)||i(e)||r(e)||s()}},cDf5:e=>{function a(n){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=a=function(e){return typeof e}:e.exports=a=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(n)}e.exports=a},ZhPi:(e,a,n)=>{var t=n("WkPL");e.exports=function(e,a){if(e){if("string"==typeof e)return t(e,a);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,a):void 0}}},yNYU:e=>{"use strict";e.exports=JSON.parse('[{"kind":"primitive","name":"bool"},{"kind":"primitive","name":"ehandle"},{"kind":"primitive","name":"float"},{"kind":"primitive","name":"double"},{"kind":"primitive","name":"handle"},{"kind":"primitive","name":"int"},{"kind":"primitive","name":"nil"},{"kind":"primitive","name":"string"},{"kind":"primitive","name":"table"},{"kind":"primitive","name":"uint"},{"kind":"primitive","name":"unknown"},{"kind":"primitive","name":"Quaternion","description":"There is no known way to create values of this type."},{"kind":"primitive","name":"Vector2D","description":"There is no known way to create values of this type."},{"kind":"nominal","name":"CombatAnalyzerQueryID","baseType":"int"},{"kind":"nominal","name":"CustomGameEventListenerID","baseType":"int"},{"kind":"nominal","name":"EntityIndex","baseType":"int"},{"kind":"nominal","name":"EventListenerID","baseType":"int"},{"kind":"nominal","name":"ParticleID","baseType":"int"},{"kind":"nominal","name":"PlayerID","baseType":"int"},{"kind":"nominal","name":"ProjectileID","baseType":"int"},{"kind":"nominal","name":"SpawnGroupHandle","baseType":"int"},{"kind":"nominal","name":"ViewerID","baseType":"int"},{"kind":"object","name":"LocalTime","fields":[{"name":"Minutes","types":["int"]},{"name":"Seconds","types":["int"]},{"name":"Hours","types":["int"]}]},{"kind":"object","name":"CScriptHTTPResponse","fields":[{"name":"Body","types":["string"]},{"name":"Request","types":["CScriptHTTPRequest"]},{"name":"StatusCode","types":["uint"]}]},{"kind":"object","name":"ApplyDamageOptions","fields":[{"name":"victim","types":["CDOTA_BaseNPC"]},{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"damage","types":["float"]},{"name":"damage_type","types":["DAMAGE_TYPES"]},{"name":"damage_flags","types":["DOTADamageFlag_t","nil"]},{"name":"ability","types":["CDOTABaseAbility","nil"]}]},{"kind":"object","name":"CreateIllusionsModifierKeys","fields":[{"name":"outgoing_damage","types":["float","nil"]},{"name":"incoming_damage","types":["float","nil"]},{"name":"bounty_base","types":["float","nil"]},{"name":"bounty_growth","types":["float","nil"]},{"name":"outgoing_damage_structure","types":["float","nil"]},{"name":"outgoing_damage_roshan","types":["float","nil"]}]},{"kind":"object","name":"EntityBounds","fields":[{"name":"Mins","types":["Vector"]},{"name":"Maxs","types":["Vector"]}]},{"kind":"object","name":"CombatAnalyzerQueryResult","fields":[{"name":"query_id","types":["CombatAnalyzerQueryID"]}]},{"kind":"object","name":"ExecuteOrderOptions","fields":[{"name":"UnitIndex","types":["EntityIndex"]},{"name":"OrderType","types":["dotaunitorder_t"]},{"name":"TargetIndex","types":["EntityIndex","nil"],"description":"Only used when targeting units."},{"name":"AbilityIndex","types":["EntityIndex","nil"],"description":"Only used when casting abilities."},{"name":"Position","types":["Vector","nil"],"description":"Only used when targeting the ground."},{"name":"Queue","types":["bool","nil"],"description":"Used for queueing up abilities."}]},{"kind":"object","name":"TraceCollideableInputs","fields":[{"name":"startpos","types":["Vector"]},{"name":"endpos","types":["Vector"]},{"name":"ent","types":["CBaseEntity"]},{"name":"mins","types":["unknown","nil"]},{"name":"maxs","types":["unknown","nil"]}]},{"kind":"object","name":"TraceCollideableOutputs","extend":["TraceCollideableInputs"],"fields":[{"name":"hit","types":["bool"]},{"name":"pos","types":["Vector"]},{"name":"normal","types":["Vector"]},{"name":"fraction","types":["float"]}]},{"kind":"object","name":"TraceHullInputs","fields":[{"name":"startpos","types":["Vector"]},{"name":"endpos","types":["Vector"]},{"name":"min","types":["unknown"]},{"name":"max","types":["unknown"]},{"name":"mask","types":["unknown","nil"]},{"name":"ignore","types":["unknown","nil"]}]},{"kind":"object","name":"TraceHullOutputs","extend":["TraceHullInputs"],"fields":[{"name":"hit","types":["bool"]},{"name":"startsolid","types":["bool"]},{"name":"pos","types":["Vector"]},{"name":"normal","types":["Vector"]},{"name":"fraction","types":["float"]},{"name":"enthit","types":["CBaseEntity","nil"]}]},{"kind":"object","name":"TraceLineInputs","fields":[{"name":"startpos","types":["Vector"]},{"name":"endpos","types":["Vector"]},{"name":"mask","types":["unknown","nil"]},{"name":"ignore","types":["unknown","nil"]}]},{"kind":"object","name":"TraceLineOutputs","extend":["TraceLineInputs"],"fields":[{"name":"hit","types":["bool"]},{"name":"startsolid","types":["bool"]},{"name":"pos","types":["Vector"]},{"name":"normal","types":["Vector"]},{"name":"fraction","types":["float"]},{"name":"enthit","types":["CBaseEntity","nil"]}]},{"kind":"object","name":"CreateBaseProjectileOptions","fields":[{"name":"EffectName","types":["string","nil"]},{"name":"Ability","types":["CDOTABaseAbility","nil"]},{"name":"Source","types":["CDOTA_BaseNPC","nil"]},{"name":"bProvidesVision","types":["bool","nil"]},{"name":"iVisionRadius","types":["uint","nil"]},{"name":"iVisionTeamNumber","types":["DOTATeam_t","nil"]},{"name":"ExtraData","types":["table","nil"],"description":"Extra data associated with projectile instance, that is passed to `OnProjectileThink_ExtraData` and `OnProjectileHit_ExtraData`."}]},{"kind":"object","name":"CreateLinearProjectileOptions","extend":["CreateBaseProjectileOptions"],"fields":[{"name":"vSpawnOrigin","types":["Vector","nil"]},{"name":"vVelocity","types":["Vector","nil"]},{"name":"vAcceleration","types":["Vector","nil"],"description":"Velocity change per second."},{"name":"fMaxSpeed","types":["float","nil"]},{"name":"fDistance","types":["float","nil"]},{"name":"fStartRadius","types":["float","nil"]},{"name":"fEndRadius","types":["float","nil"]},{"name":"fExpireTime","types":["float","nil"]},{"name":"iUnitTargetTeam","types":["DOTA_UNIT_TARGET_TEAM","nil"]},{"name":"iUnitTargetFlags","types":["DOTA_UNIT_TARGET_FLAGS","nil"]},{"name":"iUnitTargetType","types":["DOTA_UNIT_TARGET_TYPE","nil"]},{"name":"bIgnoreSource","types":["bool","nil"]},{"name":"bHasFrontalCone","types":["bool","nil"]},{"name":"bDrawsOnMinimap","types":["bool","nil"],"description":"@default false"},{"name":"bVisibleToEnemies","types":["bool","nil"],"description":"Makes it invisible for all teams."}]},{"kind":"object","name":"CreateTrackingProjectileOptions","extend":["CreateBaseProjectileOptions"],"fields":[{"name":"vSourceLoc","types":["Vector","nil"]},{"name":"Target","types":["CDOTA_BaseNPC","nil"]},{"name":"iMoveSpeed","types":["int","nil"]},{"name":"flExpireTime","types":["float","nil"]},{"name":"bDodgeable","types":["bool","nil"]},{"name":"bIsAttack","types":["bool","nil"]},{"name":"bReplaceExisting","types":["bool","nil"],"description":"When enabled replaces existing projectile from the ability. Does not destroy the particle.\\n@default false"},{"name":"bIgnoreObstructions","types":["bool","nil"]},{"name":"bSuppressTargetCheck","types":["bool","nil"]},{"name":"iSourceAttachment","types":["DOTAProjectileAttachment_t","nil"]},{"name":"bDrawsOnMinimap","types":["bool","nil"],"description":"@default false"},{"name":"bVisibleToEnemies","types":["bool","nil"],"description":"@default true"}]},{"kind":"object","name":"AbilityTuningValueFilterEvent","fields":[{"name":"entindex_caster_const","types":["EntityIndex"]},{"name":"entindex_ability_const","types":["EntityIndex"]},{"name":"value_name_const","types":["string"]},{"name":"value","types":["int"]}]},{"kind":"object","name":"BountyRunePickupFilterEvent","fields":[{"name":"player_id_const","types":["PlayerID"]},{"name":"xp_bounty","types":["int"]},{"name":"gold_bounty","types":["int"]}]},{"kind":"object","name":"DamageFilterEvent","fields":[{"name":"entindex_attacker_const","types":["EntityIndex"]},{"name":"entindex_victim_const","types":["EntityIndex"]},{"name":"entindex_inflictor_const","types":["EntityIndex","nil"]},{"name":"damagetype_const","types":["DAMAGE_TYPES"]},{"name":"damage","types":["float"]}]},{"kind":"object","name":"ExecuteOrderFilterEvent","fields":[{"name":"units","types":[{"kind":"table","key":["string"],"value":["EntityIndex"]}]},{"name":"entindex_target","types":["EntityIndex"]},{"name":"entindex_ability","types":["EntityIndex"]},{"name":"issuer_player_id_const","types":["PlayerID"]},{"name":"sequence_number_const","types":["uint"]},{"name":"queue","types":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"name":"order_type","types":["dotaunitorder_t"]},{"name":"position_x","types":["float"]},{"name":"position_y","types":["float"]},{"name":"position_z","types":["float"]}]},{"kind":"object","name":"HealingFilterEvent","fields":[{"name":"entindex_target_const","types":["EntityIndex"]},{"name":"heal","types":["int"]}]},{"kind":"object","name":"ItemAddedToInventoryFilterEvent","fields":[{"name":"inventory_parent_entindex_const","types":["EntityIndex"]},{"name":"item_parent_entindex_const","types":["EntityIndex"]},{"name":"item_entindex_const","types":["EntityIndex"]},{"name":"suggested_slot","types":[{"kind":"literal","value":-1},"DOTAScriptInventorySlot_t"]}]},{"kind":"object","name":"ModifierGainedFilterEvent","fields":[{"name":"entindex_caster_const","types":["EntityIndex"]},{"name":"entindex_parent_const","types":["EntityIndex"]},{"name":"entindex_ability_const","types":["EntityIndex"]},{"name":"name_const","types":["string"]},{"name":"duration","types":["int"],"description":"-1 means forever. All other values less or equal to 0 would be equal to 1 frame."}]},{"kind":"object","name":"ModifyExperienceFilterEvent","fields":[{"name":"hero_entindex_const","types":["EntityIndex"]},{"name":"player_id_const","types":["PlayerID"]},{"name":"reason_const","types":["EDOTA_ModifyXP_Reason"]},{"name":"experience","types":["int"]}]},{"kind":"object","name":"ModifyGoldFilterEvent","fields":[{"name":"player_id_const","types":["PlayerID"]},{"name":"reason_const","types":["EDOTA_ModifyGold_Reason"]},{"name":"reliable","types":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"name":"gold","types":["uint"]}]},{"kind":"object","name":"RuneSpawnFilterEvent","fields":[{"name":"spawner_entindex_const","types":["EntityIndex"]},{"name":"rune_type","types":["DOTA_RUNES"]}]},{"kind":"object","name":"TrackingProjectileFilterEvent","fields":[{"name":"entindex_source_const","types":["EntityIndex"]},{"name":"entindex_target_const","types":["EntityIndex"]},{"name":"entindex_ability_const","types":["EntityIndex"]},{"name":"is_attack","types":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"name":"dodgeable","types":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"name":"max_impact_time","types":["int"]},{"name":"move_speed","types":["int"]},{"name":"expire_time","types":["int"]}]},{"kind":"object","name":"ModifierAttackEvent","fields":[{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"damage","types":["float"]},{"name":"damage_type","types":["DAMAGE_TYPES"]},{"name":"damage_category","types":["DamageCategory_t"]},{"name":"damage_flags","types":["DOTADamageFlag_t"]},{"name":"inflictor","types":["CDOTABaseAbility","nil"]},{"name":"original_damage","types":["float"]},{"name":"ranged_attack","types":["bool"]},{"name":"target","types":["CDOTA_BaseNPC"]},{"name":"no_attack_cooldown","types":["bool"]},{"name":"record","types":["int"]},{"name":"fail_type","types":["attackfail"]}]},{"kind":"object","name":"ModifierInstanceEvent","fields":[{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"damage","types":["float"]},{"name":"damage_type","types":["DAMAGE_TYPES"]},{"name":"damage_category","types":["DamageCategory_t"]},{"name":"damage_flags","types":["DOTADamageFlag_t"]},{"name":"inflictor","types":["CDOTABaseAbility","nil"]},{"name":"original_damage","types":["float"]},{"name":"ranged_attack","types":["bool"]},{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"no_attack_cooldown","types":["bool"]},{"name":"record","types":["int"]},{"name":"fail_type","types":["attackfail"]}]},{"kind":"object","name":"ModifierUnitEvent","fields":[{"name":"new_pos","types":["Vector"]},{"name":"order_type","types":["dotaunitorder_t"]},{"name":"unit","types":["CDOTA_BaseNPC"]}]},{"kind":"object","name":"ModifierAbilityEvent","extend":["ModifierUnitEvent"],"fields":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"target","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"object","name":"ModifierOverrideAbilitySpecialEvent","fields":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"ability_special_value","types":["string"]},{"name":"ability_special_level","types":["int"]}]},{"kind":"object","name":"ModifierAddedEvent","fields":[{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"added_buff","types":["CDOTA_Buff"]}]},{"kind":"object","name":"SpawnEntityFromTableOptions","fields":[{"name":"origin","types":["string","Vector","nil"]},{"name":"angles","types":["string","QAngle","nil"]},{"name":"scales","types":["string","Vector","nil"]},{"name":"targetname","types":["string","nil"]},{"name":"vscripts","types":["string","nil"]}]},{"kind":"object","name":"CreateUnitFromTableOptions","extend":["SpawnEntityFromTableOptions"],"fields":[{"name":"MapUnitName","types":["string"]},{"name":"teamnumber","types":["DOTATeam_t","nil"]},{"name":"modelscale","types":["int","nil"]},{"name":"initial_waypoint","types":["string","nil"],"description":"targetname of path_corner or path_track"},{"name":"EnableAutoStyles","types":["string","nil"]},{"name":"rendercolor","types":["string","nil"],"description":"RGB, example: \\"255 255 255\\""},{"name":"skin","types":["int","nil"]},{"name":"NeverMoveToClearSpace","types":["bool","nil"]}]}]')},CBiV:e=>{"use strict";e.exports=JSON.parse('[{"kind":"class","name":"CBaseAnimating","clientName":"C_BaseAnimating","extend":"CBaseModelEntity","members":[{"kind":"function","name":"ActiveSequenceDuration","available":"server","description":"Returns the duration in seconds of the active sequence.","returns":["float"],"args":[]},{"kind":"function","name":"GetCycle","available":"server","description":"Get the cycle of the animation.","returns":["float"],"args":[]},{"kind":"function","name":"GetGraphParameter","available":"server","description":"Get the value of the given animGraph parameter.","returns":["table"],"args":[{"name":"param","types":["string"]}]},{"kind":"function","name":"GetSequence","available":"server","description":"Returns the name of the active sequence.","returns":["string"],"args":[]},{"kind":"function","name":"IsSequenceFinished","available":"server","description":"Ask whether the main sequence is done playing.","returns":["bool"],"args":[]},{"kind":"function","name":"ResetSequence","available":"server","description":"Sets the active sequence by name, resetting the current cycle.","returns":["nil"],"args":[{"name":"sequenceName","types":["string"]}]},{"kind":"function","name":"SequenceDuration","available":"server","description":"Returns the duration in seconds of the given sequence name.","returns":["float"],"args":[{"name":"sequenceName","types":["string"]}]},{"kind":"function","name":"SetCycle","available":"server","description":"Set the cycle of the animation.","returns":["nil"],"args":[{"name":"cycle","types":["float"]}]},{"kind":"function","name":"SetGraphLookTarget","available":"server","description":"Pass the desired look target in world space to the graph.","returns":["nil"],"args":[{"name":"value","types":["Vector"]}]},{"kind":"function","name":"SetGraphParameter","available":"server","description":"Set the specific param value, type is inferred from the type in script.","returns":["nil"],"args":[{"name":"param","types":["string"]},{"name":"svArg","types":["table"]}]},{"kind":"function","name":"SetGraphParameterBool","available":"server","description":"Set the specific param on or off.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["bool"]}]},{"kind":"function","name":"SetGraphParameterEnum","available":"server","description":"Pass the enum (int) value to the specified param.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"SetGraphParameterFloat","available":"server","description":"Pass the float value to the specified param.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["float"]}]},{"kind":"function","name":"SetGraphParameterInt","available":"server","description":"Pass the int value to the specified param.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"SetGraphParameterVector","available":"server","description":"Pass the vector value to the specified param in the graph.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["Vector"]}]},{"kind":"function","name":"SetPoseParameter","available":"server","description":"Set the specified pose parameter to the specified value.","returns":["float"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["float"]}]},{"kind":"function","name":"SetSequence","available":"server","description":"Sets the active sequence by name, keeping the current cycle.","returns":["nil"],"args":[{"name":"sequenceName","types":["string"]}]},{"kind":"function","name":"StopAnimation","available":"server","description":"Stop the current animation by setting playback rate to 0.0.","returns":["nil"],"args":[]}]},{"kind":"class","name":"CBaseCombatCharacter","clientName":"C_BaseCombatCharacter","extend":"CBaseFlex","members":[]},{"kind":"class","name":"CBaseEntity","clientName":"C_BaseEntity","extend":"CEntityInstance","members":[{"kind":"function","name":"AddEffects","available":"server","description":"Adds the render effect flag.","returns":["nil"],"args":[{"name":"flags","types":["EntityEffects"]}]},{"kind":"function","name":"ApplyAbsVelocityImpulse","available":"server","description":"Apply a Velocity Impulse.","returns":["nil"],"args":[{"name":"vecImpulse","types":["Vector"]}]},{"kind":"function","name":"ApplyLocalAngularVelocityImpulse","available":"server","description":"Apply an Ang Velocity Impulse.","returns":["nil"],"args":[{"name":"angImpulse","types":["Vector"]}]},{"kind":"function","name":"Attribute_GetFloatValue","available":"server","description":"Get float value for an entity attribute.","returns":["float"],"args":[{"name":"name","types":["string"]},{"name":"default","types":["float"]}]},{"kind":"function","name":"Attribute_GetIntValue","available":"server","description":"Get int value for an entity attribute.","returns":["int"],"args":[{"name":"name","types":["string"]},{"name":"default","types":["int"]}]},{"kind":"function","name":"Attribute_SetFloatValue","available":"server","description":"Set float value for an entity attribute.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["float"]}]},{"kind":"function","name":"Attribute_SetIntValue","available":"server","description":"Set int value for an entity attribute.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"DeleteAttribute","available":"server","description":"Delete an entity attribute.","returns":["nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"EmitSound","available":"server","description":"Plays a sound from this entity.","returns":["nil"],"args":[{"name":"soundname","types":["string"]}]},{"kind":"function","name":"EmitSoundParams","available":"server","description":"Plays/modifies a sound from this entity. changes sound if nPitch and/or flVol or flSoundTime is > 0.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"pitch","types":["int"]},{"name":"volume","types":["float"]},{"name":"delay","types":["float"]}]},{"kind":"function","name":"EyeAngles","available":"server","description":"Get the qangles that this entity is looking at.","returns":["QAngle"],"args":[]},{"kind":"function","name":"EyePosition","available":"server","description":"Get vector to eye position - absolute coords.","returns":["Vector"],"args":[]},{"kind":"function","name":"FirstMoveChild","available":"server","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"FollowEntity","available":"server","returns":["nil"],"args":[{"name":"entity","types":["CBaseEntity"]},{"name":"boneMerge","types":["bool"]}]},{"kind":"function","name":"GatherCriteria","available":"server","description":"Returns a table containing the criteria that would be used for response queries on this entity. This is the same as the table that is passed to response rule script function callbacks.","returns":["nil"],"args":[{"name":"result","types":["handle"]}]},{"kind":"function","name":"GetAbsOrigin","available":"both","returns":["Vector"],"args":[]},{"kind":"function","name":"GetAbsScale","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetAngles","available":"server","returns":["QAngle"],"args":[]},{"kind":"function","name":"GetAnglesAsVector","available":"server","description":"Get entity pitch, yaw, roll as a vector.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetAngularVelocity","available":"server","description":"Get the local angular velocity - returns a vector of pitch,yaw,roll.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetBaseVelocity","available":"server","description":"Get Base? velocity.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetBoundingMaxs","available":"server","description":"Get a vector containing max bounds, centered on object.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetBoundingMins","available":"server","description":"Get a vector containing min bounds, centered on object.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetBounds","available":"server","description":"Get a table containing the \'Mins\' & \'Maxs\' vector bounds, centered on object.","returns":["EntityBounds"],"args":[]},{"kind":"function","name":"GetCenter","available":"server","description":"Get vector to center of object - absolute coords.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetChildren","available":"server","description":"Get the entities parented to this entity.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[]},{"kind":"function","name":"GetContext","available":"server","description":"Looks up a context and returns it if available. May return string, float, or null (if the context isn\'t found).","returns":["string","float","nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"GetForwardVector","available":"server","description":"Get the forward vector of the entity.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetHealth","available":"both","description":"Get the health of this entity.","returns":["int"],"args":[]},{"kind":"function","name":"GetLocalAngles","available":"server","description":"Get entity local pitch, yaw, roll as a QAngle.","returns":["QAngle"],"args":[]},{"kind":"function","name":"GetLocalAngularVelocity","available":"server","description":"Maybe local angvel.","returns":["QAngle"],"args":[]},{"kind":"function","name":"GetLocalOrigin","available":"server","description":"Get entity local origin as a Vector.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetLocalScale","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetLocalVelocity","available":"server","description":"Get Entity relative velocity.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetMass","available":"server","description":"Get the mass of an entity. (returns 0 if it doesn\'t have a physics object).","returns":["float"],"args":[]},{"kind":"function","name":"GetMaxHealth","available":"both","description":"Get the maximum health of this entity.","returns":["int"],"args":[]},{"kind":"function","name":"GetModelName","available":"server","description":"Returns the name of the model.","returns":["string"],"args":[]},{"kind":"function","name":"GetMoveParent","available":"server","description":"If in hierarchy, retrieves the entity\'s parent.","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"GetOrigin","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"GetOwner","available":"server","description":"Gets this entity\'s owner.","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"GetOwnerEntity","available":"server","description":"Get the owner entity, if there is one.","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"GetRightVector","available":"server","description":"Get the right vector of the entity.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetRootMoveParent","available":"server","description":"If in hierarchy, walks up the hierarchy to find the root parent.","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"GetSoundDuration","available":"server","description":"Returns float duration of the sound. Takes soundname and optional actormodelname.","returns":["float"],"args":[{"name":"soundname","types":["string"]},{"name":"actormodel","types":["string"]}]},{"kind":"function","name":"GetSpawnGroupHandle","available":"server","description":"Returns the spawn group handle of this entity.","returns":["SpawnGroupHandle"],"args":[]},{"kind":"function","name":"GetTeam","available":"server","description":"Get the team number of this entity.","returns":["DOTATeam_t"],"args":[]},{"kind":"function","name":"GetTeamNumber","available":"both","description":"Get the team number of this entity.","returns":["DOTATeam_t"],"args":[]},{"kind":"function","name":"GetUpVector","available":"server","description":"Get the up vector of the entity.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetVelocity","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"HasAttribute","available":"server","description":"See if an entity has a particular attribute.","returns":["bool"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"IsAlive","available":"server","description":"Is this entity alive?","returns":["bool"],"args":[]},{"kind":"function","name":"IsBaseNPC","available":"both","description":"Is this entity an CDOTA_BaseNPC?","returns":["bool"],"args":[]},{"kind":"function","name":"IsDOTANPC","available":"server","description":"Is this entity a Dota NPC?","returns":["bool"],"args":[]},{"kind":"function","name":"IsInstance","available":"both","returns":["bool"],"args":[{"name":"classOrClassName","types":["string","table"]}]},{"kind":"function","name":"IsNPC","available":"server","description":"Is this entity an CAI_BaseNPC?","returns":["bool"],"args":[]},{"kind":"function","name":"IsPlayer","available":"server","description":"Back compat: Is this entity a player pawn *or* controller?","returns":["bool"],"args":[]},{"kind":"function","name":"IsPlayerController","available":"server","description":"Is this entity a player controller?","returns":["bool"],"args":[]},{"kind":"function","name":"IsPlayerPawn","available":"server","description":"Is this entity a player pawn?","returns":["bool"],"args":[]},{"kind":"function","name":"Kill","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"NextMovePeer","available":"server","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"OverrideFriction","available":"server","description":"Takes duration, value for a temporary override.","returns":["nil"],"args":[{"name":"duration","types":["float"]},{"name":"friction","types":["float"]}]},{"kind":"function","name":"PrecacheScriptSound","available":"server","description":"Precache a sound for later playing.","returns":["nil"],"args":[{"name":"soundname","types":["string"]}]},{"kind":"function","name":"RemoveEffects","available":"server","description":"Removes the render effect flag.","returns":["nil"],"args":[{"name":"flags","types":["EntityEffects"]}]},{"kind":"function","name":"SetAbsAngles","available":"server","description":"Set entity pitch, yaw, roll by component.","returns":["nil"],"args":[{"name":"pitch","types":["float"]},{"name":"yaw","types":["float"]},{"name":"roll","types":["float"]}]},{"kind":"function","name":"SetAbsOrigin","available":"server","returns":["nil"],"args":[{"name":"origin","types":["Vector"]}]},{"kind":"function","name":"SetAbsScale","available":"server","returns":["nil"],"args":[{"name":"scale","types":["float"]}]},{"kind":"function","name":"SetAngles","available":"server","description":"Set entity pitch, yaw, roll by component.","returns":["nil"],"args":[{"name":"pitch","types":["float"]},{"name":"yaw","types":["float"]},{"name":"roll","types":["float"]}]},{"kind":"function","name":"SetAngularVelocity","available":"server","description":"Set the local angular velocity.","returns":["nil"],"args":[{"name":"pitchVel","types":["float"]},{"name":"yawVel","types":["float"]},{"name":"rollVel","types":["float"]}]},{"kind":"function","name":"SetConstraint","available":"server","description":"Set the position of the constraint.","returns":["nil"],"args":[{"name":"pos","types":["Vector"]}]},{"kind":"function","name":"SetContext","available":"server","description":"Store any key/value pair in this entity\'s dialog contexts. Value must be a string. Will last for duration (set 0 to mean \'forever\').","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["string"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"SetContextNum","available":"server","description":"Store any key/value pair in this entity\'s dialog contexts. Value must be a number (int or float). Will last for duration (set 0 to mean \'forever\').","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["float"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"SetContextThink","available":"both","description":"Set a think function on this entity.","returns":["nil"],"args":[{"name":"contextName","types":["string"]},{"name":"thinkFunc","types":[{"kind":"function","returns":["float","nil"],"args":[{"name":"entity","types":["CBaseEntity"]}]},"nil"]},{"name":"interval","types":["float"]}]},{"kind":"function","name":"SetEntityName","available":"server","description":"Set the name of an entity.","returns":["nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"SetForwardVector","available":"server","description":"Set the orientation of the entity to have this forward vector.","returns":["nil"],"args":[{"name":"v","types":["Vector"]}]},{"kind":"function","name":"SetFriction","available":"server","description":"Set PLAYER friction, ignored for objects.","returns":["nil"],"args":[{"name":"friction","types":["float"]}]},{"kind":"function","name":"SetGravity","available":"server","description":"Set PLAYER gravity, ignored for objects.","returns":["nil"],"args":[{"name":"gravity","types":["float"]}]},{"kind":"function","name":"SetHealth","available":"server","description":"Set the health of this entity.","returns":["nil"],"args":[{"name":"health","types":["int"]}]},{"kind":"function","name":"SetLocalAngles","available":"server","description":"Set entity local pitch, yaw, roll by component.","returns":["nil"],"args":[{"name":"pitch","types":["float"]},{"name":"yaw","types":["float"]},{"name":"roll","types":["float"]}]},{"kind":"function","name":"SetLocalOrigin","available":"server","description":"Set entity local origin from a Vector.","returns":["nil"],"args":[{"name":"origin","types":["Vector"]}]},{"kind":"function","name":"SetLocalScale","available":"server","returns":["nil"],"args":[{"name":"scale","types":["float"]}]},{"kind":"function","name":"SetMass","available":"server","description":"Set the mass of an entity. (does nothing if it doesn\'t have a physics object).","returns":["nil"],"args":[{"name":"mass","types":["float"]}]},{"kind":"function","name":"SetMaxHealth","available":"server","description":"Set the maximum health of this entity.","returns":["nil"],"args":[{"name":"amt","types":["int"]}]},{"kind":"function","name":"SetOrigin","available":"server","returns":["nil"],"args":[{"name":"v","types":["Vector"]}]},{"kind":"function","name":"SetOwner","available":"server","description":"Sets this entity\'s owner. This entity will be returned by GetOwner() and GetOwnerEntity(). GetPlayerOwner() and GetPlayerOwnerID() will be automatically inferred from this entity.","returns":["nil"],"args":[{"name":"owner","types":["CBaseEntity"]}]},{"kind":"function","name":"SetParent","available":"server","description":"Set the parent for this entity.","returns":["nil"],"args":[{"name":"parent","types":["CBaseEntity"]},{"name":"attachmentname","types":["string"]}]},{"kind":"function","name":"SetTeam","available":"server","returns":["nil"],"args":[{"name":"teamNum","types":["DOTATeam_t"]}]},{"kind":"function","name":"SetThink","available":"both","description":"Set a think function on this entity. Uses `CBaseEntity:SetContextThink` internally.\\nNote: optional parameters can be given in any order.","returns":["nil"],"args":[{"name":"functionName","types":[{"kind":"function","returns":["float","nil"],"args":[{"name":"entity","types":["CBaseEntity"]}]},"string"],"description":"If `context` is provided, think function would perform a dynamic lookup on `context` table. Otherwise searches for that function name in caller scope."},{"name":"context","types":["table","nil"]},{"name":"contextName","types":["string","nil"],"description":"Defaults to `functionName` if it\'s a string."},{"name":"initialDelay","types":["float","nil"],"description":"Defaults to 0 (next game frame)."}]},{"kind":"function","name":"SetVelocity","available":"server","returns":["nil"],"args":[{"name":"vecVelocity","types":["Vector"]}]},{"kind":"function","name":"StopSound","available":"server","description":"Stops a named sound playing from this entity.","returns":["nil"],"args":[{"name":"soundname","types":["string"]}]},{"kind":"function","name":"StopThink","available":"both","description":"Stops thinker created with `CBaseEntity.SetThink`.\\nAlias for `CBaseEntity:SetContextThink(contextName, nil, 0)`.","returns":["nil"],"args":[{"name":"contextName","types":["string"]}]},{"kind":"function","name":"TakeDamage","available":"server","description":"Apply damage to this entity. Use CreateDamageInfo() to create a damageinfo object.","returns":["int"],"args":[{"name":"damageInfo","types":["CTakeDamageInfo"]}]},{"kind":"function","name":"TransformPointEntityToWorld","available":"server","description":"Returns the input Vector transformed from entity to world space.","returns":["Vector"],"args":[{"name":"point","types":["Vector"]}]},{"kind":"function","name":"TransformPointWorldToEntity","available":"server","description":"Returns the input Vector transformed from world to entity space.","returns":["Vector"],"args":[{"name":"point","types":["Vector"]}]},{"kind":"function","name":"Trigger","available":"server","description":"Fires off this entity\'s OnTrigger responses.","returns":["nil"],"args":[]},{"kind":"function","name":"ValidatePrivateScriptScope","available":"server","description":"Validates the private script scope and creates it if one doesn\'t exist.","returns":["nil"],"args":[]}]},{"kind":"class","name":"CBaseFlex","clientName":"C_BaseFlex","extend":"CBaseAnimating","members":[{"kind":"function","name":"GetCurrentScene","available":"server","description":"Returns the instance of the oldest active scene entity (if any).","returns":["CSceneEntity","nil"],"args":[]},{"kind":"function","name":"GetSceneByIndex","available":"server","description":"Returns the instance of the scene entity at the specified index.","returns":["CSceneEntity","nil"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"ScriptPlayScene","available":"server","description":"Play specified vcd file.","returns":["float"],"args":[{"name":"scene","types":["string"]},{"name":"delay","types":["float"]}]}]},{"kind":"class","name":"CBaseModelEntity","clientName":"C_BaseModelEntity","extend":"CBaseEntity","members":[{"kind":"function","name":"GetAttachmentAngles","available":"server","description":"Get the attachment id\'s angles as a p,y,r vector.","returns":["Vector"],"args":[{"name":"attachment","types":["int"]}]},{"kind":"function","name":"GetAttachmentForward","available":"server","description":"Get the attachment id\'s forward vector.","returns":["Vector"],"args":[{"name":"attachment","types":["int"]}]},{"kind":"function","name":"GetAttachmentOrigin","available":"server","description":"Get the attachment id\'s origin vector.","returns":["Vector"],"args":[{"name":"attachment","types":["int"]}]},{"kind":"function","name":"GetMaterialGroupHash","available":"server","description":"Get the material group hash of this entity.","returns":["uint"],"args":[]},{"kind":"function","name":"GetMaterialGroupMask","available":"server","description":"Get the mesh group mask of this entity.","returns":["Uint64"],"args":[]},{"kind":"function","name":"GetModelScale","available":"server","description":"Get scale of entity\'s model.","returns":["float"],"args":[]},{"kind":"function","name":"GetRenderAlpha","available":"both","description":"Get the alpha modulation of this entity.","returns":["int"],"args":[]},{"kind":"function","name":"GetRenderColor","available":"server","description":"Get the render color of the entity.","returns":["Vector"],"args":[]},{"kind":"function","name":"ScriptLookupAttachment","available":"server","description":"Get the named attachment id.","returns":["int"],"args":[{"name":"attachmentName","types":["string"]}]},{"kind":"function","name":"SetBodygroup","available":"server","description":"Sets a bodygroup.","returns":["nil"],"args":[{"name":"group","types":["int"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"SetBodygroupByName","available":"server","description":"Sets a bodygroup by name.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"SetLightGroup","available":"server","description":"Sets the light group of the entity.","returns":["nil"],"args":[{"name":"lightGroup","types":["string"]}]},{"kind":"function","name":"SetMaterialGroup","available":"server","description":"Set the material group of this entity.","returns":["nil"],"args":[{"name":"materialGroup","types":["string"]}]},{"kind":"function","name":"SetMaterialGroupHash","available":"server","description":"Set the material group hash of this entity.","returns":["nil"],"args":[{"name":"hash","types":["uint"]}]},{"kind":"function","name":"SetMaterialGroupMask","available":"server","description":"Set the mesh group mask of this entity.","returns":["nil"],"args":[{"name":"meshGroupMask","types":["Uint64"]}]},{"kind":"function","name":"SetModel","available":"server","returns":["nil"],"args":[{"name":"modelName","types":["string"]}]},{"kind":"function","name":"SetModelScale","available":"server","description":"Set scale of entity\'s model.","returns":["nil"],"args":[{"name":"scale","types":["float"]}]},{"kind":"function","name":"SetRenderAlpha","available":"server","description":"Set the alpha modulation of this entity.","returns":["nil"],"args":[{"name":"alpha","types":["int"]}]},{"kind":"function","name":"SetRenderColor","available":"server","description":"Sets the render color of the entity.","returns":["nil"],"args":[{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]}]},{"kind":"function","name":"SetRenderMode","available":"server","description":"Sets the render mode of the entity.","returns":["nil"],"args":[{"name":"mode","types":["int"]}]},{"kind":"function","name":"SetSingleMeshGroup","available":"server","description":"Set a single mesh group for this entity.","returns":["nil"],"args":[{"name":"meshGroupName","types":["string"]}]},{"kind":"function","name":"SetSize","available":"server","returns":["nil"],"args":[{"name":"mins","types":["Vector"]},{"name":"maxs","types":["Vector"]}]},{"kind":"function","name":"SetSkin","available":"server","returns":["nil"],"args":[{"name":"skin","types":["int"]}]}]},{"kind":"class","name":"CBasePlayerController","extend":"CBaseEntity","members":[{"kind":"function","name":"GetPawn","available":"server","description":"Returns the pawn for this controller.","returns":["handle"],"args":[]}]},{"kind":"class","name":"CBasePlayerPawn","extend":"CBaseCombatCharacter","members":[{"kind":"function","name":"GetController","available":"server","description":"Returns the controller for this pawn.","returns":["handle"],"args":[]},{"kind":"function","name":"GetEquippedWeapons","available":"server","description":"Returns an array of all the equipped weapons.","returns":["table"],"args":[]},{"kind":"function","name":"GetWeaponCount","available":"server","description":"Gets the number of weapons currently equipped.","returns":["int"],"args":[]},{"kind":"function","name":"IsNoclipping","available":"server","description":"Returns true if the player is in noclip mode.","returns":["bool"],"args":[]}]},{"kind":"class","name":"CBaseTrigger","extend":"CBaseEntity","members":[{"kind":"function","name":"Disable","available":"server","description":"Disable\'s the trigger.","returns":["nil"],"args":[]},{"kind":"function","name":"Enable","available":"server","description":"Enable the trigger.","returns":["nil"],"args":[]},{"kind":"function","name":"IsTouching","available":"server","description":"Checks whether the passed entity is touching the trigger.","returns":["bool"],"args":[{"name":"ent","types":["CBaseEntity"]}]}]},{"kind":"class","name":"CBodyComponent","clientName":"CBodyComponent","members":[{"kind":"function","name":"AddImpulseAtPosition","available":"both","description":"Apply an impulse at a worldspace position to the physics.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]}]},{"kind":"function","name":"AddVelocity","available":"both","description":"Add linear and angular velocity to the physics object.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]}]},{"kind":"function","name":"DetachFromParent","available":"both","description":"Detach from its parent.","returns":["nil"],"args":[]},{"kind":"function","name":"GetSequence","available":"both","description":"Returns the active sequence.","returns":["int"],"args":[]},{"kind":"function","name":"IsAttachedToParent","available":"both","description":"Is attached to parent.","returns":["bool"],"args":[]},{"kind":"function","name":"LookupSequence","available":"both","description":"Returns a sequence id given a name.","returns":["int"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SequenceDuration","available":"both","description":"Returns the duration in seconds of the specified sequence.","returns":["float"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetAngularVelocity","available":"both","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"SetAnimation","available":"both","description":"Pass string for the animation to play on this model.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetMaterialGroup","available":"both","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetVelocity","available":"both","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]}]}]},{"kind":"class","name":"CCustomGameEventManager","instance":"CustomGameEventManager","members":[{"kind":"function","name":"RegisterListener","available":"server","description":"Register a callback to be called when a particular custom event arrives. Returns a listener ID that can be used to unregister later.","returns":["CustomGameEventListenerID"],"args":[{"name":"eventName","types":["string"]},{"name":"listener","types":[{"kind":"function","returns":["nil"],"args":[{"name":"userId","types":["EntityIndex"]},{"name":"event","types":["table"]}]}]}]},{"kind":"function","name":"Send_ServerToAllClients","available":"server","returns":["nil"],"args":[{"name":"eventName","types":["string"]},{"name":"eventData","types":["table"]}]},{"kind":"function","name":"Send_ServerToPlayer","available":"server","returns":["nil"],"args":[{"name":"player","types":["CDOTAPlayerController"]},{"name":"eventName","types":["string"]},{"name":"eventData","types":["table"]}]},{"kind":"function","name":"Send_ServerToTeam","available":"server","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"eventName","types":["string"]},{"name":"eventData","types":["table"]}]},{"kind":"function","name":"UnregisterListener","available":"server","description":"Unregister a specific listener.","returns":["nil"],"args":[{"name":"listenerId","types":["CustomGameEventListenerID"]}]}]},{"kind":"class","name":"CCustomNetTableManager","clientName":"CCustomNetTableManager","instance":"CustomNetTables","members":[{"kind":"function","name":"GetTableValue","available":"both","returns":["table"],"args":[{"name":"tableName","types":["string"]},{"name":"keyName","types":["string"]}]},{"kind":"function","name":"SetTableValue","available":"server","returns":["bool"],"args":[{"name":"tableName","types":["string"]},{"name":"keyName","types":["string"]},{"name":"value","types":["handle"]}]}]},{"kind":"class","name":"CDebugOverlayScriptHelper","clientName":"CDebugOverlayScriptHelper","instance":"debugoverlay","members":[{"kind":"function","name":"Axis","available":"both","description":"Draws an axis. Specify origin + orientation in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Quaternion"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["bool"]},{"name":"arg5","types":["float"]}]},{"kind":"function","name":"Box","available":"both","description":"Draws a world-space axis-aligned box. Specify bounds in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["bool"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"BoxAngles","available":"both","description":"Draws an oriented box at the origin. Specify bounds in local space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["Quaternion"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["bool"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"Capsule","available":"both","description":"Draws a capsule. Specify base in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Quaternion"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["bool"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"Circle","available":"both","description":"Draws a circle. Specify center in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Quaternion"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["bool"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"CircleScreenOriented","available":"both","description":"Draws a circle oriented to the screen. Specify center in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["bool"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"Cone","available":"both","description":"Draws a wireframe cone. Specify endpoint and direction in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["bool"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"Cross","available":"both","description":"Draws a screen-aligned cross. Specify origin in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["bool"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"Cross3D","available":"both","description":"Draws a world-aligned cross. Specify origin in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["bool"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"Cross3DOriented","available":"both","description":"Draws an oriented cross. Specify origin in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Quaternion"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["bool"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"DrawTickMarkedLine","available":"both","description":"Draws a dashed line. Specify endpoints in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["bool"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"EntityAttachments","available":"both","description":"Draws the attachments of the entity.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["float"]}]},{"kind":"function","name":"EntityAxis","available":"both","description":"Draws the axis of the entity origin.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["bool"]},{"name":"arg4","types":["float"]}]},{"kind":"function","name":"EntityBounds","available":"both","description":"Draws bounds of an entity.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["bool"]},{"name":"arg7","types":["float"]}]},{"kind":"function","name":"EntitySkeleton","available":"both","description":"Draws the skeleton of the entity.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["float"]}]},{"kind":"function","name":"EntityText","available":"both","description":"Draws text on an entity.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"FilledRect2D","available":"both","description":"Draws a screen-space filled 2D rectangle. Coordinates are in pixels.","returns":["nil"],"args":[{"name":"arg1","types":["Vector2D"]},{"name":"arg2","types":["Vector2D"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["float"]}]},{"kind":"function","name":"HorzArrow","available":"both","description":"Draws a horizontal arrow. Specify endpoints in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["bool"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"Line","available":"both","description":"Draws a line between two points.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["bool"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"Line2D","available":"both","description":"Draws a line between two points in screenspace.","returns":["nil"],"args":[{"name":"arg1","types":["Vector2D"]},{"name":"arg2","types":["Vector2D"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["float"]}]},{"kind":"function","name":"PopDebugOverlayScope","available":"both","description":"Pops the identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.","returns":["nil"],"args":[]},{"kind":"function","name":"PushAndClearDebugOverlayScope","available":"both","description":"Pushes an identifier used to group overlays. Deletes all existing overlays using this overlay id.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"PushDebugOverlayScope","available":"both","description":"Pushes an identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"RemoveAllInScope","available":"both","description":"Removes all overlays marked with a specific identifier, regardless of their lifetime.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SolidCone","available":"both","description":"Draws a solid cone. Specify endpoint and direction in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["bool"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"Sphere","available":"both","description":"Draws a wireframe sphere. Specify center in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["bool"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"SweptBox","available":"both","description":"Draws a swept box. Specify endpoints in world space and the bounds in local space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["Vector"]},{"name":"arg5","types":["Quaternion"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["int"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"Text","available":"both","description":"Draws 2D text. Specify origin in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"Texture","available":"both","description":"Draws a screen-space texture. Coordinates are in pixels.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["Vector2D"]},{"name":"arg3","types":["Vector2D"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["Vector2D"]},{"name":"arg9","types":["Vector2D"]},{"name":"arg10","types":["float"]}]},{"kind":"function","name":"Triangle","available":"both","description":"Draws a filled triangle. Specify vertices in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["bool"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"VectorText3D","available":"both","description":"Draws 3D text. Specify origin + orientation in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Quaternion"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["bool"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"VertArrow","available":"both","description":"Draws a vertical arrow. Specify endpoints in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["bool"]},{"name":"arg9","types":["float"]}]},{"kind":"function","name":"YawArrow","available":"both","description":"Draws a arrow associated with a specific yaw. Specify endpoints in world space.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["int"]},{"name":"arg9","types":["bool"]},{"name":"arg10","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Ability_Aghanim_Spear","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"LaunchSpear","available":"server","description":"Launch Spear to a target position from a source position.","returns":["nil"],"args":[{"name":"target","types":["Vector"]},{"name":"start","types":["Vector"]}]}]},{"kind":"class","name":"CDOTA_Ability_Animation_Attack","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"SetPlaybackRate","available":"server","description":"Override playbackrate.","returns":["nil"],"args":[{"name":"rate","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Ability_Animation_TailSpin","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"SetPlaybackRate","available":"server","description":"Override playbackrate.","returns":["nil"],"args":[{"name":"rate","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Ability_DataDriven","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"ApplyDataDrivenModifier","available":"server","description":"Applies a data driven modifier to the target.","returns":["CDOTA_Buff"],"args":[{"name":"caster","types":["CDOTA_BaseNPC"]},{"name":"target","types":["CDOTA_BaseNPC"]},{"name":"modifierName","types":["string"]},{"name":"modifierTable","types":["table","nil"]}]},{"kind":"function","name":"ApplyDataDrivenThinker","available":"server","description":"Applies a data driven thinker at the location.","returns":["CDOTA_Buff"],"args":[{"name":"caster","types":["CDOTA_BaseNPC"]},{"name":"location","types":["Vector"]},{"name":"modifierName","types":["string"]},{"name":"modifierTable","types":["table","nil"]}]}]},{"kind":"class","name":"CDOTA_Ability_Lua","clientName":"C_DOTA_Ability_Lua","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"CastFilterResult","available":"both","description":"Determine whether an issued command with no target is valid.","returns":["UnitFilterResult"],"args":[]},{"kind":"function","name":"CastFilterResultLocation","available":"both","description":"Determine whether an issued command on a location is valid.","returns":["UnitFilterResult"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"CastFilterResultTarget","available":"both","description":"Determine whether an issued command on a target is valid.","returns":["UnitFilterResult"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetAbilityTextureName","available":"client","description":"Allows code overriding of the ability texture shown in the HUD.","returns":["string"],"args":[]},{"kind":"function","name":"GetAOERadius","available":"both","description":"Controls the size of the AOE casting cursor.","returns":["float"],"args":[]},{"kind":"function","name":"GetAssociatedPrimaryAbilities","available":"server","description":"Returns abilities that are stolen simultaneously, or otherwise related in functionality.","returns":["string"],"args":[]},{"kind":"function","name":"GetAssociatedSecondaryAbilities","available":"server","description":"Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.","returns":["string"],"args":[]},{"kind":"function","name":"GetBehavior","available":"both","description":"Return cast behavior type of this ability.","returns":["DOTA_ABILITY_BEHAVIOR"],"args":[]},{"kind":"function","name":"GetCastAnimation","available":"server","description":"Return casting animation of this ability.","returns":["GameActivity_t"],"args":[]},{"kind":"function","name":"GetCastPoint","available":"both","description":"Return cast point of this ability.","returns":["float"],"args":[]},{"kind":"function","name":"GetCastRange","available":"both","description":"Return cast range of this ability.","returns":["int"],"args":[{"name":"location","types":["Vector"]},{"name":"target","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"GetCastRangeBonus","available":"both","returns":["int"],"args":[{"name":"target","types":["handle"]},{"name":"pseudoCastRange","types":["int"]}]},{"kind":"function","name":"GetChannelAnimation","available":"server","description":"Return channel animation of this ability.","returns":["GameActivity_t"],"args":[]},{"kind":"function","name":"GetChannelledManaCostPerSecond","available":"both","description":"Return mana cost at the given level per second while channeling (-1 is current).","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetChannelTime","available":"both","description":"Return the channel time of this ability.","returns":["float"],"args":[]},{"kind":"function","name":"GetConceptRecipientType","available":"server","description":"Return who hears speech when this spell is cast.","returns":["int"],"args":[]},{"kind":"function","name":"GetCooldown","available":"both","description":"Return cooldown of this ability.","returns":["float"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetCustomCastError","available":"both","description":"Return the error string of a failed command with no target.","returns":["string"],"args":[]},{"kind":"function","name":"GetCustomCastErrorLocation","available":"both","description":"Return the error string of a failed command on a location.","returns":["string"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"GetCustomCastErrorTarget","available":"both","description":"Return the error string of a failed command on a target.","returns":["string"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetEffectiveCastRange","available":"both","description":"Return cast range of this ability, accounting for modifiers.","returns":["int"],"args":[{"name":"location","types":["Vector"]},{"name":"target","types":["handle"]}]},{"kind":"function","name":"GetGoldCost","available":"both","description":"Return gold cost at the given level (-1 is current).","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetIntrinsicModifierName","available":"server","description":"Returns the name of the modifier applied passively by this ability.","returns":["string"],"args":[]},{"kind":"function","name":"GetManaCost","available":"both","description":"Return mana cost at the given level (-1 is current).","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetPlaybackRateOverride","available":"server","description":"Return the animation rate of the cast animation.","returns":["float"],"args":[]},{"kind":"function","name":"IsCosmetic","available":"server","description":"Is this a cosmetic only ability?","returns":["bool"],"args":[{"name":"entity","types":["handle"]}]},{"kind":"function","name":"IsHiddenAbilityCastable","available":"both","description":"Returns true if this ability can be used when not on the action panel.","returns":["bool"],"args":[]},{"kind":"function","name":"IsHiddenWhenStolen","available":"server","description":"Returns true if this ability is hidden when stolen by Spell Steal.","returns":["bool"],"args":[]},{"kind":"function","name":"IsRefreshable","available":"server","description":"Returns true if this ability is refreshed by Refresher Orb.","returns":["bool"],"args":[]},{"kind":"function","name":"IsStealable","available":"server","description":"Returns true if this ability can be stolen by Spell Steal.","returns":["bool"],"args":[]},{"kind":"function","name":"OnAbilityPhaseInterrupted","available":"server","description":"Cast time did not complete successfully.","returns":["nil"],"args":[]},{"kind":"function","name":"OnAbilityPhaseStart","available":"server","description":"Cast time begins (return true for successful cast).","returns":["bool"],"args":[]},{"kind":"function","name":"OnAbilityPinged","available":"server","description":"The ability was pinged.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"ctrlHeld","types":["bool"]}]},{"kind":"function","name":"OnChannelFinish","available":"server","description":"Channel finished.","returns":["nil"],"args":[{"name":"interrupted","types":["bool"]}]},{"kind":"function","name":"OnChannelThink","available":"server","description":"Channeling is taking place.","returns":["nil"],"args":[{"name":"interval","types":["float"]}]},{"kind":"function","name":"OnHeroCalculateStatBonus","available":"server","description":"Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.","returns":["nil"],"args":[]},{"kind":"function","name":"OnHeroDiedNearby","available":"server","description":"A hero has died in the vicinity (ie Urn), takes table of params.","returns":["nil"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"event","types":["table"]}]},{"kind":"function","name":"OnHeroLevelUp","available":"server","description":"Caster gained a level.","returns":["nil"],"args":[]},{"kind":"function","name":"OnInventoryContentsChanged","available":"server","description":"Caster inventory changed.","returns":["nil"],"args":[]},{"kind":"function","name":"OnItemEquipped","available":"server","description":"Caster equipped item.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"OnOwnerDied","available":"server","description":"Caster died.","returns":["nil"],"args":[]},{"kind":"function","name":"OnOwnerSpawned","available":"server","description":"Caster respawned or spawned for the first time.","returns":["nil"],"args":[]},{"kind":"function","name":"OnProjectileHit","available":"server","description":"Projectile has collided with a given target or reached its destination. If \'true` is returned, projectile would be destroyed.","returns":["bool","nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC","nil"]},{"name":"location","types":["Vector"]}]},{"kind":"function","name":"OnProjectileHit_ExtraData","available":"server","description":"Projectile has collided with a given target or reached its destination. If \'true` is returned, projectile would be destroyed.","returns":["bool","nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC","nil"]},{"name":"location","types":["Vector"]},{"name":"extraData","types":["table"]}]},{"kind":"function","name":"OnProjectileHitHandle","available":"server","description":"Projectile has collided with a given target or reached its destination. If \'true` is returned, projectile would be destroyed.","returns":["bool","nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC","nil"]},{"name":"location","types":["Vector"]},{"name":"projectileHandle","types":["ProjectileID"]}]},{"kind":"function","name":"OnProjectileThink","available":"server","description":"Projectile is actively moving.","returns":["nil"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"OnProjectileThink_ExtraData","available":"server","description":"Projectile is actively moving.","returns":["nil"],"args":[{"name":"location","types":["Vector"]},{"name":"extraData","types":["table"]}]},{"kind":"function","name":"OnProjectileThinkHandle","available":"server","description":"Projectile is actively moving.","returns":["nil"],"args":[{"name":"projectileHandle","types":["ProjectileID"]}]},{"kind":"function","name":"OnSpellStart","available":"server","description":"Cast time finished, spell effects begin.","returns":["nil"],"args":[]},{"kind":"function","name":"OnStolen","available":"server","description":"Special behavior when stolen by Spell Steal.","returns":["nil"],"args":[{"name":"sourceAbility","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"OnToggle","available":"server","description":"Ability is toggled on/off.","returns":["nil"],"args":[]},{"kind":"function","name":"OnUnStolen","available":"server","description":"Special behavior when lost by Spell Steal.","returns":["nil"],"args":[]},{"kind":"function","name":"OnUpgrade","available":"server","description":"Ability gained a level.","returns":["nil"],"args":[]},{"kind":"function","name":"OtherAbilitiesAlwaysInterruptChanneling","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"ProcsMagicStick","available":"server","description":"Returns true if this ability will generate magic stick charges for nearby enemies.","returns":["bool"],"args":[]},{"kind":"function","name":"RequiresFacing","available":"server","description":"Does this ability need the caster to face the target before executing?","returns":["bool"],"args":[]},{"kind":"function","name":"ResetToggleOnRespawn","available":"server","description":"Returns true if this ability should return to the default toggle state when its parent respawns.","returns":["bool"],"args":[]},{"kind":"function","name":"SpeakTrigger","available":"server","description":"Return the type of speech used.","returns":["int"],"args":[]},{"kind":"function","name":"Init","available":"both","abstract":true,"description":"Called first when ability entity is created.","returns":["nil"],"args":[]},{"kind":"function","name":"Precache","available":"server","abstract":true,"returns":["nil"],"args":[{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"Spawn","available":"both","abstract":true,"description":"Called when ability entity is created, after Init.","returns":["nil"],"args":[]}]},{"kind":"class","name":"CDOTA_Ability_Nian_Dive","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"SetPlaybackRate","available":"server","description":"Override playbackrate.","returns":["nil"],"args":[{"name":"rate","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Ability_Nian_Leap","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"SetPlaybackRate","available":"server","description":"Override playbackrate.","returns":["nil"],"args":[{"name":"rate","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Ability_Nian_Roar","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"GetCastCount","available":"server","description":"Number of times Nian has used the roar.","returns":["int"],"args":[]}]},{"kind":"class","name":"CDOTA_AghsFort_Ability_ArcWardenBoss_TempestDouble","clientName":"C_DOTA_AghsFort_Ability_ArcWardenBoss_TempestDouble","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"SetNumDoubles","available":"both","description":"Sets the number of doubles to spawn.","returns":["nil"],"args":[{"name":"doubles","types":["int"]}]}]},{"kind":"class","name":"CDOTA_BaseNPC","clientName":"C_DOTA_BaseNPC","extend":"CBaseFlex","members":[{"kind":"function","name":"AddAbility","available":"server","description":"Add an ability to this unit by name.","returns":["CDOTABaseAbility"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"AddActivityModifier","available":"server","description":"Add an activity modifier that affects future StartGesture calls.","returns":["nil"],"args":[{"name":"name","description":"The name of the activity modifier to add, e.g. \'haste\'.","types":["string"]}]},{"kind":"function","name":"AddItem","available":"server","description":"Add an item to this unit\'s inventory.","returns":["CDOTA_Item"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"AddItemByName","available":"server","description":"Add an item to this unit\'s inventory.","returns":["CDOTA_Item"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"AddNewModifier","available":"server","description":"Add a modifier to this unit.","returns":["CDOTA_Buff"],"args":[{"name":"caster","types":["CDOTA_BaseNPC","nil"]},{"name":"ability","types":["CDOTABaseAbility","nil"]},{"name":"modifierName","types":["string"]},{"name":"modifierTable","types":["table","nil"]}]},{"kind":"function","name":"AddNoDraw","available":"server","description":"Adds the no draw flag.","returns":["nil"],"args":[]},{"kind":"function","name":"AddSpeechBubble","available":"server","description":"Add a speech bubble(1-4 live at a time) to this NPC.","returns":["nil"],"args":[{"name":"bubble","types":["int"]},{"name":"speech","types":["string"]},{"name":"duration","types":["float"]},{"name":"unOffsetX","types":["uint"]},{"name":"unOffsetY","types":["uint"]}]},{"kind":"function","name":"AlertNearbyUnits","available":"server","returns":["nil"],"args":[{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"ability","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"AngerNearbyUnits","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"AttackNoEarlierThan","available":"server","returns":["nil"],"args":[{"name":"time","types":["float"]},{"name":"timeDisparityTolerance","types":["float"]}]},{"kind":"function","name":"AttackReady","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"BoundingRadius2D","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"CalculateGenericBonuses","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"CanBeSeenByAnyOpposingTeam","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"CanEntityBeSeenByMyTeam","available":"server","description":"Check FoW to see if an entity is visible.","returns":["bool"],"args":[{"name":"entity","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"CanSellItems","available":"server","description":"Query if this unit can sell items.","returns":["bool"],"args":[]},{"kind":"function","name":"CastAbilityImmediately","available":"server","description":"Cast an ability immediately.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"playerIndex","types":["int"]}]},{"kind":"function","name":"CastAbilityNoTarget","available":"server","description":"Cast an ability with no target.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"playerIndex","types":["int"]}]},{"kind":"function","name":"CastAbilityOnPosition","available":"server","description":"Cast an ability on a position.","returns":["nil"],"args":[{"name":"position","types":["Vector"]},{"name":"ability","types":["CDOTABaseAbility"]},{"name":"playerIndex","types":["int"]}]},{"kind":"function","name":"CastAbilityOnTarget","available":"server","description":"Cast an ability on a target entity.","returns":["nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]},{"name":"ability","types":["CDOTABaseAbility"]},{"name":"playerIndex","types":["int"]}]},{"kind":"function","name":"CastAbilityToggle","available":"server","description":"Toggle an ability.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"playerIndex","types":["int"]}]},{"kind":"function","name":"ChangeTeam","available":"server","returns":["nil"],"args":[{"name":"teamNum","types":["int"]}]},{"kind":"function","name":"ClearActivityModifiers","available":"server","description":"Clear Activity modifiers.","returns":["nil"],"args":[]},{"kind":"function","name":"DestroyAllSpeechBubbles","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"DisassembleItem","available":"server","description":"Disassemble the passed item in this unit\'s inventory.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"DropItemAtPosition","available":"server","description":"Drop an item at a given point.","returns":["nil"],"args":[{"name":"dest","types":["Vector"]},{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"DropItemAtPositionImmediate","available":"server","description":"Immediately drop a carried item at a given position.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]},{"name":"position","types":["Vector"]}]},{"kind":"function","name":"EjectItemFromStash","available":"server","description":"Drops the selected item out of this unit\'s stash.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"FaceTowards","available":"server","description":"This unit will be set to face the target point.","returns":["nil"],"args":[{"name":"target","types":["Vector"]}]},{"kind":"function","name":"FadeGesture","available":"server","description":"Fade and remove the given gesture activity.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]}]},{"kind":"function","name":"FindAbilityByName","available":"both","description":"Retrieve an ability by name from the unit.","returns":["CDOTABaseAbility","nil"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"FindAllModifiers","available":"server","description":"Returns a table of all of the modifiers on the NPC.","returns":[{"kind":"array","types":["CDOTA_Buff"]}],"args":[]},{"kind":"function","name":"FindAllModifiersByName","available":"server","description":"Returns a table of all of the modifiers on the NPC with the passed name (modifierName).","returns":[{"kind":"array","types":["CDOTA_Buff"]}],"args":[{"name":"modifierName","types":["string"]}]},{"kind":"function","name":"FindItemInInventory","available":"server","description":"Get handle to first item in inventory, else nil.","returns":["CDOTA_Item","nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"FindModifierByName","available":"server","description":"Return a handle to the modifier of the given name if found, else nil (string Name ).","returns":["CDOTA_Buff","nil"],"args":[{"name":"modifierName","types":["string"]}]},{"kind":"function","name":"FindModifierByNameAndCaster","available":"server","description":"Return a handle to the modifier of the given name from the passed caster if found, else nil.","returns":["CDOTA_Buff","nil"],"args":[{"name":"modifierName","types":["string"]},{"name":"caster","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"ForceKill","available":"server","description":"Kill this unit immediately.","returns":["nil"],"args":[{"name":"reincarnate","types":["bool"]}]},{"kind":"function","name":"ForcePlayActivityOnce","available":"server","description":"Play an activity once, and then go back to idle.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]}]},{"kind":"function","name":"GetAbilityByIndex","available":"server","description":"Retrieve an ability by index from the unit.","returns":["CDOTABaseAbility","nil"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"GetAbilityCount","available":"both","returns":["int"],"args":[]},{"kind":"function","name":"GetAcquisitionRange","available":"server","description":"Gets the range at which this unit will auto-acquire.","returns":["float"],"args":[]},{"kind":"function","name":"GetAdditionalBattleMusicWeight","available":"server","description":"Combat involving this creature will have this weight added to the music calcuations.","returns":["float"],"args":[]},{"kind":"function","name":"GetAggroTarget","available":"server","description":"Returns this unit\'s aggro target.","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetAttackAnimationPoint","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetAttackCapability","available":"server","returns":["DOTAUnitAttackCapability_t"],"args":[]},{"kind":"function","name":"GetAttackDamage","available":"server","description":"Returns a random integer between the minimum and maximum base damage of the unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetAttackRangeBuffer","available":"server","description":"Gets the attack range buffer.","returns":["float"],"args":[]},{"kind":"function","name":"GetAttackSpeed","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetAttacksPerSecond","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetAttackTarget","available":"server","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetAverageTrueAttackDamage","available":"server","description":"Returns the average value of the minimum and maximum damage values.","returns":["int"],"args":[{"name":"target","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"GetBaseAttackRange","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseAttackTime","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseDamageMax","available":"server","description":"Get the maximum attack damage of this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseDamageMin","available":"server","description":"Get the minimum attack damage of this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseDayTimeVisionRange","available":"server","description":"Returns the vision range before modifiers.","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseHealthBarOffset","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseHealthRegen","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseMagicalResistanceValue","available":"both","description":"Returns base magical armor value.","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseMaxHealth","available":"server","description":"Gets the base max health value.","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseMoveSpeed","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseNightTimeVisionRange","available":"server","description":"Returns the vision range after modifiers.","returns":["int"],"args":[]},{"kind":"function","name":"GetBonusManaRegen","available":"server","description":"This Mana regen is derived from constant bonuses like Basilius.","returns":["float"],"args":[]},{"kind":"function","name":"GetCastPoint","available":"server","returns":["float"],"args":[{"name":"attack","types":["bool"]}]},{"kind":"function","name":"GetCastRangeBonus","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetCloneSource","available":"server","description":"Get clone source (Meepo Prime, if this is a Meepo).","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetCollisionPadding","available":"both","description":"Returns the size of the collision padding around the hull.","returns":["float"],"args":[]},{"kind":"function","name":"GetCooldownReduction","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetCreationTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetCurrentActiveAbility","available":"server","description":"Get the ability this unit is currently casting.","returns":["CDOTABaseAbility","nil"],"args":[]},{"kind":"function","name":"GetCurrentVisionRange","available":"both","description":"Gets the current vision range.","returns":["int"],"args":[]},{"kind":"function","name":"GetCursorCastTarget","available":"server","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetCursorPosition","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"GetCursorTargetingNothing","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"GetDamageMax","available":"both","description":"Get the maximum attack damage of this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetDamageMin","available":"both","description":"Get the minimum attack damage of this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetDayTimeVisionRange","available":"both","description":"Returns the vision range after modifiers.","returns":["int"],"args":[]},{"kind":"function","name":"GetDeathXP","available":"server","description":"Get the XP bounty on this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetDisplayAttackSpeed","available":"server","description":"Attack speed expressed as constant value.","returns":["float"],"args":[]},{"kind":"function","name":"GetEvasion","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetForceAttackTarget","available":"server","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetGoldBounty","available":"server","description":"Get the gold bounty on this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetHasteFactor","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetHealthDeficit","available":"server","description":"Returns integer amount of health missing from max.","returns":["int"],"args":[]},{"kind":"function","name":"GetHealthPercent","available":"both","description":"Get the current health percent of the unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetHealthRegen","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetHullRadius","available":"both","description":"Get the collision hull radius of this NPC.","returns":["float"],"args":[]},{"kind":"function","name":"GetIdealSpeed","available":"both","description":"Returns speed after all modifiers.","returns":["float"],"args":[]},{"kind":"function","name":"GetIdealSpeedNoSlows","available":"both","description":"Returns speed after all modifiers, but excluding those that reduce speed.","returns":["float"],"args":[]},{"kind":"function","name":"GetIncreasedAttackSpeed","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetInitialGoalEntity","available":"server","description":"Returns the initial waypoint goal for this NPC.","returns":["CBaseEntity","nil"],"args":[]},{"kind":"function","name":"GetInitialGoalPosition","available":"server","description":"Get waypoint position for this NPC.","returns":["Vector"],"args":[]},{"kind":"function","name":"GetItemInSlot","available":"server","description":"Returns nth item in inventory slot (index is zero based).","returns":["CDOTA_Item","nil"],"args":[{"name":"slot","types":["int"]}]},{"kind":"function","name":"GetLastAttackTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetLastDamageTime","available":"server","description":"Get the last time this NPC took damage.","returns":["float"],"args":[]},{"kind":"function","name":"GetLastIdleChangeTime","available":"server","description":"Get the last game time that this unit switched to/from idle state.","returns":["float"],"args":[]},{"kind":"function","name":"GetLevel","available":"both","description":"Returns the level of this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetMagicalArmorValue","available":"both","description":"Returns current magical armor value.","returns":["float"],"args":[]},{"kind":"function","name":"GetMainControllingPlayer","available":"server","description":"Returns the player ID of the controlling player.","returns":["int"],"args":[]},{"kind":"function","name":"GetMana","available":"both","description":"Get the mana on this unit.","returns":["float"],"args":[]},{"kind":"function","name":"GetManaPercent","available":"server","description":"Get the percent of mana remaining.","returns":["int"],"args":[]},{"kind":"function","name":"GetManaRegen","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetMaximumGoldBounty","available":"server","description":"Get the maximum gold bounty for this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetMaxMana","available":"both","description":"Get the maximum mana of this unit.","returns":["float"],"args":[]},{"kind":"function","name":"GetMinimumGoldBounty","available":"server","description":"Get the minimum gold bounty for this unit.","returns":["int"],"args":[]},{"kind":"function","name":"GetModelRadius","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetModifierCount","available":"server","description":"How many modifiers does this unit have?","returns":["int"],"args":[]},{"kind":"function","name":"GetModifierNameByIndex","available":"server","description":"Get a modifier name by index.","returns":["string"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"GetModifierStackCount","available":"both","description":"Gets the stack count of a given modifier.","returns":["int"],"args":[{"name":"modifierName","types":["string"]},{"name":"caster","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetMoveSpeedModifier","available":"both","returns":["float"],"args":[{"name":"baseSpeed","types":["float"]},{"name":"returnUnslowed","types":["bool"]}]},{"kind":"function","name":"GetMustReachEachGoalEntity","available":"server","description":"Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.","returns":["bool"],"args":[]},{"kind":"function","name":"GetNeutralSpawnerName","available":"server","description":"Get the name of this camp\'s neutral spawner.","returns":["string"],"args":[]},{"kind":"function","name":"GetNeverMoveToClearSpace","available":"server","description":"If set to true, we will never attempt to move this unit to clear space, even when it unphases.","returns":["bool"],"args":[]},{"kind":"function","name":"GetNightTimeVisionRange","available":"both","description":"Returns the vision range after modifiers.","returns":["int"],"args":[]},{"kind":"function","name":"GetOpposingTeamNumber","available":"both","returns":["DOTATeam_t"],"args":[]},{"kind":"function","name":"GetPaddedCollisionRadius","available":"both","description":"Get the collision hull radius (including padding) of this NPC.","returns":["float"],"args":[]},{"kind":"function","name":"GetPhysicalArmorBaseValue","available":"both","description":"Returns base physical armor value.","returns":["float"],"args":[]},{"kind":"function","name":"GetPhysicalArmorValue","available":"both","description":"Returns current physical armor value.","returns":["float"],"args":[{"name":"ignoreBase","types":["bool"]}]},{"kind":"function","name":"GetPlayerOwner","available":"server","description":"Returns the player that owns this unit.","returns":["CDOTAPlayerController"],"args":[]},{"kind":"function","name":"GetPlayerOwnerID","available":"both","description":"Get the owner player ID for this unit.","returns":["PlayerID"],"args":[]},{"kind":"function","name":"GetProjectileSpeed","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetRangedProjectileName","available":"server","returns":["string"],"args":[]},{"kind":"function","name":"GetRangeToUnit","available":"server","returns":["float"],"args":[{"name":"npc","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetSecondsPerAttack","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetSpellAmplification","available":"server","returns":["float"],"args":[{"name":"baseOnly","types":["bool"]}]},{"kind":"function","name":"GetStatusResistance","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetTotalPurchasedUpgradeGoldCost","available":"both","description":"Get how much gold has been spent on ability upgrades.","returns":["int"],"args":[]},{"kind":"function","name":"GetUnitLabel","available":"both","returns":["string"],"args":[]},{"kind":"function","name":"GetUnitName","available":"both","description":"Get the name of this unit.","returns":["string"],"args":[]},{"kind":"function","name":"GiveMana","available":"server","description":"Give mana to this unit, this can be used for mana gained by abilities or item usage.","returns":["nil"],"args":[{"name":"mana","types":["float"]}]},{"kind":"function","name":"HasAbility","available":"server","description":"See whether this unit has an ability by name.","returns":["bool"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"HasAnyActiveAbilities","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"HasAttackCapability","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"HasFlyingVision","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"HasFlyMovementCapability","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"HasGroundMovementCapability","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"HasInventory","available":"server","description":"Does this unit have an inventory.","returns":["bool"],"args":[]},{"kind":"function","name":"HasItemInInventory","available":"both","description":"See whether this unit has an item by name.","returns":["bool"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"HasModifier","available":"both","description":"Sees if this unit has a given modifier.","returns":["bool"],"args":[{"name":"scriptName","types":["string"]}]},{"kind":"function","name":"HasMovementCapability","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"HasScepter","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"Heal","available":"server","description":"Heal this unit.","returns":["nil"],"args":[{"name":"amount","types":["float"]},{"name":"inflictor","types":["CDOTABaseAbility","nil"]}]},{"kind":"function","name":"HealWithParams","available":"server","description":"Heal this unit (with more parameters).","returns":["nil"],"args":[{"name":"amount","types":["float"]},{"name":"inflictor","types":["handle"]},{"name":"lifesteal","types":["bool"]},{"name":"amplify","types":["bool"]},{"name":"source","types":["handle"]},{"name":"spellLifesteal","types":["bool"]}]},{"kind":"function","name":"Hold","available":"server","description":"Hold position.","returns":["nil"],"args":[]},{"kind":"function","name":"Interrupt","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"InterruptChannel","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"InterruptMotionControllers","available":"server","returns":["nil"],"args":[{"name":"findClearSpace","types":["bool"]}]},{"kind":"function","name":"IsAlive","available":"server","description":"Is this unit alive?","returns":["bool"],"args":[]},{"kind":"function","name":"IsAncient","available":"both","description":"Is this unit an Ancient?","returns":["bool"],"args":[]},{"kind":"function","name":"IsAttackImmune","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsAttacking","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsAttackingEntity","available":"server","returns":["bool"],"args":[{"name":"entity","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"IsBarracks","available":"both","description":"Is this unit a Barracks?","returns":["bool"],"args":[]},{"kind":"function","name":"IsBlind","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsBlockDisabled","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsBoss","available":"both","description":"Is this unit a boss?","returns":["bool"],"args":[]},{"kind":"function","name":"IsBossCreature","available":"server","description":"Is this unit a Boss Creature? (used by custom games).","returns":["bool"],"args":[]},{"kind":"function","name":"IsBuilding","available":"both","description":"Is this unit a building?","returns":["bool"],"args":[]},{"kind":"function","name":"IsChanneling","available":"server","description":"Is this unit currently channeling a spell?","returns":["bool"],"args":[]},{"kind":"function","name":"IsClone","available":"server","description":"Is this unit a clone? (Meepo).","returns":["bool"],"args":[]},{"kind":"function","name":"IsCommandRestricted","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsConsideredHero","available":"both","description":"Is this unit a considered a hero for targeting purposes?","returns":["bool"],"args":[]},{"kind":"function","name":"IsControllableByAnyPlayer","available":"both","description":"Is this unit controlled by any non-bot player?","returns":["bool"],"args":[]},{"kind":"function","name":"IsCourier","available":"both","description":"Is this unit a courier?","returns":["bool"],"args":[]},{"kind":"function","name":"IsCreature","available":"both","description":"Is this a Creature type NPC?","returns":["bool"],"args":[]},{"kind":"function","name":"IsCreep","available":"both","description":"Is this unit a creep?","returns":["bool"],"args":[]},{"kind":"function","name":"IsCreepHero","available":"both","description":"Is this unit a creep hero?","returns":["bool"],"args":[]},{"kind":"function","name":"IsCurrentlyHorizontalMotionControlled","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsCurrentlyVerticalMotionControlled","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsDisarmed","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsDominated","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsEvadeDisabled","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsFort","available":"both","description":"Is this unit an Ancient?","returns":["bool"],"args":[]},{"kind":"function","name":"IsFrozen","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsHero","available":"both","description":"Is this a hero or hero illusion?","returns":["bool"],"args":[]},{"kind":"function","name":"IsHexed","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsIdle","available":"server","description":"Is this creature currently idle?","returns":["bool"],"args":[]},{"kind":"function","name":"IsIllusion","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsInRangeOfShop","available":"server","description":"Ask whether this unit is in range of the specified shop.","returns":["bool"],"args":[{"name":"shopType","types":["DOTA_SHOP_TYPE"]},{"name":"physical","types":["bool"]}]},{"kind":"function","name":"IsInventoryEnabled","available":"client","description":"Does this unit have an inventory.","returns":["bool"],"args":[]},{"kind":"function","name":"IsInvisible","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsInvulnerable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsLowAttackPriority","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsMagicImmune","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsMovementImpaired","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsMoving","available":"both","description":"Is this unit moving?","returns":["bool"],"args":[]},{"kind":"function","name":"IsMuted","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsNeutralUnitType","available":"both","description":"Is this a neutral?","returns":["bool"],"args":[]},{"kind":"function","name":"IsNightmared","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsOpposingTeam","available":"server","returns":["bool"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"IsOther","available":"both","description":"Is this unit a ward-type unit?","returns":["bool"],"args":[]},{"kind":"function","name":"IsOutOfGame","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsOwnedByAnyPlayer","available":"both","description":"Is this unit owned by any non-bot player?","returns":["bool"],"args":[]},{"kind":"function","name":"IsPhantom","available":"both","description":"Is this a phantom unit?","returns":["bool"],"args":[]},{"kind":"function","name":"IsPhantomBlocker","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsPhased","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsPositionInRange","available":"server","returns":["bool"],"args":[{"name":"position","types":["Vector"]},{"name":"range","types":["float"]}]},{"kind":"function","name":"IsRangedAttacker","available":"both","description":"Is this unit a ranged attacker?","returns":["bool"],"args":[]},{"kind":"function","name":"IsRealHero","available":"both","description":"Is this a real hero?","returns":["bool"],"args":[]},{"kind":"function","name":"IsReincarnating","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsRooted","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsShrine","available":"server","description":"Is this a shrine?","returns":["bool"],"args":[]},{"kind":"function","name":"IsSilenced","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsSpeciallyDeniable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsSpeciallyUndeniable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsStunned","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsSummoned","available":"both","description":"Is this unit summoned?","returns":["bool"],"args":[]},{"kind":"function","name":"IsTempestDouble","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsTower","available":"both","description":"Is this a tower?","returns":["bool"],"args":[]},{"kind":"function","name":"IsUnableToMiss","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsUnselectable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsUntargetable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsZombie","available":"server","description":"Is this entity an Undying Zombie?","returns":["bool"],"args":[]},{"kind":"function","name":"Kill","available":"server","description":"Kills this NPC, with the params Ability and Attacker.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility","nil"]},{"name":"attacker","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"MakeIllusion","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"MakePhantomBlocker","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"MakeVisibleDueToAttack","available":"server","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"MakeVisibleToTeam","available":"server","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"ManageModelChanges","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"ModifyHealth","available":"server","description":"Sets the health to a specific value, with optional flags or inflictors.","returns":["nil"],"args":[{"name":"desiredHealthValue","types":["int"]},{"name":"ability","types":["CDOTABaseAbility","nil"]},{"name":"lethal","types":["bool"]},{"name":"additionalFlags","types":["int"]}]},{"kind":"function","name":"MoveToNPC","available":"server","description":"Move to follow a unit.","returns":["nil"],"args":[{"name":"npc","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"MoveToNPCToGiveItem","available":"server","description":"Give an item to another unit.","returns":["nil"],"args":[{"name":"npc","types":["CDOTA_BaseNPC"]},{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"MoveToPosition","available":"server","description":"Issue a Move-To command.","returns":["nil"],"args":[{"name":"dest","types":["Vector"]}]},{"kind":"function","name":"MoveToPositionAggressive","available":"server","description":"Issue an Attack-Move-To command.","returns":["nil"],"args":[{"name":"dest","types":["Vector"]}]},{"kind":"function","name":"MoveToTargetToAttack","available":"server","description":"Move to a target to attack.","returns":["nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"NoHealthBar","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"NoTeamMoveTo","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"NoTeamSelect","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"NotifyWearablesOfModelChange","available":"server","returns":["nil"],"args":[{"name":"originalModel","types":["bool"]}]},{"kind":"function","name":"NotOnMinimap","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"NotOnMinimapForEnemies","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"NoUnitCollision","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"PassivesDisabled","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"PatrolToPosition","available":"server","description":"Issue a Patrol-To command.","returns":["nil"],"args":[{"name":"dest","types":["Vector"]}]},{"kind":"function","name":"PerformAttack","available":"server","description":"Performs an attack on a target.","returns":["nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]},{"name":"useCastAttackOrb","types":["bool"]},{"name":"processProcs","types":["bool"]},{"name":"skipCooldown","types":["bool"]},{"name":"ignoreInvis","types":["bool"]},{"name":"useProjectile","types":["bool"]},{"name":"fakeAttack","types":["bool"]},{"name":"neverMiss","types":["bool"]}]},{"kind":"function","name":"PickupDroppedItem","available":"server","description":"Pick up a dropped item.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"PickupRune","available":"server","description":"Pick up a rune.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"PlayVCD","available":"server","description":"Play a VCD on the NPC.","returns":["nil"],"args":[{"name":"vcd","types":["string"]}]},{"kind":"function","name":"ProvidesVision","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"Purge","available":"server","returns":["nil"],"args":[{"name":"removePositiveBuffs","types":["bool"]},{"name":"removeDebuffs","types":["bool"]},{"name":"frameOnly","types":["bool"]},{"name":"removeStuns","types":["bool"]},{"name":"removeExceptions","types":["bool"]}]},{"kind":"function","name":"QueueConcept","available":"server","description":"Queue a response system concept with the TLK_DOTA_CUSTOM concept, after a delay.","returns":["nil"],"args":[{"name":"delay","types":["float"]},{"name":"criteriaTable","types":["handle"]},{"name":"completionCallbackFn","types":[{"kind":"function","returns":["nil"],"args":[{"name":"didActuallySpeak","types":["bool"]},{"name":"callbackInfo","types":["table"]}]}]},{"name":"context","types":["table"]},{"name":"callbackInfo","types":["table"]}]},{"kind":"function","name":"QueueTeamConcept","available":"server","description":"Queue a response system concept with the TLK_DOTA_CUSTOM concept, after a delay, for the same team this speaker is on.","returns":["nil"],"args":[{"name":"delay","types":["float"]},{"name":"criteriaTable","types":["handle"]},{"name":"completionCallbackFn","types":[{"kind":"function","returns":["nil"],"args":[{"name":"didActuallySpeak","types":["bool"]},{"name":"callbackInfo","types":["table"]}]}]},{"name":"context","types":["table"]},{"name":"callbackInfo","types":["table"]}]},{"kind":"function","name":"QueueTeamConceptNoSpectators","available":"server","description":"Queue a response system concept with the TLK_DOTA_CUSTOM concept, after a delay, for the same team this speaker is on. Is not played for spectators.","returns":["nil"],"args":[{"name":"delay","types":["float"]},{"name":"criteriaTable","types":["handle"]},{"name":"completionCallbackFn","types":[{"kind":"function","returns":["nil"],"args":[{"name":"didActuallySpeak","types":["bool"]},{"name":"callbackInfo","types":["table"]}]}]},{"name":"context","types":["table"]},{"name":"callbackInfo","types":["table"]}]},{"kind":"function","name":"ReduceMana","available":"server","description":"Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent.","returns":["nil"],"args":[{"name":"amount","types":["float"]}]},{"kind":"function","name":"RemoveAbility","available":"server","description":"Remove an ability from this unit by name.","returns":["nil"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"RemoveAbilityByHandle","available":"server","description":"Remove the passed ability from this unit.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"RemoveAbilityFromIndexByName","available":"server","returns":["nil"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"RemoveAllModifiers","available":"server","returns":["nil"],"args":[{"name":"targets","description":"0=all, 1=enemy, 2=ally","types":[{"kind":"literal","value":0},{"kind":"literal","value":1},{"kind":"literal","value":2}]},{"name":"now","types":["bool"]},{"name":"permanent","types":["bool"]},{"name":"death","types":["bool"]}]},{"kind":"function","name":"RemoveAllModifiersOfName","available":"server","description":"Removes all copies of a modifier.","returns":["nil"],"args":[{"name":"scriptName","types":["string"]}]},{"kind":"function","name":"RemoveGesture","available":"server","description":"Remove the given gesture activity.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]}]},{"kind":"function","name":"RemoveHorizontalMotionController","available":"server","returns":["nil"],"args":[{"name":"buff","types":["CDOTA_Buff"]}]},{"kind":"function","name":"RemoveItem","available":"server","description":"Removes the passed item from this unit\'s inventory and deletes it.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"RemoveModifierByName","available":"server","description":"Removes a modifier.","returns":["nil"],"args":[{"name":"scriptName","types":["string"]}]},{"kind":"function","name":"RemoveModifierByNameAndCaster","available":"server","description":"Removes a modifier that was cast by the given caster.","returns":["nil"],"args":[{"name":"scriptName","types":["string"]},{"name":"caster","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"RemoveNoDraw","available":"server","description":"Remove the no draw flag.","returns":["nil"],"args":[]},{"kind":"function","name":"RemoveVerticalMotionController","available":"server","returns":["nil"],"args":[{"name":"buff","types":["CDOTA_Buff"]}]},{"kind":"function","name":"RespawnUnit","available":"server","description":"Respawns the target unit if it can be respawned.","returns":["nil"],"args":[]},{"kind":"function","name":"Script_GetAttackRange","available":"both","description":"Gets this unit\'s attack range after all modifiers.","returns":["float"],"args":[]},{"kind":"function","name":"Script_IsDeniable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"SellItem","available":"server","description":"Sells the passed item in this unit\'s inventory.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"SetAbilityByIndex","available":"server","description":"Set the ability by index.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"index","types":["int"]}]},{"kind":"function","name":"SetAcquisitionRange","available":"server","returns":["nil"],"args":[{"name":"range","types":["int"]}]},{"kind":"function","name":"SetAdditionalBattleMusicWeight","available":"server","description":"Combat involving this creature will have this weight added to the music calcuations.","returns":["nil"],"args":[{"name":"weight","types":["float"]}]},{"kind":"function","name":"SetAggroTarget","available":"server","description":"Set this unit\'s aggro target to a specified unit.","returns":["nil"],"args":[{"name":"aggroTarget","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"SetAttackCapability","available":"server","returns":["nil"],"args":[{"name":"attackCapabilities","types":["DOTAUnitAttackCapability_t"]}]},{"kind":"function","name":"SetAttacking","available":"server","returns":["nil"],"args":[{"name":"attackTarget","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"SetBaseAttackTime","available":"server","returns":["nil"],"args":[{"name":"baseAttackTime","types":["float"]}]},{"kind":"function","name":"SetBaseDamageMax","available":"server","description":"Sets the maximum base damage.","returns":["nil"],"args":[{"name":"max","types":["int"]}]},{"kind":"function","name":"SetBaseDamageMin","available":"server","description":"Sets the minimum base damage.","returns":["nil"],"args":[{"name":"min","types":["int"]}]},{"kind":"function","name":"SetBaseHealthRegen","available":"server","returns":["nil"],"args":[{"name":"healthRegen","types":["float"]}]},{"kind":"function","name":"SetBaseMagicalResistanceValue","available":"server","description":"Sets base magical armor value.","returns":["nil"],"args":[{"name":"magicalResistanceValue","types":["float"]}]},{"kind":"function","name":"SetBaseManaRegen","available":"server","returns":["nil"],"args":[{"name":"manaRegen","types":["float"]}]},{"kind":"function","name":"SetBaseMaxHealth","available":"server","description":"Set a new base max health value.","returns":["nil"],"args":[{"name":"baseMaxHealth","types":["float"]}]},{"kind":"function","name":"SetBaseMoveSpeed","available":"server","returns":["nil"],"args":[{"name":"moveSpeed","types":["int"]}]},{"kind":"function","name":"SetCanSellItems","available":"server","description":"Set whether or not this unit is allowed to sell items (bCanSellItems).","returns":["nil"],"args":[{"name":"canSell","types":["bool"]}]},{"kind":"function","name":"SetControllableByPlayer","available":"server","description":"Set this unit controllable by the player with the passed ID.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"skipAdjustingPosition","types":["bool"]}]},{"kind":"function","name":"SetCursorCastTarget","available":"server","returns":["nil"],"args":[{"name":"entity","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"SetCursorPosition","available":"server","returns":["nil"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"SetCursorTargetingNothing","available":"server","returns":["nil"],"args":[{"name":"targetingNothing","types":["bool"]}]},{"kind":"function","name":"SetCustomHealthLabel","available":"server","returns":["nil"],"args":[{"name":"label","types":["string"]},{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]}]},{"kind":"function","name":"SetDayTimeVisionRange","available":"server","description":"Set the base vision range.","returns":["nil"],"args":[{"name":"range","types":["int"]}]},{"kind":"function","name":"SetDeathXP","available":"server","description":"Set the XP bounty on this unit.","returns":["nil"],"args":[{"name":"xpBounty","types":["int"]}]},{"kind":"function","name":"SetFollowRange","available":"server","returns":["nil"],"args":[{"name":"followRange","types":["float"]}]},{"kind":"function","name":"SetForceAttackTarget","available":"server","returns":["nil"],"args":[{"name":"npc","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"SetForceAttackTargetAlly","available":"server","returns":["nil"],"args":[{"name":"npc","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"SetHasInventory","available":"server","description":"Set if this unit has an inventory.","returns":["nil"],"args":[{"name":"hasInventory","types":["bool"]}]},{"kind":"function","name":"SetHealthBarOffsetOverride","available":"server","returns":["nil"],"args":[{"name":"offset","types":["int"]}]},{"kind":"function","name":"SetHullRadius","available":"server","description":"Set the collision hull radius of this NPC.","returns":["nil"],"args":[{"name":"hullRadius","types":["float"]}]},{"kind":"function","name":"SetIdleAcquire","available":"server","returns":["nil"],"args":[{"name":"idleAcquire","types":["bool"]}]},{"kind":"function","name":"SetInitialGoalEntity","available":"server","description":"Sets the initial waypoint goal for this NPC.","returns":["nil"],"args":[{"name":"goal","types":["CBaseEntity","nil"]}]},{"kind":"function","name":"SetInitialGoalPosition","available":"server","description":"Set waypoint position for this NPC.","returns":["nil"],"args":[{"name":"position","types":["Vector"]}]},{"kind":"function","name":"SetMana","available":"server","description":"Set the mana on this unit.","returns":["nil"],"args":[{"name":"mana","types":["float"]}]},{"kind":"function","name":"SetMaximumGoldBounty","available":"server","description":"Set the maximum gold bounty for this unit.","returns":["nil"],"args":[{"name":"goldBountyMax","types":["int"]}]},{"kind":"function","name":"SetMaxMana","available":"server","description":"Set the maximum mana of this unit.","returns":["nil"],"args":[{"name":"maxMana","types":["float"]}]},{"kind":"function","name":"SetMinimumGoldBounty","available":"server","description":"Set the minimum gold bounty for this unit.","returns":["nil"],"args":[{"name":"goldBountyMin","types":["int"]}]},{"kind":"function","name":"SetModifierStackCount","available":"server","description":"Sets the stack count of a given modifier.","returns":["nil"],"args":[{"name":"scriptName","types":["string"]},{"name":"caster","types":["CDOTA_BaseNPC"]},{"name":"stackCount","types":["int"]}]},{"kind":"function","name":"SetMoveCapability","available":"server","returns":["nil"],"args":[{"name":"moveCapabilities","types":["DOTAUnitMoveCapability_t"]}]},{"kind":"function","name":"SetMustReachEachGoalEntity","available":"server","description":"Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.","returns":["nil"],"args":[{"name":"must","types":["bool"]}]},{"kind":"function","name":"SetNeverMoveToClearSpace","available":"server","description":"If set to true, we will never attempt to move this unit to clear space, even when it unphases.","returns":["nil"],"args":[{"name":"neverMoveToClearSpace","types":["bool"]}]},{"kind":"function","name":"SetNightTimeVisionRange","available":"server","description":"Returns the vision range after modifiers.","returns":["nil"],"args":[{"name":"range","types":["int"]}]},{"kind":"function","name":"SetOrigin","available":"server","description":"Set the unit\'s origin.","returns":["nil"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"SetOriginalModel","available":"server","description":"Sets the original model of this entity, which it will tend to fall back to anytime its state changes.","returns":["nil"],"args":[{"name":"modelName","types":["string"]}]},{"kind":"function","name":"SetPhysicalArmorBaseValue","available":"server","description":"Sets base physical armor value.","returns":["nil"],"args":[{"name":"physicalArmorValue","types":["float"]}]},{"kind":"function","name":"SetRangedProjectileName","available":"server","returns":["nil"],"args":[{"name":"projectileName","types":["string"]}]},{"kind":"function","name":"SetRevealRadius","available":"server","description":"Sets the client side map reveal radius for this unit.","returns":["nil"],"args":[{"name":"revealRadius","types":["float"]}]},{"kind":"function","name":"SetShouldDoFlyHeightVisual","available":"server","returns":["nil"],"args":[{"name":"shouldVisuallyFly","types":["bool"]}]},{"kind":"function","name":"SetStolenScepter","available":"server","returns":["nil"],"args":[{"name":"stolenScepter","types":["bool"]}]},{"kind":"function","name":"SetUnitCanRespawn","available":"server","returns":["nil"],"args":[{"name":"canRespawn","types":["bool"]}]},{"kind":"function","name":"SetUnitName","available":"server","returns":["nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"ShouldIdleAcquire","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"SpeakConcept","available":"server","description":"Speak a response system concept with the TLK_DOTA_CUSTOM concept.","returns":["nil"],"args":[{"name":"criteriaTable","types":["handle"]}]},{"kind":"function","name":"SpendMana","available":"server","description":"Spend mana from this unit, this can be used for spending mana from abilities or item usage.","returns":["nil"],"args":[{"name":"manaSpent","types":["float"]},{"name":"ability","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"StartGesture","available":"server","description":"Add the given gesture activity.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]}]},{"kind":"function","name":"StartGestureFadeWithSequenceSettings","available":"server","description":"Add the given gesture activity faded according to its sequence settings.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]}]},{"kind":"function","name":"StartGestureWithFade","available":"server","description":"Add the given gesture activity faded according to to the parameters.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]},{"name":"fadeIn","types":["float"]},{"name":"fadeOut","types":["float"]}]},{"kind":"function","name":"StartGestureWithPlaybackRate","available":"server","description":"Add the given gesture activity with a playback rate override.","returns":["nil"],"args":[{"name":"activity","types":["GameActivity_t"]},{"name":"rate","types":["float"]}]},{"kind":"function","name":"Stop","available":"server","description":"Stop the current order.","returns":["nil"],"args":[]},{"kind":"function","name":"StopFacing","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"SwapAbilities","available":"server","description":"Swaps the slots of the two passed abilities and sets them enabled/disabled.","returns":["nil"],"args":[{"name":"abilityName1","types":["string"]},{"name":"abilityName2","types":["string"]},{"name":"enable1","types":["bool"]},{"name":"enable2","types":["bool"]}]},{"kind":"function","name":"SwapItems","available":"server","description":"Swap the contents of two item slots (slot1, slot2).","returns":["nil"],"args":[{"name":"slot1","types":["int"]},{"name":"slot2","types":["int"]}]},{"kind":"function","name":"TakeItem","available":"server","description":"Removed the passed item from this unit\'s inventory. Returns the passed item.","returns":["CDOTA_Item"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"TimeUntilNextAttack","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"TriggerModifierDodge","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"TriggerSpellAbsorb","available":"server","returns":["bool"],"args":[{"name":"ability","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"TriggerSpellReflect","available":"server","description":"Trigger the Lotus Orb-like effect.(hAbility).","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"UnHideAbilityToSlot","available":"server","description":"Makes the first ability unhidden, and puts it where second ability currently is. Will do nothing if the first ability is already unhidden and in a valid slot.","returns":["nil"],"args":[{"name":"abilityName","types":["string"]},{"name":"replacedAbilityName","types":["string"]}]},{"kind":"function","name":"UnitCanRespawn","available":"both","description":"Can the unit respawn?","returns":["bool"],"args":[]},{"kind":"function","name":"WasKilledPassively","available":"server","returns":["bool"],"args":[]}]},{"kind":"class","name":"CDOTA_BaseNPC_Building","extend":"CDOTA_BaseNPC","members":[{"kind":"function","name":"GetInvulnCount","available":"server","description":"Get the invulnerability count for a building.","returns":["int"],"args":[]},{"kind":"function","name":"SetInvulnCount","available":"server","description":"Set the invulnerability counter of this building.","returns":["nil"],"args":[{"name":"invulnCount","types":["int"]}]}]},{"kind":"class","name":"CDOTA_BaseNPC_Creature","extend":"CDOTA_BaseNPC","members":[{"kind":"function","name":"AddItemDrop","available":"server","description":"Add the specified item drop to this creature.","returns":["nil"],"args":[{"name":"dropData","types":["table"]}]},{"kind":"function","name":"CreatureLevelUp","available":"server","description":"Level the creature up by the specified number of levels.","returns":["nil"],"args":[{"name":"levels","types":["int"]}]},{"kind":"function","name":"GetDisableResistance","available":"server","description":"Set creature\'s current disable resistance.","returns":["float"],"args":[]},{"kind":"function","name":"GetUltimateDisableResistance","available":"server","description":"Set creature\'s current disable resistance from ultimates.","returns":["float"],"args":[]},{"kind":"function","name":"IsChampion","available":"server","description":"Is this unit a champion?","returns":["bool"],"args":[]},{"kind":"function","name":"IsReincarnating","available":"server","description":"Is this creature respawning?","returns":["bool"],"args":[]},{"kind":"function","name":"RemoveAllItemDrops","available":"server","description":"Remove all item drops from this creature.","returns":["nil"],"args":[]},{"kind":"function","name":"SetAggroOnOwnerOnDamage","available":"server","description":"Does this creature aggro on the owner of the attacking unit when taking damage?","returns":["nil"],"args":[{"name":"aggro","types":["bool"]}]},{"kind":"function","name":"SetArmorGain","available":"server","description":"Set the armor gained per level on this creature.","returns":["nil"],"args":[{"name":"armorGain","types":["float"]}]},{"kind":"function","name":"SetAttackTimeGain","available":"server","description":"Set the attack time gained per level on this creature.","returns":["nil"],"args":[{"name":"attackTimeGain","types":["float"]}]},{"kind":"function","name":"SetBountyGain","available":"server","description":"Set the bounty gold gained per level on this creature.","returns":["nil"],"args":[{"name":"bountyGain","types":["int"]}]},{"kind":"function","name":"SetChampion","available":"server","description":"Flag this unit as a champion creature.","returns":["nil"],"args":[{"name":"isChampion","types":["bool"]}]},{"kind":"function","name":"SetDamageGain","available":"server","description":"Set the damage gained per level on this creature.","returns":["nil"],"args":[{"name":"damageGain","types":["int"]}]},{"kind":"function","name":"SetDisableResistance","available":"server","description":"Set creature\'s current disable resistance.","returns":["nil"],"args":[{"name":"disableResistance","types":["float"]}]},{"kind":"function","name":"SetDisableResistanceGain","available":"server","description":"Set the disable resistance gained per level on this creature.","returns":["nil"],"args":[{"name":"disableResistanceGain","types":["float"]}]},{"kind":"function","name":"SetHPGain","available":"server","description":"Set the hit points gained per level on this creature.","returns":["nil"],"args":[{"name":"hpGain","types":["int"]}]},{"kind":"function","name":"SetHPRegenGain","available":"server","description":"Set the hit points regen gained per level on this creature.","returns":["nil"],"args":[{"name":"hpRegenGain","types":["float"]}]},{"kind":"function","name":"SetMagicResistanceGain","available":"server","description":"Set the magic resistance gained per level on this creature.","returns":["nil"],"args":[{"name":"magicResistanceGain","types":["float"]}]},{"kind":"function","name":"SetManaGain","available":"server","description":"Set the mana points gained per level on this creature.","returns":["nil"],"args":[{"name":"manaGain","types":["int"]}]},{"kind":"function","name":"SetManaRegenGain","available":"server","description":"Set the mana points regen gained per level on this creature.","returns":["nil"],"args":[{"name":"manaRegenGain","types":["float"]}]},{"kind":"function","name":"SetMoveSpeedGain","available":"server","description":"Set the move speed gained per level on this creature.","returns":["nil"],"args":[{"name":"moveSpeedGain","types":["int"]}]},{"kind":"function","name":"SetRequiresReachingEndPath","available":"server","description":"Set whether creatures require reaching their end path before becoming idle.","returns":["nil"],"args":[{"name":"requiresReachingEndPath","types":["bool"]}]},{"kind":"function","name":"SetUltimateDisableResistance","available":"server","description":"Set creature\'s current disable resistance from ultimates.","returns":["nil"],"args":[{"name":"ultDisableResistance","types":["float"]}]},{"kind":"function","name":"SetXPGain","available":"server","description":"Set the XP gained per level on this creature.","returns":["nil"],"args":[{"name":"xpGain","types":["int"]}]}]},{"kind":"class","name":"CDOTA_BaseNPC_Hero","clientName":"C_DOTA_BaseNPC_Hero","extend":"CDOTA_BaseNPC","members":[{"kind":"function","name":"AddExperience","available":"server","returns":["bool"],"args":[{"name":"xp","types":["float"]},{"name":"reason","types":["EDOTA_ModifyXP_Reason"]},{"name":"applyBotDifficultyScaling","types":["bool"]},{"name":"incrementTotal","types":["bool"]}]},{"kind":"function","name":"Buyback","available":"server","description":"Spend the gold and buyback with this hero.","returns":["nil"],"args":[]},{"kind":"function","name":"CalculateStatBonus","available":"server","description":"Recalculate all stats after the hero gains stats.","returns":["nil"],"args":[{"name":"force","types":["bool"]}]},{"kind":"function","name":"CanEarnGold","available":"server","description":"Returns boolean value result of buyback gold limit time less than game time.","returns":["bool"],"args":[]},{"kind":"function","name":"ClearLastHitMultikill","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearLastHitStreak","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearStreak","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"GetAbilityPoints","available":"server","description":"Gets the current unspent ability points.","returns":["int"],"args":[]},{"kind":"function","name":"GetAdditionalOwnedUnits","available":"server","returns":[{"kind":"array","types":["CDOTA_BaseNPC"]}],"args":[]},{"kind":"function","name":"GetAgility","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetAgilityGain","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetAssists","available":"server","description":"Value is stored in PlayerResource.","returns":["int"],"args":[]},{"kind":"function","name":"GetAttacker","available":"server","returns":["int"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"GetBaseAgility","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseDamageMax","available":"server","description":"Hero damage is also affected by attributes.","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseDamageMin","available":"server","description":"Hero damage is also affected by attributes.","returns":["int"],"args":[]},{"kind":"function","name":"GetBaseIntellect","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseManaRegen","available":"server","description":"Returns the base mana regen.","returns":["float"],"args":[]},{"kind":"function","name":"GetBaseStrength","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetBonusDamageFromPrimaryStat","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetBuybackCooldownTime","available":"server","description":"Return float value for the amount of time left on cooldown for this hero\'s buyback.","returns":["float"],"args":[]},{"kind":"function","name":"GetBuybackCost","available":"server","description":"Return integer value for the gold cost of a buyback.","returns":["int"],"args":[{"name":"returnOldValues","types":["bool"]}]},{"kind":"function","name":"GetBuybackGoldLimitTime","available":"server","description":"Returns the amount of time gold gain is limited after buying back.","returns":["float"],"args":[]},{"kind":"function","name":"GetCurrentXP","available":"server","description":"Returns the amount of XP.","returns":["int"],"args":[]},{"kind":"function","name":"GetDeathGoldCost","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetDeaths","available":"server","description":"Value is stored in PlayerResource.","returns":["int"],"args":[]},{"kind":"function","name":"GetDenies","available":"server","description":"Value is stored in PlayerResource.","returns":["int"],"args":[]},{"kind":"function","name":"GetGold","available":"server","description":"Returns gold amount for the player owning this hero.","returns":["int"],"args":[]},{"kind":"function","name":"GetGoldBounty","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetHeroID","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetIncreasedAttackSpeed","available":"server","description":"Hero attack speed is also affected by agility.","returns":["float"],"args":[]},{"kind":"function","name":"GetIntellect","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetIntellectGain","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetKills","available":"server","description":"Value is stored in PlayerResource.","returns":["int"],"args":[]},{"kind":"function","name":"GetLastHits","available":"server","description":"Value is stored in PlayerResource.","returns":["int"],"args":[]},{"kind":"function","name":"GetMostRecentDamageTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetMultipleKillCount","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetNumAttackers","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetNumItemsInInventory","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetNumItemsInStash","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetPhysicalArmorBaseValue","available":"server","description":"Hero armor is affected by attributes.","returns":["float"],"args":[]},{"kind":"function","name":"GetPlayerID","available":"server","description":"Returns player ID of the player owning this hero.","returns":["PlayerID"],"args":[]},{"kind":"function","name":"GetPrimaryAttribute","available":"server","returns":["Attributes"],"args":[]},{"kind":"function","name":"GetPrimaryStatValue","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetReplicatingOtherHero","available":"server","description":"If hero is under Replicate effect, returns original hero entity.","returns":["CDOTA_BaseNPC_Hero","nil"],"args":[]},{"kind":"function","name":"GetRespawnsDisabled","available":"server","description":"Is this hero prevented from respawning?","returns":["bool"],"args":[]},{"kind":"function","name":"GetRespawnTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetStreak","available":"server","description":"Value is stored in PlayerResource.","returns":["int"],"args":[]},{"kind":"function","name":"GetStrength","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetStrengthGain","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetTimeUntilRespawn","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetTogglableWearable","available":"server","description":"Get wearable entity in slot (slot).","returns":["CBaseFlex","nil"],"args":[{"name":"slotType","types":["DOTASlotType_t"]}]},{"kind":"function","name":"HasAnyAvailableInventorySpace","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"HasFlyingVision","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"HasOwnerAbandoned","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"HasRoomForItem","available":"server","returns":["int"],"args":[{"name":"itemName","types":["string"]},{"name":"includeStashCombines","types":["bool"]},{"name":"allowSelling","types":["bool"]}]},{"kind":"function","name":"HeroLevelUp","available":"server","description":"Levels up the hero, true or false to play effects.","returns":["nil"],"args":[{"name":"playEffects","types":["bool"]}]},{"kind":"function","name":"IncrementAssists","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[{"name":"killerId","types":["PlayerID"]}]},{"kind":"function","name":"IncrementDeaths","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[{"name":"killerId","types":["PlayerID"]}]},{"kind":"function","name":"IncrementDenies","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"IncrementKills","available":"server","description":"Passed ID is for the victim, killer ID is ID of the current hero.  Value is stored in PlayerResource.","returns":["nil"],"args":[{"name":"victimId","types":["PlayerID"]}]},{"kind":"function","name":"IncrementLastHitMultikill","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"IncrementLastHits","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"IncrementLastHitStreak","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"IncrementNearbyCreepDeaths","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"IncrementStreak","available":"server","description":"Value is stored in PlayerResource.","returns":["nil"],"args":[]},{"kind":"function","name":"IsBuybackDisabledByReapersScythe","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsReincarnating","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsStashEnabled","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"KilledHero","available":"server","returns":["nil"],"args":[{"name":"hero","types":["CDOTA_BaseNPC_Hero"]},{"name":"inflictor","types":["CDOTABaseAbility","nil"]}]},{"kind":"function","name":"ModifyAgility","available":"server","description":"Adds passed value to base attribute value, then calls CalculateStatBonus.","returns":["nil"],"args":[{"name":"newAgility","types":["float"]}]},{"kind":"function","name":"ModifyGold","available":"server","description":"Gives this hero some gold.","returns":["int"],"args":[{"name":"goldChange","types":["int"]},{"name":"reliable","types":["bool"]},{"name":"reason","types":["EDOTA_ModifyGold_Reason"]}]},{"kind":"function","name":"ModifyIntellect","available":"server","description":"Adds passed value to base attribute value, then calls CalculateStatBonus.","returns":["nil"],"args":[{"name":"newIntellect","types":["float"]}]},{"kind":"function","name":"ModifyStrength","available":"server","description":"Adds passed value to base attribute value, then calls CalculateStatBonus.","returns":["nil"],"args":[{"name":"newStrength","types":["float"]}]},{"kind":"function","name":"PerformTaunt","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"RecordLastHit","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"RespawnHero","available":"server","description":"Respawn this hero.","returns":["nil"],"args":[{"name":"buyBack","types":["bool"]},{"name":"respawnPenalty","types":["bool"]}]},{"kind":"function","name":"Script_ModifyGoldFiltered","available":"server","description":"Gives this hero some gold, using the gold filter if extra filtering is on.  Args: int nGoldChange, bool bReliable, int reason.","returns":["int"],"args":[{"name":"goldChange","types":["int"]},{"name":"reliabe","types":["bool"]},{"name":"reason","types":["int"]}]},{"kind":"function","name":"SetAbilityPoints","available":"server","description":"Sets the current unspent ability points.","returns":["nil"],"args":[{"name":"points","types":["int"]}]},{"kind":"function","name":"SetBaseAgility","available":"server","returns":["nil"],"args":[{"name":"agility","types":["float"]}]},{"kind":"function","name":"SetBaseIntellect","available":"server","returns":["nil"],"args":[{"name":"intellect","types":["float"]}]},{"kind":"function","name":"SetBaseStrength","available":"server","returns":["nil"],"args":[{"name":"strength","types":["float"]}]},{"kind":"function","name":"SetBotDifficulty","available":"server","returns":["nil"],"args":[{"name":"difficulty","types":["int"]}]},{"kind":"function","name":"SetBuybackCooldownTime","available":"server","description":"Sets the buyback cooldown time.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetBuyBackDisabledByReapersScythe","available":"server","returns":["nil"],"args":[{"name":"buybackDisabled","types":["bool"]}]},{"kind":"function","name":"SetBuybackGoldLimitTime","available":"server","description":"Set the amount of time gold gain is limited after buying back.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetCustomDeathXP","available":"server","description":"Sets a custom experience value for this hero.  Note, GameRules boolean must be set for this to work!","returns":["nil"],"args":[{"name":"value","types":["int"]}]},{"kind":"function","name":"SetGold","available":"server","description":"Sets the gold amount for the player owning this hero.","returns":["nil"],"args":[{"name":"gold","types":["int"]},{"name":"reliable","types":["bool"]}]},{"kind":"function","name":"SetPlayerID","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"SetPrimaryAttribute","available":"server","description":"Set this hero\'s primary attribute value.","returns":["nil"],"args":[{"name":"primaryAttribute","types":["Attributes"]}]},{"kind":"function","name":"SetRespawnPosition","available":"server","returns":["nil"],"args":[{"name":"origin","types":["Vector"]}]},{"kind":"function","name":"SetRespawnsDisabled","available":"server","description":"Prevent this hero from respawning.","returns":["nil"],"args":[{"name":"disableRespawns","types":["bool"]}]},{"kind":"function","name":"SetStashEnabled","available":"server","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetTimeUntilRespawn","available":"server","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"ShouldDoFlyHeightVisual","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"SpendGold","available":"server","returns":["nil"],"args":[{"name":"cost","types":["int"]},{"name":"reason","types":["EDOTA_ModifyGold_Reason"]}]},{"kind":"function","name":"UpgradeAbility","available":"server","description":"This upgrades the passed ability if it exists and the hero has enough ability points.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"WillReincarnate","available":"server","returns":["bool"],"args":[]}]},{"kind":"class","name":"CDOTA_BaseNPC_NeutralItemStash","extend":"CDOTA_BaseNPC_Building","members":[]},{"kind":"class","name":"CDOTA_BaseNPC_Shop","extend":"CDOTA_BaseNPC_Building","members":[{"kind":"function","name":"GetShopType","available":"server","description":"Get the DOTA_SHOP_TYPE.","returns":["DOTA_SHOP_TYPE"],"args":[]},{"kind":"function","name":"SetShopType","available":"server","description":"Set the DOTA_SHOP_TYPE.","returns":["nil"],"args":[{"name":"shopType","types":["DOTA_SHOP_TYPE"]}]}]},{"kind":"class","name":"CDOTA_BaseNPC_Trap_Ward","extend":"CDOTA_BaseNPC_Creature","members":[{"kind":"function","name":"GetTrapTarget","available":"server","description":"Get the trap target for this entity.","returns":["Vector"],"args":[]},{"kind":"function","name":"SetAnimation","available":"server","description":"Set the animation sequence for this entity.","returns":["nil"],"args":[{"name":"animation","types":["string"]}]}]},{"kind":"class","name":"CDOTA_BaseNPC_Watch_Tower","extend":"CDOTA_BaseNPC_Building","members":[{"kind":"function","name":"GetInteractAbilityName","available":"server","description":"The name of the ability used when triggering interaction on the outpost.","returns":["string"],"args":[]},{"kind":"function","name":"SetInteractAbilityName","available":"server","description":"The name of the ability used when triggering interaction on the outpost.","returns":["nil"],"args":[{"name":"interactAbilityName","types":["string"]}]}]},{"kind":"class","name":"CDOTA_Buff","clientName":"CDOTA_Buff","members":[{"kind":"function","name":"AddParticle","available":"both","returns":["nil"],"args":[{"name":"index","types":["int"]},{"name":"destroyImmediately","types":["bool"]},{"name":"statusEffect","types":["bool"]},{"name":"priority","types":["int"]},{"name":"heroEffect","types":["bool"]},{"name":"overheadEffect","types":["bool"]}]},{"kind":"function","name":"CheckStateToTable","available":"both","returns":["nil"],"args":[{"name":"table","types":["handle"]}]},{"kind":"function","name":"DecrementStackCount","available":"both","description":"Decrease this modifier\'s stack count by 1.","returns":["nil"],"args":[]},{"kind":"function","name":"Destroy","available":"both","description":"Run all associated destroy functions, then remove the modifier.","returns":["nil"],"args":[]},{"kind":"function","name":"DestroyOnExpire","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"ForceRefresh","available":"both","description":"Run all associated refresh functions on this modifier as if it was re-applied.","returns":["nil"],"args":[]},{"kind":"function","name":"GetAbility","available":"both","description":"Get the ability that generated the modifier.","returns":["CDOTABaseAbility","nil"],"args":[]},{"kind":"function","name":"GetAuraDuration","available":"both","description":"Returns aura stickiness (default 0.5).","returns":["float"],"args":[]},{"kind":"function","name":"GetAuraOwner","available":"both","description":"Returns the owner of the aura modifier, that applied this modifier. Always `nil` on the client.","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetCaster","available":"both","description":"Get the owner of the ability responsible for the modifier.","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetClass","available":"both","returns":["string"],"args":[]},{"kind":"function","name":"GetCreationTime","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetDieTime","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetDuration","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetElapsedTime","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetLastAppliedTime","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetName","available":"both","returns":["string"],"args":[]},{"kind":"function","name":"GetParent","available":"both","description":"Get the unit the modifier is parented to.","returns":["CDOTA_BaseNPC"],"args":[]},{"kind":"function","name":"GetRemainingTime","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetSerialNumber","available":"both","returns":["int"],"args":[]},{"kind":"function","name":"GetStackCount","available":"both","returns":["int"],"args":[]},{"kind":"function","name":"HasFunction","available":"both","returns":["bool"],"args":[{"name":"function","types":["modifierfunction"]}]},{"kind":"function","name":"IncrementStackCount","available":"both","description":"Increase this modifier\'s stack count by 1.","returns":["nil"],"args":[]},{"kind":"function","name":"IsDebuff","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsHexDebuff","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsStunDebuff","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"SendBuffRefreshToClients","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"SetDuration","available":"both","returns":["nil"],"args":[{"name":"duration","types":["float"]},{"name":"informClient","types":["bool"]}]},{"kind":"function","name":"SetOverheadEffectOffset","available":"both","returns":["bool"],"args":[{"name":"offset","types":["float"]}]},{"kind":"function","name":"SetStackCount","available":"both","returns":["nil"],"args":[{"name":"count","types":["int"]}]},{"kind":"function","name":"StartIntervalThink","available":"both","description":"Start this modifier\'s think function (OnIntervalThink) with the given interval (float).  To stop, call with -1.","returns":["nil"],"args":[{"name":"interval","types":["float"]}]}]},{"kind":"class","name":"CDOTA_CustomUIManager","instance":"CustomUI","members":[{"kind":"function","name":"DynamicHud_Create","available":"server","description":"Create a new custom UI HUD element for the specified player(s).","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"elementId","types":["string"]},{"name":"layoutFileName","types":["string"]},{"name":"dialogVariables","types":["handle"]}]},{"kind":"function","name":"DynamicHud_Destroy","available":"server","description":"Destroy a custom hud element.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"elementId","types":["string"]}]},{"kind":"function","name":"DynamicHud_SetDialogVariables","available":"server","description":"Add or modify dialog variables for an existing custom hud element.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"elementId","types":["string"]},{"name":"dialogVariables","types":["handle"]}]},{"kind":"function","name":"DynamicHud_SetVisible","available":"server","description":"Toggle the visibility of an existing custom hud element.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"elementId","types":["string"]},{"name":"visible","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_Item","clientName":"C_DOTA_Item","extend":"CDOTABaseAbility","members":[{"kind":"function","name":"CanBeUsedOutOfInventory","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"CanOnlyPlayerHeroPickup","available":"client","returns":["bool"],"args":[]},{"kind":"function","name":"GetContainer","available":"server","description":"Get the container for this item.","returns":["CDOTA_Item_Physical","nil"],"args":[]},{"kind":"function","name":"GetCost","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetCurrentCharges","available":"both","description":"Get the number of charges this item currently has.","returns":["int"],"args":[]},{"kind":"function","name":"GetInitialCharges","available":"both","description":"Get the initial number of charges this item has.","returns":["int"],"args":[]},{"kind":"function","name":"GetItemSlot","available":"both","returns":[{"kind":"literal","value":-1},"DOTAScriptInventorySlot_t"],"args":[]},{"kind":"function","name":"GetItemState","available":"server","description":"Gets whether item is unequipped or ready.","returns":["int"],"args":[]},{"kind":"function","name":"GetParent","available":"server","description":"Get the parent for this item.","returns":["handle"],"args":[]},{"kind":"function","name":"GetPurchaser","available":"server","description":"Get the purchaser for this item.","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetPurchaseTime","available":"server","description":"Get the purchase time of this item.","returns":["float"],"args":[]},{"kind":"function","name":"GetSecondaryCharges","available":"both","description":"Get the number of secondary charges this item currently has.","returns":["int"],"args":[]},{"kind":"function","name":"GetShareability","available":"both","returns":["EShareAbility"],"args":[]},{"kind":"function","name":"GetValuelessCharges","available":"server","description":"Get the number of valueless charges this item currently has.","returns":["int"],"args":[]},{"kind":"function","name":"IsAlertableItem","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsCastOnPickup","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsCombinable","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsCombineLocked","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsDisassemblable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsDroppable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsInBackpack","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsItem","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsKillable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsMuted","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsNeutralDrop","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsPermanent","available":"both","description":"Is this a permanent item?","returns":["bool"],"args":[]},{"kind":"function","name":"IsPurchasable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsRecipe","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsRecipeGenerated","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsSellable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsStackable","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"LaunchLoot","available":"server","returns":["nil"],"args":[{"name":"autoUse","types":["bool"]},{"name":"height","types":["float"]},{"name":"duration","types":["float"]},{"name":"endPoint","types":["Vector"]}]},{"kind":"function","name":"LaunchLootInitialHeight","available":"server","returns":["nil"],"args":[{"name":"autoUse","types":["bool"]},{"name":"initialHeight","types":["float"]},{"name":"launchHeight","types":["float"]},{"name":"duration","types":["float"]},{"name":"endPoint","types":["Vector"]}]},{"kind":"function","name":"LaunchLootRequiredHeight","available":"server","returns":["nil"],"args":[{"name":"autoUse","types":["bool"]},{"name":"requiredHeight","types":["float"]},{"name":"height","types":["float"]},{"name":"duration","types":["float"]},{"name":"endPoint","types":["Vector"]}]},{"kind":"function","name":"ModifyNumValuelessCharges","available":"server","description":"Modifies the number of valueless charges on this item.","returns":["nil"],"args":[{"name":"charges","types":["int"]}]},{"kind":"function","name":"OnEquip","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnUnequip","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"RequiresCharges","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"SetCanBeUsedOutOfInventory","available":"server","returns":["nil"],"args":[{"name":"value","types":["bool"]}]},{"kind":"function","name":"SetCastOnPickup","available":"server","returns":["nil"],"args":[{"name":"castOnPickUp","types":["bool"]}]},{"kind":"function","name":"SetCombineLocked","available":"server","returns":["nil"],"args":[{"name":"combineLocked","types":["bool"]}]},{"kind":"function","name":"SetCurrentCharges","available":"server","description":"Set the number of charges on this item.","returns":["nil"],"args":[{"name":"charges","types":["int"]}]},{"kind":"function","name":"SetDroppable","available":"server","returns":["nil"],"args":[{"name":"droppable","types":["bool"]}]},{"kind":"function","name":"SetItemState","available":"server","description":"Sets whether item is unequipped or ready.","returns":["nil"],"args":[{"name":"state","types":["int"]}]},{"kind":"function","name":"SetOnlyPlayerHeroPickup","available":"server","returns":["nil"],"args":[{"name":"onlyPlayerHero","types":["bool"]}]},{"kind":"function","name":"SetPurchaser","available":"server","description":"Set the purchaser of record for this item.","returns":["nil"],"args":[{"name":"purchaser","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"SetPurchaseTime","available":"server","description":"Set the purchase time of this item.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetSecondaryCharges","available":"server","description":"Set the number of secondary charges on this item.","returns":["nil"],"args":[{"name":"charges","types":["int"]}]},{"kind":"function","name":"SetSellable","available":"server","returns":["nil"],"args":[{"name":"sellable","types":["bool"]}]},{"kind":"function","name":"SetShareability","available":"server","returns":["nil"],"args":[{"name":"shareability","types":["EShareAbility"]}]},{"kind":"function","name":"SetStacksWithOtherOwners","available":"server","returns":["nil"],"args":[{"name":"stacksWithOtherOwners","types":["bool"]}]},{"kind":"function","name":"SpendCharge","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"StacksWithOtherOwners","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"Think","available":"server","description":"Think this item.","returns":["nil"],"args":[]}]},{"kind":"class","name":"CDOTA_Item_BagOfGold","extend":"CDOTA_Item","members":[{"kind":"function","name":"SetLifeTime","available":"server","description":"Set the life time of this item.","returns":["nil"],"args":[{"name":"time","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Item_DataDriven","extend":"CDOTA_Item","members":[{"kind":"function","name":"ApplyDataDrivenModifier","available":"server","description":"Applies a data driven modifier to the target.","returns":["nil"],"args":[{"name":"caster","types":["CDOTA_BaseNPC"]},{"name":"target","types":["CDOTA_BaseNPC"]},{"name":"modifierName","types":["string"]},{"name":"modifierTable","types":["table","nil"]}]},{"kind":"function","name":"ApplyDataDrivenThinker","available":"server","description":"Applies a data driven thinker at the location.","returns":["CDOTA_Buff"],"args":[{"name":"caster","types":["CDOTA_BaseNPC"]},{"name":"location","types":["Vector"]},{"name":"modifierName","types":["string"]},{"name":"modifierTable","types":["table","nil"]}]}]},{"kind":"class","name":"CDOTA_Item_EmptyBottle","clientName":"C_DOTA_Item_EmptyBottle","extend":"CDOTA_Item","members":[{"kind":"function","name":"ClearStoredRune","available":"server","description":"Clear the stored rune.","returns":["nil"],"args":[]},{"kind":"function","name":"OnRune","available":"server","description":"Place a rune in the bottle.","returns":["bool"],"args":[{"name":"runeType","types":["int"]}]},{"kind":"function","name":"SetStoredRune","available":"server","description":"Set the stored rune.","returns":["nil"],"args":[{"name":"runeType","types":["int"]}]}]},{"kind":"class","name":"CDOTA_Item_Lua","clientName":"C_DOTA_Item_Lua","extend":"CDOTA_Item","members":[{"kind":"function","name":"CanUnitPickUp","available":"server","description":"Returns true if this item can be picked up by the target unit.","returns":["bool"],"args":[{"name":"unit","description":"Unit trying to pick up the item.","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"CastFilterResult","available":"both","description":"Determine whether an issued command with no target is valid.","returns":["UnitFilterResult"],"args":[]},{"kind":"function","name":"CastFilterResultLocation","available":"both","description":"Determine whether an issued command on a location is valid.","returns":["UnitFilterResult"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"CastFilterResultTarget","available":"both","description":"Determine whether an issued command on a target is valid.","returns":["UnitFilterResult"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetAbilityTextureName","available":"client","description":"Allows code overriding of the item texture shown in the HUD.","returns":["string"],"args":[]},{"kind":"function","name":"GetAOERadius","available":"client","description":"Controls the size of the AOE casting cursor.","returns":["float"],"args":[]},{"kind":"function","name":"GetAssociatedPrimaryAbilities","available":"server","description":"Returns abilities that are stolen simultaneously, or otherwise related in functionality.","returns":["string"],"args":[]},{"kind":"function","name":"GetAssociatedSecondaryAbilities","available":"server","description":"Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.","returns":["string"],"args":[]},{"kind":"function","name":"GetBehavior","available":"both","description":"Return cast behavior type of this ability.","returns":["DOTA_ABILITY_BEHAVIOR"],"args":[]},{"kind":"function","name":"GetCastRange","available":"both","description":"Return cast range of this ability.","returns":["int"],"args":[{"name":"location","types":["Vector"]},{"name":"target","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"GetChannelledManaCostPerSecond","available":"both","description":"Return mana cost at the given level per second while channeling (-1 is current).","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetChannelTime","available":"both","description":"Return the channel time of this ability.","returns":["float"],"args":[]},{"kind":"function","name":"GetConceptRecipientType","available":"server","description":"Return who hears speech when this spell is cast.","returns":["int"],"args":[]},{"kind":"function","name":"GetCooldown","available":"both","description":"Return cooldown of this ability.","returns":["float"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetCustomCastError","available":"both","description":"Return the error string of a failed command with no target.","returns":["string"],"args":[]},{"kind":"function","name":"GetCustomCastErrorLocation","available":"both","description":"Return the error string of a failed command on a location.","returns":["string"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"GetCustomCastErrorTarget","available":"both","description":"Return the error string of a failed command on a target.","returns":["string"],"args":[{"name":"target","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetEffectiveCastRange","available":"both","description":"Return cast range of this ability, taking modifiers into account.","returns":["int"],"args":[{"name":"location","types":["Vector"]},{"name":"target","types":["handle"]}]},{"kind":"function","name":"GetGoldCost","available":"both","description":"Return gold cost at the given level (-1 is current).","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetIntrinsicModifierName","available":"server","description":"Returns the name of the modifier applied passively by this ability.","returns":["string"],"args":[]},{"kind":"function","name":"GetManaCost","available":"both","description":"Return mana cost at the given level (-1 is current).","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetPlaybackRateOverride","available":"server","description":"Return the animation rate of the cast animation.","returns":["float"],"args":[]},{"kind":"function","name":"IsHiddenAbilityCastable","available":"server","description":"Returns true if this ability can be used when not on the action panel.","returns":["bool"],"args":[]},{"kind":"function","name":"IsHiddenWhenStolen","available":"server","description":"Returns true if this ability is hidden when stolen by Spell Steal.","returns":["bool"],"args":[]},{"kind":"function","name":"IsMuted","available":"both","description":"Returns whether this item is muted or not.","returns":["bool"],"args":[]},{"kind":"function","name":"IsRefreshable","available":"server","description":"Returns true if this ability is refreshed by Refresher Orb.","returns":["bool"],"args":[]},{"kind":"function","name":"IsStealable","available":"server","description":"Returns true if this ability can be stolen by Spell Steal.","returns":["bool"],"args":[]},{"kind":"function","name":"OnAbilityPhaseInterrupted","available":"server","description":"Cast time did not complete successfully.","returns":["nil"],"args":[]},{"kind":"function","name":"OnAbilityPhaseStart","available":"server","description":"Cast time begins (return true for successful cast).","returns":["bool"],"args":[]},{"kind":"function","name":"OnChannelFinish","available":"server","description":"Channel finished.","returns":["nil"],"args":[{"name":"interrupted","types":["bool"]}]},{"kind":"function","name":"OnChannelThink","available":"server","description":"Channeling is taking place.","returns":["nil"],"args":[{"name":"interval","types":["float"]}]},{"kind":"function","name":"OnChargeCountChanged","available":"server","description":"Runs when item\'s charge count changes.","returns":["nil"],"args":[]},{"kind":"function","name":"OnHeroCalculateStatBonus","available":"server","description":"Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.","returns":["nil"],"args":[]},{"kind":"function","name":"OnHeroDiedNearby","available":"server","description":"A hero has died in the vicinity (ie Urn), takes table of params.","returns":["nil"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"event","types":["table"]}]},{"kind":"function","name":"OnHeroLevelUp","available":"server","description":"Caster gained a level.","returns":["nil"],"args":[]},{"kind":"function","name":"OnInventoryContentsChanged","available":"server","description":"Caster inventory changed.","returns":["nil"],"args":[]},{"kind":"function","name":"OnItemEquipped","available":"server","description":"Caster equipped item.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"OnOwnerDied","available":"server","description":"Caster died.","returns":["nil"],"args":[]},{"kind":"function","name":"OnOwnerSpawned","available":"server","description":"Caster respawned or spawned for the first time.","returns":["nil"],"args":[]},{"kind":"function","name":"OnProjectileHit","available":"server","description":"Projectile has collided with a given target or reached its destination. If \'true` is returned, projectile would be destroyed.","returns":["bool","nil"],"args":[{"name":"target","types":["CDOTA_BaseNPC","nil"]},{"name":"location","types":["Vector"]}]},{"kind":"function","name":"OnProjectileThink","available":"server","description":"Projectile is actively moving.","returns":["nil"],"args":[{"name":"location","types":["Vector"]}]},{"kind":"function","name":"OnSpellStart","available":"server","description":"Cast time finished, spell effects begin.","returns":["nil"],"args":[]},{"kind":"function","name":"OnStolen","available":"server","description":"Special behavior when stolen by Spell Steal.","returns":["nil"],"args":[{"name":"sourceAbility","types":["CDOTABaseAbility"]}]},{"kind":"function","name":"OnToggle","available":"server","description":"Ability is toggled on/off.","returns":["nil"],"args":[]},{"kind":"function","name":"OnUnStolen","available":"server","description":"Special behavior when lost by Spell Steal.","returns":["nil"],"args":[]},{"kind":"function","name":"OnUpgrade","available":"server","description":"Ability gained a level.","returns":["nil"],"args":[]},{"kind":"function","name":"ProcsMagicStick","available":"server","description":"Returns true if this ability will generate magic stick charges for nearby enemies.","returns":["bool"],"args":[]},{"kind":"function","name":"SpeakTrigger","available":"server","description":"Return the type of speech used.","returns":["int"],"args":[]},{"kind":"function","name":"Precache","available":"server","abstract":true,"returns":["nil"],"args":[{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"Spawn","available":"both","abstract":true,"description":"Called when ability entity is created, after Init.","returns":["nil"],"args":[]}]},{"kind":"class","name":"CDOTA_Item_Physical","extend":"CBaseAnimating","members":[{"kind":"function","name":"GetContainedItem","available":"server","description":"Returned the contained item.","returns":["CDOTA_Item"],"args":[]},{"kind":"function","name":"GetCreationTime","available":"server","description":"Returns the game time when this item was created in the world.","returns":["float"],"args":[]},{"kind":"function","name":"SetContainedItem","available":"server","description":"Set the contained item.","returns":["nil"],"args":[{"name":"item","types":["CDOTA_Item"]}]}]},{"kind":"class","name":"CDOTA_ItemSpawner","extend":"CBaseEntity","members":[{"kind":"function","name":"GetItemName","available":"server","description":"Returns the item name.","returns":["string"],"args":[]}]},{"kind":"class","name":"CDOTA_MapTree","extend":"CBaseEntity","members":[{"kind":"function","name":"CutDown","available":"server","description":"Cuts down this tree.","returns":["nil"],"args":[{"name":"teamNumberKnownTo","types":["int"]}]},{"kind":"function","name":"CutDownRegrowAfter","available":"server","description":"Cuts down this tree.","returns":["nil"],"args":[{"name":"regrowAfter","types":["float"]},{"name":"teamNumberKnownTo","types":["int"]}]},{"kind":"function","name":"GrowBack","available":"server","description":"Grows back the tree if it was cut down.","returns":["nil"],"args":[]},{"kind":"function","name":"IsStanding","available":"server","description":"Returns true if the tree is standing, false if it has been cut down.","returns":["bool"],"args":[]}]},{"kind":"class","name":"CDOTA_Modifier_Lua","clientName":"C_DOTA_Modifier_Lua","extend":"CDOTA_Buff","members":[{"kind":"function","name":"AllowIllusionDuplicate","available":"both","description":"True/false if this modifier is active on illusions.","returns":["bool"],"args":[]},{"kind":"function","name":"CanParentBeAutoAttacked","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"DestroyOnExpire","available":"both","description":"True/false if this buff is removed when the duration expires.","returns":["bool"],"args":[]},{"kind":"function","name":"GetAttributes","available":"both","description":"Return the types of attributes applied to this modifier.","returns":["DOTAModifierAttribute_t"],"args":[]},{"kind":"function","name":"GetAuraDuration","available":"both","description":"Returns aura stickiness.","returns":["float"],"args":[]},{"kind":"function","name":"GetAuraEntityReject","available":"both","description":"Return true/false if this entity should receive the aura under specific conditions.","returns":["bool"],"args":[{"name":"entity","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"GetAuraRadius","available":"both","description":"Return the range around the parent this aura tries to apply its buff.","returns":["int"],"args":[]},{"kind":"function","name":"GetAuraSearchFlags","available":"both","description":"Return the unit flags this aura respects when placing buffs.","returns":["DOTA_UNIT_TARGET_FLAGS"],"args":[]},{"kind":"function","name":"GetAuraSearchTeam","available":"both","description":"Return the teams this aura applies its buff to.","returns":["DOTA_UNIT_TARGET_TEAM"],"args":[]},{"kind":"function","name":"GetAuraSearchType","available":"both","description":"Return the unit classifications this aura applies its buff to.","returns":["DOTA_UNIT_TARGET_TYPE"],"args":[]},{"kind":"function","name":"GetCritDamage","available":"both","description":"A Modifier that listens to MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE has to have a GetCritDamage implementation so we can know when to evaluate it. Value should be in \'times the original value format\' e.g: 1.5 not 150.","returns":["float"],"args":[]},{"kind":"function","name":"GetEffectAttachType","available":"both","description":"Return the attach type of the particle system from GetEffectName.","returns":["ParticleAttachment_t"],"args":[]},{"kind":"function","name":"GetEffectName","available":"both","description":"Return the name of the particle system that is created while this modifier is active.","returns":["string"],"args":[]},{"kind":"function","name":"GetHeroEffectName","available":"both","description":"Return the name of the hero effect particle system that is created while this modifier is active.","returns":["string"],"args":[]},{"kind":"function","name":"GetModifierAura","available":"both","description":"The name of the secondary modifier that will be applied by this modifier (if it is an aura).","returns":["string"],"args":[]},{"kind":"function","name":"GetPriority","available":"both","description":"Return the priority order this modifier will be applied over others.","returns":["modifierpriority"],"args":[]},{"kind":"function","name":"GetStatusEffectName","available":"both","description":"Return the name of the status effect particle system that is created while this modifier is active.","returns":["string"],"args":[]},{"kind":"function","name":"GetTexture","available":"both","description":"Return the name of the buff icon to be shown for this modifier.","returns":["string"],"args":[]},{"kind":"function","name":"HeroEffectPriority","available":"both","description":"Relationship of this hero effect with those from other buffs (higher is more likely to be shown).","returns":["modifierpriority"],"args":[]},{"kind":"function","name":"IsAura","available":"both","description":"True/false if this modifier is an aura.","returns":["bool"],"args":[]},{"kind":"function","name":"IsAuraActiveOnDeath","available":"both","description":"True/false if this aura provides buffs when the parent is dead.","returns":["bool"],"args":[]},{"kind":"function","name":"IsDebuff","available":"both","description":"True/false if this modifier should be displayed as a debuff.","returns":["bool"],"args":[]},{"kind":"function","name":"IsHidden","available":"both","description":"True/false if this modifier should be displayed on the buff bar.","returns":["bool"],"args":[]},{"kind":"function","name":"IsPermanent","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsPurgable","available":"both","description":"True/false if this modifier can be purged.","returns":["bool"],"args":[]},{"kind":"function","name":"IsPurgeException","available":"both","description":"True/false if this modifier can be purged by strong dispels.","returns":["bool"],"args":[]},{"kind":"function","name":"IsStunDebuff","available":"both","description":"True/false if this modifier is considered a stun for purge reasons.","returns":["bool"],"args":[]},{"kind":"function","name":"OnCreated","available":"both","description":"Runs when the modifier is created.","returns":["nil"],"args":[{"name":"params","types":["table"]}]},{"kind":"function","name":"OnDestroy","available":"both","description":"Runs when the modifier is destroyed (after unit loses modifier).","returns":["nil"],"args":[]},{"kind":"function","name":"OnIntervalThink","available":"both","description":"Runs when the think interval occurs.","returns":["nil"],"args":[]},{"kind":"function","name":"OnRefresh","available":"both","description":"Runs when the modifier is refreshed.","returns":["nil"],"args":[{"name":"params","types":["table"]}]},{"kind":"function","name":"OnRemoved","available":"both","description":"Runs when the modifier is destroyed (before unit loses modifier).","returns":["nil"],"args":[]},{"kind":"function","name":"OnStackCountChanged","available":"both","description":"Runs when stack count changes (param is old count).","returns":["nil"],"args":[{"name":"stackCount","types":["int"]}]},{"kind":"function","name":"RemoveOnDeath","available":"both","description":"True/false if this modifier is removed when the parent dies.","returns":["bool"],"args":[]},{"kind":"function","name":"SetHasCustomTransmitterData","available":"both","returns":["nil"],"args":[{"name":"hasCustomData","types":["bool"]}]},{"kind":"function","name":"ShouldUseOverheadOffset","available":"both","description":"Apply the overhead offset to the attached effect.","returns":["bool"],"args":[]},{"kind":"function","name":"StatusEffectPriority","available":"both","description":"Relationship of this status effect with those from other buffs (higher is more likely to be shown).","returns":["modifierpriority"],"args":[]},{"kind":"function","name":"BotAttackScoreBonus","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"CheckState","available":"both","abstract":true,"description":"Return a map of enabled/disabled states.","returns":[{"kind":"table","key":["modifierstate"],"value":["bool"]}],"args":[]},{"kind":"function","name":"DeclareFunctions","available":"both","abstract":true,"description":"Return a list of modifier functions this modifier implements.","returns":[{"kind":"array","types":["modifierfunction"]}],"args":[]},{"kind":"function","name":"GetAbsoluteNoDamageMagical","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetAbsoluteNoDamagePhysical","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetAbsoluteNoDamagePure","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetAbsorbSpell","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetActivityTranslationModifiers","available":"both","abstract":true,"args":[],"returns":["string"]},{"kind":"function","name":"GetAllowEtherealAttack","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetAlwaysAllowAttack","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetAlwaysAutoAttackWhileHoldPosition","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetAttackSound","available":"both","abstract":true,"args":[],"returns":["string"]},{"kind":"function","name":"GetBonusDayVision","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetBonusNightVision","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetBonusNightVisionUnique","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetBonusVisionPercentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetDisableAutoAttack","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetDisableHealing","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetFixedDayVision","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetFixedNightVision","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetForceDrawOnMinimap","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetIsIllusion","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetMinHealth","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAbilityLayout","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackPointConstant","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackRangeBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackRangeBonusPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierAttackRangeBonusUnique","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackRangeOverride","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackSpeed_Limit","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierAttackSpeedBaseOverride","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackSpeedBonus_Constant","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierAttackSpeedPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierAttackSpeedReductionPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierAvoidDamage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierAvoidSpell","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierBaseAttack_BonusDamage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierBaseAttackTimeConstant","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierBaseAttackTimeConstant_Adjust","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierBaseAttackTimePercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierBaseDamageOutgoing_Percentage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierBaseDamageOutgoing_PercentageUnique","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierBaseRegen","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierBonusDamageOutgoing_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierBonusStats_Agility","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierBonusStats_Agility_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierBonusStats_Intellect","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierBonusStats_Intellect_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierBonusStats_Strength","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierBonusStats_Strength_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierCanAttackTrees","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierCastRangeBonus","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierCastRangeBonusPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierCastRangeBonusStacking","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierCastRangeBonusTarget","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierChangeAbilityValue","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierConstantDeathGoldCost","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierConstantHealthRegen","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierConstantManaRegen","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierConstantManaRegenUnique","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierConstantRespawnTime","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierCooldownReduction_Constant","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierDamageOutgoing_Percentage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierDamageOutgoing_Percentage_Illusion","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierDamageOutgoing_Percentage_Illusion_Amplify","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierDisableTurning","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierDodgeProjectile","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierEvasion_Constant","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierExtraHealthBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierExtraHealthPercentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierExtraManaBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierExtraManaPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierExtraStrengthBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierFixedAttackRate","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierHealAmplify_PercentageSource","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierHealAmplify_PercentageTarget","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierHealthBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierHealthRegenPercentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierHealthRegenPercentageUnique","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierHPRegen_CanBeNegative","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierHPRegenAmplify_Percentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierIgnoreCastAngle","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierIgnoreCooldown","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierIgnoreMovespeedLimit","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierIgnorePhysicalArmor","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierIllusionLabel","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierIncomingDamage_Percentage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierIncomingPhysicalDamage_Percentage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierIncomingPhysicalDamageConstant","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierIncomingSpellDamageConstant","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierInvisibilityAttackBehaviorException","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierInvisibilityLevel","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierLifestealRegenAmplify_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMagical_ConstantBlock","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierMagicalResistanceBaseReduction","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMagicalResistanceBonus","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierMagicalResistanceBonusIllusions","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMagicalResistanceDecrepifyUnique","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierMagicalResistanceDirectModification","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierManaBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierManacostReduction_Constant","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierManaDrainAmplify_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMaxAttackRange","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMaxDebuffDuration","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMiss_Percentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierModelChange","available":"both","abstract":true,"args":[],"returns":["string"]},{"kind":"function","name":"GetModifierModelScale","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeed_Absolute","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeed_AbsoluteMax","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMoveSpeed_AbsoluteMin","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeed_Limit","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Constant","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Constant_Unique","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Constant_Unique_2","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Percentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Percentage_Unique","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Special_Boots","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedBonus_Special_Boots_2","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedOverride","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMoveSpeedReductionPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierMPRegenAmplify_Percentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierMPRestoreAmplify_Percentage","available":"both","abstract":true,"description":"Total amplify value is clamped to 0.","args":[],"returns":["float"]},{"kind":"function","name":"GetModifierNegativeEvasion_Constant","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierNoVisionOfAttacker","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierOverrideAbilitySpecial","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierOverrideAbilitySpecialEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierOverrideAbilitySpecialValue","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierOverrideAbilitySpecialEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierOverrideAttackDamage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageAttackAnimTime","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPercentageCasttime","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageCooldown","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageCooldownOngoing","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPercentageCooldownStacking","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageExpRateBoost","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageGoldRateBoost","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPercentageManacost","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageManacostStacking","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPercentageRespawnTime","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPersistentInvisibility","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPhysical_ConstantBlock","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPhysical_ConstantBlockSpecial","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPhysical_ConstantBlockUnavoidablePreArmor","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPhysicalArmorBase_Percentage","available":"both","abstract":true,"description":"Values above 100% are ignored.","args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPhysicalArmorBonus","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPhysicalArmorBonusPost","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPhysicalArmorBonusUnique","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPhysicalArmorBonusUniqueActive","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPhysicalArmorTotal_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPreAttack","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPreAttack_BonusDamage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPreAttack_BonusDamage_Proc","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierPreAttack_BonusDamage_Target","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPreAttack_BonusDamagePostCrit","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPreAttack_CriticalStrike","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierPreAttack_DeadlyBlow","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierPreAttack_Target_CriticalStrike","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierProcAttack_BonusDamage_Magical","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierProcAttack_BonusDamage_Magical_Target","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierProcAttack_BonusDamage_Physical","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierProcAttack_BonusDamage_Pure","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierProcAttack_ConvertPhysicalToMagical","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierProcAttack_Feedback","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierProjectileName","available":"both","abstract":true,"args":[],"returns":["string"]},{"kind":"function","name":"GetModifierProjectileSpeedBonus","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierProjectileSpeedBonusPercentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierProvidesFOWVision","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierRadarCooldownReduction","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierScepter","available":"both","abstract":true,"description":"Always applies scepter when this property is active","args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierShard","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierSpellAmplify_Percentage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierSpellAmplify_PercentageCreep","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierSpellAmplify_PercentageUnique","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierSpellLifestealRegenAmplify_Percentage","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierSpellsRequireHP","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierStackingRespawnTime","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierStatusResistance","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierStatusResistanceCaster","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierStatusResistanceStacking","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierStrongIllusion","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetModifierSuperIllusion","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierSuperIllusionWithUltimate","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierTempestDouble","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierTotal_ConstantBlock","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierTotalDamageOutgoing_Percentage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["float"]},{"kind":"function","name":"GetModifierTotalPercentageManaRegen","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierTurnRate_Override","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierTurnRate_Percentage","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetModifierUnitDisllowUpgrading","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierUnitStatsNeedsRefresh","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetModifierXPDuringDeath","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetOverrideAnimation","available":"both","abstract":true,"args":[],"returns":["GameActivity_t"]},{"kind":"function","name":"GetOverrideAnimationRate","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetOverrideAnimationWeight","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetOverrideAttackMagical","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetPrimaryStatDamageMultiplier","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetReflectSpell","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"GetSuppressCleave","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetSuppressTeleport","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetTriggerCosmeticAndEndAttack","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"GetUnitLifetimeFraction","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"GetVisualZDelta","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"OnAbilityEndChannel","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAbilityExecuted","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAbilityFullyCast","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAbilityStart","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAssist","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnAttack","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackAllied","available":"both","abstract":true,"description":"Happens even if attack can\'t be issued.","args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackCancelled","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttacked","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackFail","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackFinished","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackLanded","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackRecord","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackRecordDestroy","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttackStart","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnAttemptProjectileDodge","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnBreakInvisibility","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnBuildingKilled","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierInstanceEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnDamageCalculated","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnDamagePrevented","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnDeath","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierInstanceEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnDominated","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnHealReceived","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnHealthGained","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnHeroKilled","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnKill","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnMagicDamageCalculated","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnManaGained","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnModelChanged","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnModifierAdded","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAddedEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnOrder","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnPreDebuffApplied","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnProcessCleave","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnProjectileDodge","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnProjectileObstructionHit","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnRespawn","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnSetLocation","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnSpellTargetReady","available":"both","abstract":true,"args":[],"returns":["nil"]},{"kind":"function","name":"OnSpentMana","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAbilityEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnStateChanged","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnTakeDamage","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierInstanceEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnTakeDamageKillCredit","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierAttackEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnTeleported","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnTeleporting","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"OnTooltip","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"OnTooltip2","available":"both","abstract":true,"args":[],"returns":["float"]},{"kind":"function","name":"OnUnitMoved","available":"both","abstract":true,"args":[{"name":"event","types":["ModifierUnitEvent"]}],"returns":["nil"]},{"kind":"function","name":"PreserveParticlesOnModelChanged","available":"both","abstract":true,"args":[],"returns":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"kind":"function","name":"ReincarnateTime","available":"both","abstract":true,"args":[],"returns":["float"]}]},{"kind":"class","name":"CDOTA_Modifier_Lua_Horizontal_Motion","clientName":"CDOTA_Modifier_Lua_Horizontal_Motion","extend":"CDOTA_Modifier_Lua","members":[{"kind":"function","name":"ApplyHorizontalMotionController","available":"server","description":"Starts the horizontal motion controller effects for this buff.  Returns true if successful.","returns":["bool"],"args":[]},{"kind":"function","name":"GetPriority","available":"server","description":"Get the priority.","returns":["modifierpriority"],"args":[]},{"kind":"function","name":"OnHorizontalMotionInterrupted","available":"server","description":"Called when the motion gets interrupted.","returns":["nil"],"args":[]},{"kind":"function","name":"SetPriority","available":"server","description":"Set the priority.","returns":["nil"],"args":[{"name":"motionPriority","types":["modifierpriority"]}]},{"kind":"function","name":"UpdateHorizontalMotion","available":"server","description":"Perform any motion from the given interval on the NPC.","returns":["nil"],"args":[{"name":"me","types":["CDOTA_BaseNPC"]},{"name":"dt","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Modifier_Lua_Motion_Both","clientName":"CDOTA_Modifier_Lua_Motion_Both","extend":"CDOTA_Modifier_Lua","members":[{"kind":"function","name":"ApplyHorizontalMotionController","available":"server","description":"Starts the horizontal motion controller effects for this buff.  Returns true if successful.","returns":["bool"],"args":[]},{"kind":"function","name":"ApplyVerticalMotionController","available":"server","description":"Starts the vertical motion controller effects for this buff.  Returns true if successful.","returns":["bool"],"args":[]},{"kind":"function","name":"GetPriority","available":"server","description":"Get the priority.","returns":["modifierpriority"],"args":[]},{"kind":"function","name":"OnHorizontalMotionInterrupted","available":"server","description":"Called when the motion gets interrupted.","returns":["nil"],"args":[]},{"kind":"function","name":"OnVerticalMotionInterrupted","available":"server","description":"Called when the motion gets interrupted.","returns":["nil"],"args":[]},{"kind":"function","name":"SetPriority","available":"server","description":"Set the priority.","returns":["nil"],"args":[{"name":"motionPriority","types":["modifierpriority"]}]},{"kind":"function","name":"UpdateHorizontalMotion","available":"server","description":"Perform any motion from the given interval on the NPC.","returns":["nil"],"args":[{"name":"me","types":["CDOTA_BaseNPC"]},{"name":"dt","types":["float"]}]},{"kind":"function","name":"UpdateVerticalMotion","available":"server","description":"Perform any motion from the given interval on the NPC.","returns":["nil"],"args":[{"name":"me","types":["CDOTA_BaseNPC"]},{"name":"dt","types":["float"]}]}]},{"kind":"class","name":"CDOTA_Modifier_Lua_Vertical_Motion","clientName":"CDOTA_Modifier_Lua_Vertical_Motion","extend":"CDOTA_Modifier_Lua","members":[{"kind":"function","name":"ApplyVerticalMotionController","available":"server","description":"Starts the vertical motion controller effects for this buff.  Returns true if successful.","returns":["bool"],"args":[]},{"kind":"function","name":"GetMotionPriority","available":"server","description":"Get the priority.","returns":["modifierpriority"],"args":[]},{"kind":"function","name":"OnVerticalMotionInterrupted","available":"server","description":"Called when the motion gets interrupted.","returns":["nil"],"args":[]},{"kind":"function","name":"SetMotionPriority","available":"server","description":"Set the priority.","returns":["nil"],"args":[{"name":"motionPriority","types":["modifierpriority"]}]},{"kind":"function","name":"UpdateVerticalMotion","available":"server","description":"Perform any motion from the given interval on the NPC.","returns":["nil"],"args":[{"name":"me","types":["CDOTA_BaseNPC"]},{"name":"dt","types":["float"]}]}]},{"kind":"class","name":"CDOTA_NeutralSpawner","extend":"CPointEntity","members":[{"kind":"function","name":"CreatePendingUnits","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"SelectSpawnType","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"SpawnNextBatch","available":"server","returns":["nil"],"args":[{"name":"ignoreBlockers","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_PlayerResource","extend":"CBaseEntity","instance":"PlayerResource","members":[{"kind":"function","name":"AddAegisPickup","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"AddCandyEvent","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"reason","types":["int"]}]},{"kind":"function","name":"AddClaimedFarm","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"farmValue","types":["float"]},{"name":"earnedValue","types":["bool"]}]},{"kind":"function","name":"AddGoldSpentOnSupport","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"cost","types":["int"]}]},{"kind":"function","name":"AddNeutralItemToStash","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"teamNumber","types":["DOTATeam_t"]},{"name":"item","types":["CDOTA_Item"]}]},{"kind":"function","name":"AddRunePickup","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"runes","types":["int"]}]},{"kind":"function","name":"AreUnitsSharedWithPlayerID","available":"server","returns":["bool"],"args":[{"name":"unitOwnerPlayerId","types":["PlayerID"]},{"name":"otherPlayerId","types":["PlayerID"]}]},{"kind":"function","name":"CanRepick","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"ClearKillsMatrix","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"ClearLastHitMultikill","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"ClearLastHitStreak","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"ClearRawPlayerDamageMatrix","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"ClearStreak","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetAegisPickups","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetAssists","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetBroadcasterChannel","available":"server","returns":["uint"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetBroadcasterChannelSlot","available":"server","returns":["uint"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetClaimedDenies","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetClaimedFarm","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"onlyEarned","types":["bool"]}]},{"kind":"function","name":"GetClaimedMisses","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetConnectionState","available":"server","returns":["DOTAConnectionState_t"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetCreepDamageTaken","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"total","types":["bool"]}]},{"kind":"function","name":"GetCustomBuybackCooldown","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetCustomBuybackCost","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetCustomTeamAssignment","available":"server","description":"Get the current custom team assignment for this player.","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetDamageDoneToHero","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"victimId","types":["PlayerID"]}]},{"kind":"function","name":"GetDeaths","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetDenies","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetEventGameCustomActionClaimCount","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"unActionId","types":["uint"]}]},{"kind":"function","name":"GetEventGameCustomActionClaimCountByName","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"actionName","types":["string"]}]},{"kind":"function","name":"GetEventGameUpgrades","available":"server","description":"(nPlayerID).","returns":["handle"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetEventPointsForPlayerID","available":"server","returns":["uint"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetEventPremiumPoints","available":"server","returns":["uint"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetEventRanks","available":"server","returns":["unknown"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGold","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGoldLostToDeath","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGoldPerMin","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGoldSpentOnBuybacks","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGoldSpentOnConsumables","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGoldSpentOnItems","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetGoldSpentOnSupport","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetHealing","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetHeroDamageTaken","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"total","types":["bool"]}]},{"kind":"function","name":"GetKills","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetKillsDoneToHero","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"victimId","types":["PlayerID"]}]},{"kind":"function","name":"GetLabyrinthEventGameHeroUnlocks","available":"server","description":"(nPlayerID).","returns":["handle"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetLastHitMultikill","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetLastHits","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetLastHitStreak","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetLevel","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetLiveSpectatorTeam","available":"server","returns":["DOTATeam_t",{"kind":"literal","value":-1}],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetMisses","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetNearbyCreepDeaths","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetNetWorth","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetNthCourierForTeam","available":"server","returns":["CDOTA_Unit_Courier","nil"],"args":[{"name":"courierIndex","types":["int"]},{"name":"teamNumber","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetNthPlayerIDOnTeam","available":"server","returns":["PlayerID"],"args":[{"name":"teamNumber","types":["DOTATeam_t"]},{"name":"nthPlayer","types":["int"]}]},{"kind":"function","name":"GetNumConnectedHumanPlayers","available":"server","description":"Players on a valid team (radiant, dire, or custom*) who haven\'t abandoned the game.","returns":["int"],"args":[]},{"kind":"function","name":"GetNumConsumablesPurchased","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetNumCouriersForTeam","available":"server","returns":["int"],"args":[{"name":"teamNumber","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetNumItemsPurchased","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetPartyID","available":"server","returns":["Uint64"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetPlayer","available":"server","description":"Returns player entity for a player with specified id. Player entity represents a single connection, so a different entity might be returned. When player is disconnected nil would be returned.","returns":["CDOTAPlayerController","nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetPlayerCount","available":"server","description":"Includes spectators and players not assigned to a team.","returns":["int"],"args":[]},{"kind":"function","name":"GetPlayerCountForTeam","available":"server","returns":["int"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetPlayerLoadedCompletely","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetPlayerName","available":"server","returns":["string"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetPreferredCourierForPlayer","available":"server","returns":["handle"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetRawPlayerDamage","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetReliableGold","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetRespawnSeconds","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetRoshanKills","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetRunePickups","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetSelectedHeroEntity","available":"server","returns":["CDOTA_BaseNPC_Hero","nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetSelectedHeroID","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetSelectedHeroName","available":"server","returns":["string"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetSteamAccountID","available":"server","returns":["uint"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetSteamID","available":"server","description":"Get the 64 bit steam ID for a given player.","returns":["Uint64"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetStreak","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetStuns","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTeam","available":"server","returns":["DOTATeam_t"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTeamKills","available":"server","returns":["int"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetTeamPlayerCount","available":"server","description":"(Deprecated: use GetNumConnectedHumanPlayers) Players on a valid team (radiant, dire, or custom*) who haven\'t abandoned the game.","returns":["int"],"args":[]},{"kind":"function","name":"GetTimeOfLastConsumablePurchase","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTimeOfLastDeath","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTimeOfLastItemPurchase","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTotalEarnedGold","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTotalEarnedXP","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTotalGoldSpent","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetTowerDamageTaken","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"total","types":["bool"]}]},{"kind":"function","name":"GetTowerKills","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetUnitShareMaskForPlayer","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"otherPlayerId","types":["PlayerID"]}]},{"kind":"function","name":"GetUnreliableGold","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetXPPerMin","available":"server","returns":["float"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"HasCustomGameTicketForPlayerID","available":"server","description":"Does this player have a custom game ticket for this game?","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"HasRandomed","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"HasSelectedHero","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"HasSetEventGameCustomActionClaimCount","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"HaveAllPlayersJoined","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IncrementAssists","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"victimId","types":["PlayerID"]}]},{"kind":"function","name":"IncrementClaimedDenies","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"IncrementClaimedMisses","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"IncrementDeaths","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"killerId","types":["PlayerID"]}]},{"kind":"function","name":"IncrementDenies","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"IncrementKills","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"victimId","types":["PlayerID"]}]},{"kind":"function","name":"IncrementLastHitMultikill","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"count","types":["int"]}]},{"kind":"function","name":"IncrementLastHits","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"count","types":["int"]}]},{"kind":"function","name":"IncrementLastHitStreak","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"count","types":["int"]}]},{"kind":"function","name":"IncrementMisses","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"IncrementNearbyCreepDeaths","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"creeps","types":["int"]}]},{"kind":"function","name":"IncrementStreak","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"count","types":["int"]}]},{"kind":"function","name":"IncrementTotalEarnedXP","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"xp","types":["int"]},{"name":"reason","types":["EDOTA_ModifyXP_Reason"]}]},{"kind":"function","name":"IsBroadcaster","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"IsDisableHelpSetForPlayerID","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"otherPlayerId","types":["PlayerID"]}]},{"kind":"function","name":"IsFakeClient","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"IsHeroSelected","available":"server","returns":["bool"],"args":[{"name":"heroname","types":["string"]},{"name":"ignoreUnrevealedPick","types":["bool"]}]},{"kind":"function","name":"IsHeroSharedWithPlayerID","available":"server","returns":["bool"],"args":[{"name":"unitOwnerPlayerId","types":["PlayerID"]},{"name":"otherPlayerId","types":["PlayerID"]}]},{"kind":"function","name":"IsValidPlayer","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["int"]}]},{"kind":"function","name":"IsValidPlayerID","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["int"]}]},{"kind":"function","name":"IsValidTeamPlayer","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["int"]}]},{"kind":"function","name":"IsValidTeamPlayerID","available":"server","returns":["bool"],"args":[{"name":"playerId","types":["int"]}]},{"kind":"function","name":"ModifyGold","available":"server","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"goldChange","types":["int"]},{"name":"reliable","types":["bool"]},{"name":"reason","types":["EDOTA_ModifyGold_Reason"]}]},{"kind":"function","name":"NumPlayers","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"NumTeamPlayers","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"RecordConsumableAbilityChargeChange","available":"server","description":"Increment or decrement consumable charges (nPlayerID, item_definition_index, nChargeIncrementOrDecrement).","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"itemDefinitionIndex","types":["int"]},{"name":"chargeIncrementOrDecrement","types":["int"]}]},{"kind":"function","name":"RecordEventActionGrant","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"event","types":["int"]},{"name":"unActionId","types":["int"]},{"name":"unAudit","types":["int"]},{"name":"unQuantity","types":["uint"]},{"name":"unAuditData","types":["uint"]}]},{"kind":"function","name":"RecordEventActionGrantForPrimaryEvent","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"actionName","types":["string"]},{"name":"unAudit","types":["int"]},{"name":"unQuantity","types":["uint"]},{"name":"unAuditData","types":["uint"]}]},{"kind":"function","name":"ReplaceHeroWith","available":"server","description":"Replaces the player\'s hero with a new one of the specified class, gold and XP.","returns":["CDOTA_BaseNPC_Hero"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"heroClass","types":["string"]},{"name":"gold","types":["int"]},{"name":"xp","types":["int"]}]},{"kind":"function","name":"ReplaceHeroWithNoTransfer","available":"server","description":"Replaces the player\'s hero with a new one of the specified class, gold and XP, without transferring items/abilities if same hero.","returns":["handle"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"heroClass","types":["string"]},{"name":"gold","types":["int"]},{"name":"xp","types":["int"]}]},{"kind":"function","name":"ResetBuybackCostTime","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"ResetTotalEarnedGold","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"SetBuybackCooldownTime","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"buybackCooldown","types":["float"]}]},{"kind":"function","name":"SetBuybackGoldLimitTime","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"buybackCooldown","types":["float"]}]},{"kind":"function","name":"SetCameraTarget","available":"server","description":"Force the given player\'s camera to follow the given entity.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"target","types":["CBaseEntity","nil"]}]},{"kind":"function","name":"SetCanRepick","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"canRepick","types":["bool"]}]},{"kind":"function","name":"SetCustomBuybackCooldown","available":"server","description":"Set the buyback cooldown for this player.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"cooldownTime","types":["float"]}]},{"kind":"function","name":"SetCustomBuybackCost","available":"server","description":"Set the buyback cost for this player.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"goldCost","types":["int"]}]},{"kind":"function","name":"SetCustomIntParam","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"param","types":["int"]}]},{"kind":"function","name":"SetCustomPlayerColor","available":"server","description":"Set custom color for player.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]}]},{"kind":"function","name":"SetCustomTeamAssignment","available":"server","description":"Set custom team assignment for this player.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"teamAssignment","types":["DOTATeam_t"]}]},{"kind":"function","name":"SetGold","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"gold","types":["int"]},{"name":"reliable","types":["bool"]}]},{"kind":"function","name":"SetHasRandomed","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"SetLastBuybackTime","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"lastBuybackTime","types":["int"]}]},{"kind":"function","name":"SetOverrideSelectionEntity","available":"server","description":"Set the forced selection entity for a player.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"entity","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"SetUnitShareMaskForPlayer","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"otherPlayerId","types":["PlayerID"]},{"name":"flag","types":["int"]},{"name":"state","types":["bool"]}]},{"kind":"function","name":"SpendGold","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"cost","types":["int"]},{"name":"reason","types":["EDOTA_ModifyGold_Reason"]}]},{"kind":"function","name":"UpdateTeamSlot","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"teamNumber","types":["DOTATeam_t"]},{"name":"desiredSlot","types":["int"]}]},{"kind":"function","name":"WhoSelectedHero","available":"server","returns":["PlayerID"],"args":[{"name":"heroFilename","types":["string"]},{"name":"ignoreUnrevealedPick","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_ShopTrigger","extend":"CBaseTrigger","members":[{"kind":"function","name":"GetShopType","available":"server","description":"Get the DOTA_SHOP_TYPE.","returns":["DOTA_SHOP_TYPE"],"args":[]},{"kind":"function","name":"SetShopType","available":"server","description":"Set the DOTA_SHOP_TYPE.","returns":["nil"],"args":[{"name":"shopType","types":["DOTA_SHOP_TYPE"]}]}]},{"kind":"class","name":"CDOTA_SimpleObstruction","extend":"CBaseEntity","members":[{"kind":"function","name":"IsEnabled","available":"server","description":"Returns whether the obstruction is currently active.","returns":["bool"],"args":[]},{"kind":"function","name":"SetEnabled","available":"server","description":"Enable or disable the obstruction.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]},{"name":"force","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_Unit_Courier","extend":"CDOTA_BaseNPC","members":[{"kind":"function","name":"UpgradeCourier","available":"server","description":"Upgrade the courier ( int param ) times.","returns":["nil"],"args":[{"name":"level","types":["int"]}]}]},{"kind":"class","name":"CDOTA_Unit_CustomGameAnnouncer","extend":"CDOTA_BaseNPC","members":[{"kind":"function","name":"SetServerAuthoritative","available":"server","description":"Determines whether response criteria is matched on server or client.","returns":["nil"],"args":[{"name":"isServerAuthoritative","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_Unit_CustomGameAnnouncerAghanim","extend":"CDOTA_BaseNPC","members":[{"kind":"function","name":"SetAnimation","available":"server","description":"Set the animation sequence for this entity.","returns":["nil"],"args":[{"name":"animation","types":["string"]}]},{"kind":"function","name":"SetServerAuthoritative","available":"server","description":"Determines whether response criteria is matched on server or client.","returns":["nil"],"args":[{"name":"isServerAuthoritative","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_Unit_Diretide_Portal","extend":"CDOTA_BaseNPC_Building","members":[{"kind":"function","name":"GetPartnerPortal","available":"server","returns":["handle"],"args":[]},{"kind":"function","name":"ResetPortal","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"SetInvasionRuneType","available":"server","returns":["nil"],"args":[{"name":"runeType","types":["int"]}]},{"kind":"function","name":"SetPartnerPortal","available":"server","returns":["nil"],"args":[{"name":"portal","types":["handle"]}]},{"kind":"function","name":"SetPortalActive","available":"server","returns":["nil"],"args":[{"name":"active","types":["bool"]}]}]},{"kind":"class","name":"CDOTA_Unit_Nian","extend":"CDOTA_BaseNPC_Creature","members":[{"kind":"function","name":"GetHorn","available":"server","description":"Is the Nian horn?","returns":["handle"],"args":[]},{"kind":"function","name":"GetTail","available":"server","description":"Is the Nian\'s tail broken?","returns":["handle"],"args":[]},{"kind":"function","name":"IsHornAlive","available":"server","description":"Is the Nian\'s horn broken?","returns":["bool"],"args":[]},{"kind":"function","name":"IsTailAlive","available":"server","description":"Is the Nian\'s tail broken?","returns":["bool"],"args":[]}]},{"kind":"class","name":"CDOTABaseAbility","clientName":"C_DOTABaseAbility","extend":"CBaseEntity","members":[{"kind":"function","name":"CanAbilityBeUpgraded","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"CastAbility","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"ContinueCasting","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"CreateVisibilityNode","available":"server","returns":["nil"],"args":[{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DecrementModifierRefCount","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"EndChannel","available":"server","returns":["nil"],"args":[{"name":"interrupted","types":["bool"]}]},{"kind":"function","name":"EndCooldown","available":"server","description":"Clear the cooldown remaining on this ability.","returns":["nil"],"args":[]},{"kind":"function","name":"GetAbilityDamage","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetAbilityDamageType","available":"server","returns":["DAMAGE_TYPES"],"args":[]},{"kind":"function","name":"GetAbilityIndex","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetAbilityKeyValues","available":"server","description":"Gets the key values definition for this ability.","returns":["table"],"args":[]},{"kind":"function","name":"GetAbilityName","available":"both","description":"Returns the name of this ability.","returns":["string"],"args":[]},{"kind":"function","name":"GetAbilityTargetFlags","available":"server","returns":["DOTA_UNIT_TARGET_FLAGS"],"args":[]},{"kind":"function","name":"GetAbilityTargetTeam","available":"server","returns":["DOTA_UNIT_TARGET_TEAM"],"args":[]},{"kind":"function","name":"GetAbilityTargetType","available":"server","returns":["DOTA_UNIT_TARGET_TYPE"],"args":[]},{"kind":"function","name":"GetAbilityType","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetAnimationIgnoresModelScale","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"GetAOERadius","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetAssociatedPrimaryAbilities","available":"server","returns":["string"],"args":[]},{"kind":"function","name":"GetAssociatedSecondaryAbilities","available":"server","returns":["string"],"args":[]},{"kind":"function","name":"GetAutoCastState","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"GetBackswingTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetBehavior","available":"both","returns":["DOTA_ABILITY_BEHAVIOR"],"args":[]},{"kind":"function","name":"GetBehaviorInt","available":"both","description":"Get ability behavior flags as an int for compatability.","returns":["DOTA_ABILITY_BEHAVIOR"],"args":[]},{"kind":"function","name":"GetCaster","available":"both","description":"Get the owner of this ability.","returns":["CDOTA_BaseNPC"],"args":[]},{"kind":"function","name":"GetCastPoint","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetCastPointModifier","available":"both","returns":["float"],"args":[]},{"kind":"function","name":"GetCastRange","available":"server","description":"Gets the cast range of the ability.","returns":["int"],"args":[{"name":"location","types":["Vector","nil"]},{"name":"target","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"GetChannelledManaCostPerSecond","available":"server","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetChannelStartTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetChannelTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetCloneSource","available":"server","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetConceptRecipientType","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetCooldown","available":"server","description":"Get the cooldown duration for this ability at a given level, not the amount of cooldown actually left.","returns":["float"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetCooldownTime","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetCooldownTimeRemaining","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetCurrentAbilityCharges","available":"both","description":"The number of charges remaining on this ability.","returns":["int"],"args":[]},{"kind":"function","name":"GetCursorPosition","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"GetCursorTarget","available":"server","returns":["CDOTA_BaseNPC","nil"],"args":[]},{"kind":"function","name":"GetCursorTargetingNothing","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"GetDuration","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetEffectiveCastRange","available":"server","description":"Gets the cast range of the ability, taking modifiers into account.","returns":["int"],"args":[{"name":"location","types":["Vector"]},{"name":"target","types":["handle"]}]},{"kind":"function","name":"GetEffectiveCooldown","available":"server","returns":["float"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetGoldCost","available":"server","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetGoldCostForUpgrade","available":"server","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetHeroLevelRequiredToUpgrade","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetInitialAbilityCharges","available":"server","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetIntrinsicModifierName","available":"server","returns":["string"],"args":[]},{"kind":"function","name":"GetLevel","available":"both","description":"Get the current level of the ability.","returns":["int"],"args":[]},{"kind":"function","name":"GetLevelSpecialValueFor","available":"both","description":"Gets a value from this ability\'s special value block for passed level.","returns":["float"],"args":[{"name":"name","types":["string"]},{"name":"level","types":["int"]}]},{"kind":"function","name":"GetLevelSpecialValueNoOverride","available":"both","description":"Gets a value from this ability\'s special value block for passed level, ignoring MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL.","returns":["float"],"args":[{"name":"name","types":["string"]},{"name":"level","types":["int"]}]},{"kind":"function","name":"GetManaCost","available":"server","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetMaxAbilityCharges","available":"server","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"GetMaxLevel","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetModifierValue","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetModifierValueBonus","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetPlaybackRateOverride","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetSharedCooldownName","available":"server","returns":["string"],"args":[]},{"kind":"function","name":"GetSpecialValueFor","available":"both","description":"Gets a value from this ability\'s special value block for its current level.","returns":["float"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"GetStolenActivityModifier","available":"server","returns":["string"],"args":[]},{"kind":"function","name":"GetToggleState","available":"both","description":"Whether or not this ability is toggled.","returns":["bool"],"args":[]},{"kind":"function","name":"GetUpgradeRecommended","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"HeroXPChange","available":"server","returns":["bool"],"args":[{"name":"xp","types":["float"]}]},{"kind":"function","name":"IncrementModifierRefCount","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"IsActivated","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsAttributeBonus","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsChanneling","available":"server","description":"Returns whether the ability is currently channeling.","returns":["bool"],"args":[]},{"kind":"function","name":"IsCooldownReady","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsCosmetic","available":"server","returns":["bool"],"args":[{"name":"entity","types":["CBaseEntity"]}]},{"kind":"function","name":"IsFullyCastable","available":"server","description":"Returns whether the ability can be cast.","returns":["bool"],"args":[]},{"kind":"function","name":"IsHidden","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsHiddenAsSecondaryAbility","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsHiddenWhenStolen","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsInAbilityPhase","available":"server","description":"Returns whether the ability is currently casting.","returns":["bool"],"args":[]},{"kind":"function","name":"IsItem","available":"both","description":"Whether or not this ability is an item.","returns":["bool"],"args":[]},{"kind":"function","name":"IsOwnersGoldEnough","available":"server","returns":["bool"],"args":[{"name":"issuerPlayerId","types":["PlayerID"]}]},{"kind":"function","name":"IsOwnersGoldEnoughForUpgrade","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsOwnersManaEnough","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsPassive","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsRefreshable","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsSharedWithTeammates","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsStealable","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsStolen","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsToggle","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"IsTrained","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"MarkAbilityButtonDirty","available":"server","description":"Mark the ability button for this ability as needing a refresh.","returns":["nil"],"args":[]},{"kind":"function","name":"NumModifiersUsingAbility","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"OnAbilityPhaseInterrupted","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnAbilityPhaseStart","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"OnAbilityPinged","available":"server","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"ctrlHeld","types":["bool"]}]},{"kind":"function","name":"OnChannelFinish","available":"server","returns":["nil"],"args":[{"name":"interrupted","types":["bool"]}]},{"kind":"function","name":"OnChannelThink","available":"server","returns":["nil"],"args":[{"name":"interval","types":["float"]}]},{"kind":"function","name":"OnHeroCalculateStatBonus","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnHeroLevelUp","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnOwnerDied","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnOwnerSpawned","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnSpellStart","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnToggle","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"OnUpgrade","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"PayGoldCost","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"PayGoldCostForUpgrade","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"PayManaCost","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"PlaysDefaultAnimWhenStolen","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"ProcsMagicStick","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"RefCountsModifiers","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"RefreshCharges","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"RefreshIntrinsicModifier","available":"server","description":"Returns true if ability has intrinsic modifier.","returns":["bool"],"args":[]},{"kind":"function","name":"RefundManaCost","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"RequiresFacing","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"ResetToggleOnRespawn","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"SetAbilityIndex","available":"server","returns":["nil"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"SetActivated","available":"server","returns":["nil"],"args":[{"name":"activated","types":["bool"]}]},{"kind":"function","name":"SetChanneling","available":"server","returns":["nil"],"args":[{"name":"channeling","types":["bool"]}]},{"kind":"function","name":"SetCurrentAbilityCharges","available":"server","returns":["nil"],"args":[{"name":"charges","types":["int"]}]},{"kind":"function","name":"SetFrozenCooldown","available":"server","returns":["nil"],"args":[{"name":"frozenCooldown","types":["bool"]}]},{"kind":"function","name":"SetHidden","available":"server","returns":["nil"],"args":[{"name":"hidden","types":["bool"]}]},{"kind":"function","name":"SetInAbilityPhase","available":"server","returns":["nil"],"args":[{"name":"inAbilityPhase","types":["bool"]}]},{"kind":"function","name":"SetLevel","available":"server","description":"Sets the level of this ability.","returns":["nil"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"SetOverrideCastPoint","available":"server","returns":["nil"],"args":[{"name":"castPoint","types":["float"]}]},{"kind":"function","name":"SetRefCountsModifiers","available":"server","returns":["nil"],"args":[{"name":"refCounts","types":["bool"]}]},{"kind":"function","name":"SetStealable","available":"server","returns":["nil"],"args":[{"name":"stealable","types":["bool"]}]},{"kind":"function","name":"SetStolen","available":"server","returns":["nil"],"args":[{"name":"stolen","types":["bool"]}]},{"kind":"function","name":"SetUpgradeRecommended","available":"server","returns":["nil"],"args":[{"name":"upgradeRecommended","types":["bool"]}]},{"kind":"function","name":"ShouldUseResources","available":"server","returns":["bool"],"args":[]},{"kind":"function","name":"SpeakAbilityConcept","available":"server","returns":["nil"],"args":[{"name":"concept","types":["int"]}]},{"kind":"function","name":"SpeakTrigger","available":"server","returns":["unknown"],"args":[]},{"kind":"function","name":"StartCooldown","available":"server","returns":["nil"],"args":[{"name":"cooldown","types":["float"]}]},{"kind":"function","name":"ToggleAbility","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"ToggleAutoCast","available":"server","returns":["nil"],"args":[]},{"kind":"function","name":"UpgradeAbility","available":"server","returns":["nil"],"args":[{"name":"supressSpeech","types":["bool"]}]},{"kind":"function","name":"UseResources","available":"server","returns":["nil"],"args":[{"name":"mana","types":["bool"]},{"name":"gold","types":["bool"]},{"name":"cooldown","types":["bool"]}]}]},{"kind":"class","name":"CDOTABaseGameMode","extend":"CBaseEntity","members":[{"kind":"function","name":"AddAbilityUpgradeToWhitelist","available":"server","description":"Const char* pszAbilityName.","returns":["nil"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"AddItemToCustomShop","available":"server","description":"Add an item to purchase at a custom shop.","returns":["nil"],"args":[{"name":"itemName","types":["string"]},{"name":"shopName","types":["string"]},{"name":"category","types":["string"]}]},{"kind":"function","name":"AddRealTimeCombatAnalyzerQuery","available":"server","description":"Begin tracking a sequence of events using the real time combat analyzer.","returns":["CombatAnalyzerQueryID"],"args":[{"name":"queryTable","types":["handle"]},{"name":"player","types":["CDOTAPlayerController"]},{"name":"queryName","types":["string"]}]},{"kind":"function","name":"AllocateFowBlockerRegion","available":"server","description":"Allocates an entity which can be used by custom games to control FoW occlusion volumes.","returns":["CFoWBlockerRegion"],"args":[{"name":"minX","types":["float"]},{"name":"minY","types":["float"]},{"name":"maxX","types":["float"]},{"name":"maxY","types":["float"]},{"name":"gridSize","types":["float"]}]},{"kind":"function","name":"AreWeatherEffectsDisabled","available":"server","description":"Get if weather effects are disabled on the client.","returns":["bool"],"args":[]},{"kind":"function","name":"ClearBountyRunePickupFilter","available":"server","description":"Clear the script filter that controls bounty rune pickup behavior.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearDamageFilter","available":"server","description":"Clear the script filter that controls how a unit takes damage.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearExecuteOrderFilter","available":"server","description":"Clear the script filter that controls when a unit picks up an item.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearHealingFilter","available":"server","description":"Clear the script filter that controls how a unit heals.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearItemAddedToInventoryFilter","available":"server","description":"Clear the script filter that controls the item added to inventory filter.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearModifierGainedFilter","available":"server","description":"Clear the script filter that controls the modifier filter.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearModifyExperienceFilter","available":"server","description":"Clear the script filter that controls how hero experience is modified.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearModifyGoldFilter","available":"server","description":"Clear the script filter that controls how hero gold is modified.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearRuneSpawnFilter","available":"server","description":"Clear the script filter that controls what rune spawns.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearTrackingProjectileFilter","available":"server","description":"Clear the script filter that controls when tracking projectiles are launched.","returns":["nil"],"args":[]},{"kind":"function","name":"DisableClumpingBehaviorByDefault","available":"server","description":"Disable npc_dota_creature clumping behavior by default.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"DisableHudFlip","available":"server","description":"Use to disable hud flip for this mod.","returns":["nil"],"args":[{"name":"disable","types":["bool"]}]},{"kind":"function","name":"EnableAbilityUpgradeWhitelist","available":"server","description":"Bool bEnabled.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"GetAlwaysShowPlayerInventory","available":"server","description":"Show the player hero\'s inventory in the HUD, regardless of what unit is selected.","returns":["bool"],"args":[]},{"kind":"function","name":"GetAlwaysShowPlayerNames","available":"server","description":"Get whether player names are always shown, regardless of client setting.","returns":["bool"],"args":[]},{"kind":"function","name":"GetAnnouncerDisabled","available":"server","description":"Are in-game announcers disabled?","returns":["bool"],"args":[]},{"kind":"function","name":"GetCameraDistanceOverride","available":"server","description":"Set a different camera distance; dota default is 1134.","returns":["float"],"args":[]},{"kind":"function","name":"GetCustomAttributeDerivedStatValue","available":"server","description":"Get current derived stat value constant.","returns":["float"],"args":[{"name":"derivedStatType","types":["AttributeDerivedStats"]}]},{"kind":"function","name":"GetCustomBackpackCooldownPercent","available":"server","description":"Get the current rate cooldown ticks down for items in the backpack.","returns":["float"],"args":[]},{"kind":"function","name":"GetCustomBackpackSwapCooldown","available":"server","description":"Get the current custom backpack swap cooldown.","returns":["float"],"args":[]},{"kind":"function","name":"GetCustomBuybackCooldownEnabled","available":"server","description":"Turns on capability to define custom buyback cooldowns.","returns":["bool"],"args":[]},{"kind":"function","name":"GetCustomBuybackCostEnabled","available":"server","description":"Turns on capability to define custom buyback costs.","returns":["bool"],"args":[]},{"kind":"function","name":"GetCustomDireScore","available":"server","description":"Get the topbar score display value for dire.","returns":["int"],"args":[]},{"kind":"function","name":"GetCustomGlyphCooldown","available":"server","description":"Get the current custom glyph cooldown.","returns":["float"],"args":[]},{"kind":"function","name":"GetCustomHeroMaxLevel","available":"server","description":"Allows definition of the max level heroes can achieve (default is 25).","returns":["int"],"args":[]},{"kind":"function","name":"GetCustomRadiantScore","available":"server","description":"Get the topbar score display value for radiant.","returns":["int"],"args":[]},{"kind":"function","name":"GetCustomScanCooldown","available":"server","description":"Get the current custom scan cooldown.","returns":["float"],"args":[]},{"kind":"function","name":"GetDaynightCycleAdvanceRate","available":"server","description":"Get the rate at which the day/night cycle advances (1.0 = default).","returns":["float"],"args":[]},{"kind":"function","name":"GetEventGameSeed","available":"server","description":"Get the Game Seed passed from the GC.","returns":["int"],"args":[]},{"kind":"function","name":"GetEventWindowStartTime","available":"server","description":"Get the Event Window Start Time passed from the GC.","returns":["uint"],"args":[]},{"kind":"function","name":"GetFixedRespawnTime","available":"server","description":"Gets the fixed respawn time.","returns":["float"],"args":[]},{"kind":"function","name":"GetFogOfWarDisabled","available":"server","description":"Turn the fog of war on or off.","returns":["bool"],"args":[]},{"kind":"function","name":"GetGoldSoundDisabled","available":"server","description":"Turn the sound when gold is acquired off/on.","returns":["bool"],"args":[]},{"kind":"function","name":"GetHUDVisible","available":"server","description":"Returns the HUD element visibility.","returns":["bool"],"args":[{"name":"element","types":["int"]}]},{"kind":"function","name":"GetMaximumAttackSpeed","available":"server","description":"Get the maximum attack speed for units.","returns":["int"],"args":[]},{"kind":"function","name":"GetMinimumAttackSpeed","available":"server","description":"Get the minimum attack speed for units.","returns":["int"],"args":[]},{"kind":"function","name":"GetRecommendedItemsDisabled","available":"server","description":"Turn the panel for showing recommended items at the shop off/on.","returns":["bool"],"args":[]},{"kind":"function","name":"GetRespawnTimeScale","available":"server","description":"Returns the scale applied to non-fixed respawn times.","returns":["float"],"args":[]},{"kind":"function","name":"GetStashPurchasingDisabled","available":"server","description":"Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.","returns":["bool"],"args":[]},{"kind":"function","name":"GetStickyItemDisabled","available":"server","description":"Hide the sticky item in the quickbuy.","returns":["bool"],"args":[]},{"kind":"function","name":"GetTopBarTeamValuesOverride","available":"server","description":"Override the values of the team values on the top game bar.","returns":["bool"],"args":[]},{"kind":"function","name":"GetTopBarTeamValuesVisible","available":"server","description":"Turning on/off the team values on the top game bar.","returns":["bool"],"args":[]},{"kind":"function","name":"GetTowerBackdoorProtectionEnabled","available":"server","description":"Gets whether tower backdoor protection is enabled or not.","returns":["bool"],"args":[]},{"kind":"function","name":"GetUseCustomHeroLevels","available":"server","description":"Are custom-defined XP values for hero level ups in use?","returns":["bool"],"args":[]},{"kind":"function","name":"GetWaterRuneLastSpawnTime","available":"server","description":"Gets the time from game start during which water runes spawn.","returns":["int"],"args":[]},{"kind":"function","name":"IsAbilityUpgradeWhitelisted","available":"server","description":"Const char* pszAbilityName.","returns":["bool"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"IsBuybackEnabled","available":"server","description":"Enables or disables buyback completely.","returns":["bool"],"args":[]},{"kind":"function","name":"IsDaynightCycleDisabled","available":"server","description":"Is the day/night cycle disabled?","returns":["bool"],"args":[]},{"kind":"function","name":"ListenForQueryFailed","available":"server","description":"Set function and context for real time combat analyzer query failed.","returns":["nil"],"args":[{"name":"function","types":[{"kind":"function","returns":["nil"],"args":[{"name":"result","types":["CombatAnalyzerQueryResult"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"ListenForQueryProgressChanged","available":"server","description":"Set function and context for real time combat analyzer query progress changed.","returns":["nil"],"args":[{"name":"function","types":[{"kind":"function","returns":["nil"],"args":[{"name":"result","types":["CombatAnalyzerQueryResult"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"ListenForQuerySucceeded","available":"server","description":"Set function and context for real time combat analyzer query succeeded.","returns":["nil"],"args":[{"name":"function","types":[{"kind":"function","returns":["nil"],"args":[{"name":"result","types":["CombatAnalyzerQueryResult"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"RemoveAbilityUpgradeFromWhitelist","available":"server","description":"Const char* pszAbilityName.","returns":["nil"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"RemoveItemFromCustomShop","available":"server","description":"Remove an item to purchase at a custom shop.","returns":["nil"],"args":[{"name":"itemName","types":["string"]},{"name":"shopName","types":["string"]}]},{"kind":"function","name":"RemoveRealTimeCombatAnalyzerQuery","available":"server","description":"Stop tracking a combat analyzer query.","returns":["nil"],"args":[{"name":"queryId","types":["CombatAnalyzerQueryID"]}]},{"kind":"function","name":"SetAbilityTuningValueFilter","available":"server","description":"Set a filter function to control the tuning values that abilities use. (Modify the table and Return true to use new values, return false to use the old values).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["AbilityTuningValueFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetAllowNeutralItemDrops","available":"server","description":"If set to true, neutral items will be dropped on killing neutral monsters.  Otherwise nothing will be dropped.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetAlwaysShowPlayerInventory","available":"server","description":"Show the player hero\'s inventory in the HUD, regardless of what unit is selected.","returns":["nil"],"args":[{"name":"alwaysShow","types":["bool"]}]},{"kind":"function","name":"SetAlwaysShowPlayerNames","available":"server","description":"Set whether player names are always shown, regardless of client setting.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetAnnouncerDisabled","available":"server","description":"Mutes the in-game announcer.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetBotsAlwaysPushWithHuman","available":"server","description":"Set if the bots should try their best to push with a human player.","returns":["nil"],"args":[{"name":"alwaysPush","types":["bool"]}]},{"kind":"function","name":"SetBotsInLateGame","available":"server","description":"Set if bots should enable their late game behavior.","returns":["nil"],"args":[{"name":"lateGame","types":["bool"]}]},{"kind":"function","name":"SetBotsMaxPushTier","available":"server","description":"Set the max tier of tower that bots want to push. (-1 to disable).","returns":["nil"],"args":[{"name":"maxTier","types":["int"]}]},{"kind":"function","name":"SetBotThinkingEnabled","available":"server","description":"Enables/Disables bots in custom games. Note: this will only work with default heroes in the dota map.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetBountyRunePickupFilter","available":"server","description":"Set a filter function to control the behavior when a bounty rune is picked up. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["BountyRunePickupFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetBountyRuneSpawnInterval","available":"server","description":"Set bounty rune spawn rate.","returns":["nil"],"args":[{"name":"interval","types":["float"]}]},{"kind":"function","name":"SetBuybackEnabled","available":"server","description":"Enables or disables buyback completely.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetCameraDistanceOverride","available":"server","description":"Set a different camera distance; dota default is 1134.","returns":["nil"],"args":[{"name":"cameraDistanceOverride","types":["float"]}]},{"kind":"function","name":"SetCameraSmoothCountOverride","available":"server","description":"Set a different camera smooth count; dota default is 8.","returns":["nil"],"args":[{"name":"smoothCount","types":["int"]}]},{"kind":"function","name":"SetCameraZRange","available":"server","description":"Sets the camera Z range.","returns":["nil"],"args":[{"name":"minZ","types":["float"]},{"name":"maxZ","types":["float"]}]},{"kind":"function","name":"SetCanSellAnywhere","available":"server","description":"Bool bAllow.","returns":["nil"],"args":[{"name":"allow","types":["bool"]}]},{"kind":"function","name":"SetCustomAttributeDerivedStatValue","available":"server","description":"Modify derived stat value constants.","returns":["nil"],"args":[{"name":"statType","types":["AttributeDerivedStats"]},{"name":"newValue","types":["float"]}]},{"kind":"function","name":"SetCustomBackpackCooldownPercent","available":"server","description":"Set the rate cooldown ticks down for items in the backpack.","returns":["nil"],"args":[{"name":"percent","types":["float"]}]},{"kind":"function","name":"SetCustomBackpackSwapCooldown","available":"server","description":"Set a custom cooldown for swapping items into the backpack.","returns":["nil"],"args":[{"name":"cooldown","types":["float"]}]},{"kind":"function","name":"SetCustomBuybackCooldownEnabled","available":"server","description":"Turns on capability to define custom buyback cooldowns.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetCustomBuybackCostEnabled","available":"server","description":"Turns on capability to define custom buyback costs.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetCustomDireScore","available":"server","description":"Sets the topbar score display value for dire.","returns":["nil"],"args":[{"name":"score","types":["int"]}]},{"kind":"function","name":"SetCustomGameForceHero","available":"server","description":"Force all players to use the specified hero and disable the normal hero selection process. Must be used before hero selection.","returns":["nil"],"args":[{"name":"heroName","types":["string"]}]},{"kind":"function","name":"SetCustomGlyphCooldown","available":"server","description":"Set a custom cooldown for team Glyph ability.","returns":["nil"],"args":[{"name":"cooldown","types":["float"]}]},{"kind":"function","name":"SetCustomHeroMaxLevel","available":"server","description":"Allows definition of the max level heroes can achieve (default is 25).","returns":["nil"],"args":[{"name":"maxLevel","types":["int"]}]},{"kind":"function","name":"SetCustomRadiantScore","available":"server","description":"Sets the topbar score display value for radiant.","returns":["nil"],"args":[{"name":"score","types":["int"]}]},{"kind":"function","name":"SetCustomScanCooldown","available":"server","description":"Set a custom cooldown for team Scan ability.","returns":["nil"],"args":[{"name":"cooldown","types":["float"]}]},{"kind":"function","name":"SetCustomTerrainWeatherEffect","available":"server","description":"Set the effect used as a custom weather effect, when units are on non-default terrain, in this mode.","returns":["nil"],"args":[{"name":"effectName","types":["string"]}]},{"kind":"function","name":"SetCustomXPRequiredToReachNextLevel","available":"server","description":"Allows definition of a table of hero XP values.\\nRequires `SetUseCustomHeroLevels` to be enabled.","returns":["nil"],"args":[{"name":"table","types":[{"kind":"table","key":["int"],"value":["int"]}]}]},{"kind":"function","name":"SetDamageFilter","available":"server","description":"Set a filter function to control the behavior when a unit takes damage. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["DamageFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetDaynightCycleAdvanceRate","available":"server","description":"Sets the rate at which the day/night cycle advances (1.0 = default).","returns":["nil"],"args":[{"name":"rate","types":["float"]}]},{"kind":"function","name":"SetDaynightCycleDisabled","available":"server","description":"Enable or disable the day/night cycle.","returns":["nil"],"args":[{"name":"disable","types":["bool"]}]},{"kind":"function","name":"SetDeathOverlayDisabled","available":"server","description":"Specify whether the full screen death overlay effect plays when the selected hero dies.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetDefaultStickyItem","available":"server","description":"Sets the default sticky item in the quickbuy.","returns":["nil"],"args":[{"name":"item","types":["string"]}]},{"kind":"function","name":"SetDraftingBanningTimeOverride","available":"server","description":"Set drafting hero banning time.","returns":["nil"],"args":[{"name":"value","types":["float"]}]},{"kind":"function","name":"SetDraftingHeroPickSelectTimeOverride","available":"server","description":"Set drafting hero pick time.","returns":["nil"],"args":[{"name":"value","types":["float"]}]},{"kind":"function","name":"SetExecuteOrderFilter","available":"server","description":"Set a filter function to control the behavior when a unit picks up an item. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["ExecuteOrderFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetFixedRespawnTime","available":"server","description":"Set a fixed delay for all players to respawn after.","returns":["nil"],"args":[{"name":"fixedRespawnTime","types":["float"]}]},{"kind":"function","name":"SetFogOfWarDisabled","available":"server","description":"Turn the fog of war on or off.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetForcedHUDSkin","available":"server","description":"Specify a HUD skin that is forced on for this game mode.","returns":["nil"],"args":[{"name":"value","types":["string"]}]},{"kind":"function","name":"SetForceRightClickAttackDisabled","available":"server","description":"Prevent users from using the right click deny setting.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetFountainConstantManaRegen","available":"server","description":"Set the constant rate that the fountain will regen mana. (-1 for default).","returns":["nil"],"args":[{"name":"constantManaRegen","types":["float"]}]},{"kind":"function","name":"SetFountainPercentageHealthRegen","available":"server","description":"Set the percentage rate that the fountain will regen health. (-1 for default).","returns":["nil"],"args":[{"name":"percentageHealthRegen","types":["float"]}]},{"kind":"function","name":"SetFountainPercentageManaRegen","available":"server","description":"Set the percentage rate that the fountain will regen mana. (-1 for default).","returns":["nil"],"args":[{"name":"percentageManaRegen","types":["float"]}]},{"kind":"function","name":"SetFreeCourierModeEnabled","available":"server","description":"If set to true, enable 7.23 free courier mode.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetFriendlyBuildingMoveToEnabled","available":"server","description":"Allows clicks on friendly buildings to be handled normally.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetGiveFreeTPOnDeath","available":"server","description":"Bool bGive.","returns":["nil"],"args":[{"name":"give","types":["bool"]}]},{"kind":"function","name":"SetGoldSoundDisabled","available":"server","description":"Turn the sound when gold is acquired off/on.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetHealingFilter","available":"server","description":"Set a filter function to control the behavior when a unit heals. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["HealingFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetHudCombatEventsDisabled","available":"server","description":"Specify whether the default combat events will show in the HUD.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetHUDVisible","available":"server","description":"Set the HUD element visibility.","returns":["nil"],"args":[{"name":"hudElement","types":["DOTAHUDVisibility_t"]},{"name":"visible","types":["bool"]}]},{"kind":"function","name":"SetInnateMeleeDamageBlockAmount","available":"server","description":"Set the amount blocked innately by melee heroes.","returns":["nil"],"args":[{"name":"amount","types":["int"]}]},{"kind":"function","name":"SetInnateMeleeDamageBlockPercent","available":"server","description":"Set the percent chance a melee hero will innately block damage.","returns":["nil"],"args":[{"name":"percent","types":["int"]}]},{"kind":"function","name":"SetInnateMeleeDamageBlockPerLevelAmount","available":"server","description":"Set the amount innately blocked by melee heroes gained per level.","returns":["nil"],"args":[{"name":"perLevelAmount","types":["int"]}]},{"kind":"function","name":"SetItemAddedToInventoryFilter","available":"server","description":"Set a filter function to control what happens to items that are added to an inventory, return false to cancel the event.","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["ItemAddedToInventoryFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetKillableTombstones","available":"server","description":"Set whether tombstones can be channeled to be removed by enemy heroes.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetKillingSpreeAnnouncerDisabled","available":"server","description":"Mutes the in-game killing spree announcer.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetLoseGoldOnDeath","available":"server","description":"Use to disable gold loss on death.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetMaximumAttackSpeed","available":"server","description":"Set the maximum attack speed for units.","returns":["nil"],"args":[{"name":"maxSpeed","types":["int"]}]},{"kind":"function","name":"SetMinimumAttackSpeed","available":"server","description":"Set the minimum attack speed for units.","returns":["nil"],"args":[{"name":"minSpeed","types":["int"]}]},{"kind":"function","name":"SetModifierGainedFilter","available":"server","description":"Set a filter function to control modifiers that are gained, return false to destroy modifier.","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["ModifierGainedFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetModifyExperienceFilter","available":"server","description":"Set a filter function to control the behavior when a hero\'s experience is modified. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["ModifyExperienceFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetModifyGoldFilter","available":"server","description":"Set a filter function to control the behavior when a hero\'s gold is modified. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["ModifyGoldFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetNeutralItemHideUndiscoveredEnabled","available":"server","description":"When enabled, undiscovered items in the neutral item stash are hidden.","returns":["nil"],"args":[{"name":"enable","types":["bool"]}]},{"kind":"function","name":"SetNeutralStashEnabled","available":"server","description":"Allow items to be sent to the neutral stash.","returns":["nil"],"args":[{"name":"enable","types":["bool"]}]},{"kind":"function","name":"SetNeutralStashTeamViewOnlyEnabled","available":"server","description":"When enabled, the all neutral items tab cannot be viewed.","returns":["nil"],"args":[{"name":"enable","types":["bool"]}]},{"kind":"function","name":"SetOverrideSelectionEntity","available":"server","description":"Set an override for the default selection entity, instead of each player\'s hero.","returns":["nil"],"args":[{"name":"overrideEntity","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"SetPauseEnabled","available":"server","description":"Set pausing enabled/disabled.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetPlayerHeroAvailabilityFiltered","available":"server","description":"Bool bFilter.","returns":["nil"],"args":[{"name":"filter","types":["bool"]}]},{"kind":"function","name":"SetPowerRuneSpawnInterval","available":"server","description":"Set power rune spawn rate.","returns":["nil"],"args":[{"name":"interval","types":["float"]}]},{"kind":"function","name":"SetRandomHeroBonusItemGrantDisabled","available":"server","description":"Disables bonus items for randoming a hero.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetRecommendedItemsDisabled","available":"server","description":"Turn the panel for showing recommended items at the shop off/on.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetRemoveIllusionsOnDeath","available":"server","description":"Make it so illusions are immediately removed upon death, rather than sticking around for a few seconds.","returns":["nil"],"args":[{"name":"remove","types":["bool"]}]},{"kind":"function","name":"SetRespawnTimeScale","available":"server","description":"Sets the scale applied to non-fixed respawn times. 1 = default DOTA respawn calculations.","returns":["nil"],"args":[{"name":"value","types":["float"]}]},{"kind":"function","name":"SetRuneEnabled","available":"server","description":"Set if a given type of rune is enabled.","returns":["nil"],"args":[{"name":"rune","types":["DOTA_RUNES"]},{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetRuneSpawnFilter","available":"server","description":"Set a filter function to control what rune spawns. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["RuneSpawnFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetSelectionGoldPenaltyEnabled","available":"server","description":"Enable/disable gold penalty for late picking.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetSendToStashEnabled","available":"server","description":"Allow items to be sent to the stash.","returns":["nil"],"args":[{"name":"enable","types":["bool"]}]},{"kind":"function","name":"SetStashPurchasingDisabled","available":"server","description":"Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetStickyItemDisabled","available":"server","description":"Hide the sticky item in the quickbuy.","returns":["nil"],"args":[{"name":"disabled","types":["bool"]}]},{"kind":"function","name":"SetTopBarTeamValue","available":"server","description":"Set the team values on the top game bar.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"SetTopBarTeamValuesOverride","available":"server","description":"Override the values of the team values on the top game bar.","returns":["nil"],"args":[{"name":"override","types":["bool"]}]},{"kind":"function","name":"SetTopBarTeamValuesVisible","available":"server","description":"Turning on/off the team values on the top game bar.","returns":["nil"],"args":[{"name":"visible","types":["bool"]}]},{"kind":"function","name":"SetTowerBackdoorProtectionEnabled","available":"server","description":"Enables/Disables tower backdoor protection.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetTPScrollSlotItemOverride","available":"server","description":"Sets the item which goes in the TP scroll slot.","returns":["nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"SetTrackingProjectileFilter","available":"server","description":"Set a filter function to control when tracking projectiles are launched. (Modify the table and Return true to use new values, return false to cancel the event).","returns":["nil"],"args":[{"name":"filterFunc","types":[{"kind":"function","returns":["bool"],"args":[{"name":"event","types":["TrackingProjectileFilterEvent"]}]}]},{"name":"context","types":["table"]}]},{"kind":"function","name":"SetUnseenFogOfWarEnabled","available":"server","description":"Enable or disable unseen fog of war. When enabled parts of the map the player has never seen will be completely hidden by fog of war.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetUseCustomHeroLevels","available":"server","description":"Turn on custom-defined XP values for hero level ups.  The table should be defined before switching this on.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetUseDefaultDOTARuneSpawnLogic","available":"server","description":"If set to true, use current rune spawn rules.  Either setting respects custom spawn intervals.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetUseTurboCouriers","available":"server","description":"Enables or disables turbo couriers.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetWaterRuneLastSpawnTime","available":"server","description":"Sets the time from game start during which water runes spawn.","returns":["nil"],"args":[{"name":"value","types":["int"]}]},{"kind":"function","name":"SetWeatherEffectsDisabled","available":"server","description":"Set if weather effects are disabled.","returns":["nil"],"args":[{"name":"disable","types":["bool"]}]},{"kind":"function","name":"ShouldGiveFreeTPOnDeath","available":"server","returns":["bool"],"args":[]}]},{"kind":"class","name":"CDOTAGameManager","clientName":"CDOTAGameManager","instance":"DOTAGameManager","members":[{"kind":"function","name":"GetHeroDataByName_Script","available":"both","description":"Get the hero unit.","returns":["table"],"args":[{"name":"heroName","types":["string"]}]},{"kind":"function","name":"GetHeroIDByName","available":"both","description":"Get the hero ID given the hero name.","returns":["int"],"args":[{"name":"heroName","types":["string"]}]},{"kind":"function","name":"GetHeroNameByID","available":"both","description":"Get the hero name given a hero ID.","returns":["string"],"args":[{"name":"heroId","types":["int"]}]},{"kind":"function","name":"GetHeroNameForUnitName","available":"both","description":"Get the hero name given a unit name.","returns":["string"],"args":[{"name":"unitName","types":["string"]}]},{"kind":"function","name":"GetHeroUnitNameByID","available":"both","description":"Get the hero unit name given the hero ID.","returns":["string"],"args":[{"name":"heroId","types":["int"]}]}]},{"kind":"class","name":"CDOTAGameRules","clientName":"CDOTAGameRules","instance":"GameRules","members":[{"kind":"function","name":"AddBotPlayerWithEntityScript","available":"server","description":"Spawn a bot player of the passed hero name, player name, and team.","returns":["CDOTA_BaseNPC_Hero","nil"],"args":[{"name":"heroName","types":["string"]},{"name":"playerName","types":["string"]},{"name":"team","types":["DOTATeam_t"]},{"name":"entityScript","description":"Path to a script file executed in the context of spawned hero entity.","types":["string"]},{"name":"arg5","types":["bool"]}]},{"kind":"function","name":"AddEventMetadataLeaderboardEntry","available":"server","description":"Event-only.","returns":["bool"],"args":[{"name":"nameSuffix","types":["string"]},{"name":"stars","types":["uint"]},{"name":"maxStars","types":["uint"]},{"name":"extraData1","types":["uint"]},{"name":"extraData2","types":["uint"]},{"name":"extraData3","types":["uint"]},{"name":"extraData4","types":["uint"]},{"name":"extraData5","types":["uint"]},{"name":"extraData6","types":["uint"]}]},{"kind":"function","name":"AddEventMetadataLeaderboardEntryRawScore","available":"server","description":"Event-only.","returns":["bool"],"args":[{"name":"nameSuffix","types":["string"]},{"name":"score","types":["uint"]},{"name":"extraData1","types":["uint"]},{"name":"extraData2","types":["uint"]},{"name":"extraData3","types":["uint"]},{"name":"extraData4","types":["uint"]},{"name":"extraData5","types":["uint"]},{"name":"extraData6","types":["uint"]}]},{"kind":"function","name":"AddHeroIDToBlacklist","available":"server","description":"Add the hero ID to the hero blacklist if it is not already present.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"AddHeroIDToWhitelist","available":"server","description":"Add the hero ID to the hero whitelist if it is not already present.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"AddHeroToBlacklist","available":"server","description":"Add the hero to the hero blacklist if it is not already present.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"AddHeroToPlayerAvailability","available":"server","description":"Adds hero of given ID to available heroes of player of given ID.","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["int"]}]},{"kind":"function","name":"AddHeroToWhitelist","available":"server","description":"Add the hero to the hero whitelist if it is not already present.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"AddItemToWhiteList","available":"server","description":"Add an item to the whitelist.","returns":["nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"AddMinimapDebugPoint","available":"server","description":"Add a point on the minimap.","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["float"]}]},{"kind":"function","name":"AddMinimapDebugPointForTeam","available":"server","description":"Add a point on the minimap for a specific team.","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["float"]},{"name":"arg8","types":["int"]}]},{"kind":"function","name":"BeginNightstalkerNight","available":"server","description":"Begin night stalker night.","returns":["nil"],"args":[{"name":"duration","types":["float"]}]},{"kind":"function","name":"BeginTemporaryNight","available":"server","description":"Begin temporary night.","returns":["nil"],"args":[{"name":"duration","types":["float"]}]},{"kind":"function","name":"BotPopulate","available":"server","description":"Fills all the teams with bots if cheat mode is enabled.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearHeroBlacklist","available":"server","description":"Clears the hero blacklist.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearHeroWhitelist","available":"server","description":"Clears the hero whitelist.","returns":["nil"],"args":[]},{"kind":"function","name":"ClearPlayerHeroAvailability","available":"server","description":"Clears available heroes of player of given ID.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"ClearRiverPaint","available":"server","description":"Clears the current river paint.","returns":["nil"],"args":[]},{"kind":"function","name":"Defeated","available":"server","description":"Kills the ancient, etc.","returns":["nil"],"args":[]},{"kind":"function","name":"DidMatchSignoutTimeOut","available":"server","description":"True when we have waited some time after end of the game and not received signout.","returns":["bool"],"args":[]},{"kind":"function","name":"EnableCustomGameSetupAutoLaunch","available":"server","description":"Enabled (true) or disable (false) auto launch for custom game setup.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"ExecuteTeamPing","available":"server","description":"Sends a minimap ping to all players on the team.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"xCoord","types":["float"]},{"name":"yCoord","types":["float"]},{"name":"entity","types":["CBaseEntity","nil"]},{"name":"type","types":[{"kind":"literal","value":0},{"kind":"literal","value":1},{"kind":"literal","value":2},{"kind":"literal","value":3},{"kind":"literal","value":4},{"kind":"literal","value":5},{"kind":"literal","value":6}]}]},{"kind":"function","name":"FinishCustomGameSetup","available":"server","description":"Indicate that the custom game setup phase is complete, and advance to the game.","returns":["nil"],"args":[]},{"kind":"function","name":"ForceCreepSpawn","available":"server","description":"Spawn the next wave of creeps.","returns":["nil"],"args":[]},{"kind":"function","name":"ForceGameStart","available":"server","description":"Transition game state to DOTA_GAMERULES_STATE_GAME_IN_PROGRESS.","returns":["nil"],"args":[]},{"kind":"function","name":"GetAnnouncer","available":"server","description":"Get the announcer for a team.","returns":["CDOTA_BaseNPC","nil"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetBannedHeroes","available":"both","description":"Returns the hero unit names banned in this game, if any.","returns":[{"kind":"array","types":["string"]}],"args":[]},{"kind":"function","name":"GetBannedHeroIDs","available":"both","description":"Returns the hero unit IDs banned in this game, if any.","returns":["table"],"args":[]},{"kind":"function","name":"GetCustomGameDifficulty","available":"both","description":"Returns the difficulty level of the custom game mode.","returns":["int"],"args":[]},{"kind":"function","name":"GetCustomGameTeamMaxPlayers","available":"server","description":"Get whether a team is selectable during game setup.","returns":["int"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetDifficulty","available":"both","description":"Returns difficulty level of the custom game mode.","returns":["int"],"args":[]},{"kind":"function","name":"GetDOTATime","available":"both","description":"Returns the actual DOTA in-game clock time.","returns":["float"],"args":[{"name":"includePreGame","types":["bool"]},{"name":"includeNegativeTime","types":["bool"]}]},{"kind":"function","name":"GetDroppedItem","available":"server","description":"Gets the Xth dropped item.","returns":["CDOTA_Item_Physical","nil"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"GetGameFrameTime","available":"both","description":"Returns the number of seconds elapsed since the last frame was renderered. This time doesn\'t count up when the game is paused.","returns":["float"],"args":[]},{"kind":"function","name":"GetGameModeEntity","available":"server","description":"Get the game mode entity.","returns":["CDOTABaseGameMode"],"args":[]},{"kind":"function","name":"GetGameSessionConfigValue","available":"server","description":"Get a string value from the game session config (map options).","returns":["string"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"GetGameTime","available":"both","description":"Returns the number of seconds elapsed since map start. This time doesn\'t count up when the game is paused.","returns":["float"],"args":[]},{"kind":"function","name":"GetIetmStockDuration","available":"both","description":"Get the time it takes to add a new item to stock.","returns":["float"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["int"]}]},{"kind":"function","name":"GetItemStockCount","available":"both","description":"Get the stock count of the item.","returns":["int"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"itemName","types":["string"]},{"name":"playerId","description":"Used only for items with \\"PlayerSpecificCooldown\\"","types":["PlayerID"]}]},{"kind":"function","name":"GetItemStockTime","available":"both","description":"Get the time an item will be added to stock.","returns":["float"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"itemName","types":["string"]},{"name":"playerId","description":"Used only for items with \\"PlayerSpecificCooldown\\"","types":["PlayerID"]}]},{"kind":"function","name":"GetMatchSignoutComplete","available":"server","description":"Have we received the post match signout message that includes reward information.","returns":["bool"],"args":[]},{"kind":"function","name":"GetNextBountyRuneSpawnTime","available":"server","description":"Gets next bounty rune spawn time.","returns":["float"],"args":[]},{"kind":"function","name":"GetNextRuneSpawnTime","available":"server","description":"Gets next rune spawn time.","returns":["float"],"args":[]},{"kind":"function","name":"GetNianTotalDamageTaken","available":"server","description":"For New Bloom, get total damage taken by the Nian / Year Beast.","returns":["int"],"args":[]},{"kind":"function","name":"GetPlayerCustomGameAccountRecord","available":"server","deprecated":"Unreleased.","description":"Gets the player\'s custom game account record, as it looked at the start of this session.","returns":["table"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"GetStateTransitionTime","available":"server","description":"Get time remaining between state changes.","returns":["float"],"args":[]},{"kind":"function","name":"GetTimeOfDay","available":"server","description":"Get the time of day.","returns":["float"],"args":[]},{"kind":"function","name":"GetWeatherWindDirection","available":"both","description":"Get Weather Wind Direction Vector.","returns":["Vector"],"args":[]},{"kind":"function","name":"IncreaseItemStock","available":"server","description":"Increase an item\'s stock count, clamped to item max.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"itemName","types":["string"]},{"name":"count","description":"Negative values decrease stock count.","types":["int"]},{"name":"playerId","description":"Values other than -1 work only for items with \\"PlayerSpecificCooldown\\" property.","types":["PlayerID"]}]},{"kind":"function","name":"IsCheatMode","available":"both","description":"Are cheats enabled on the server.","returns":["bool"],"args":[]},{"kind":"function","name":"IsDaytime","available":"server","description":"Is it day time?","returns":["bool"],"args":[]},{"kind":"function","name":"IsDev","available":"both","returns":["bool"],"args":[]},{"kind":"function","name":"IsGamePaused","available":"server","description":"Returns whether the game is paused.","returns":["bool"],"args":[]},{"kind":"function","name":"IsHeroEnabledViaLists","available":"both","description":"Is the hero not blacklisted, and is it either whitelisted or the whitelist is empty?","returns":["bool"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"IsHeroRespawnEnabled","available":"server","description":"Returns whether hero respawn is enabled.","returns":["bool"],"args":[]},{"kind":"function","name":"IsInBanPhase","available":"server","description":"Are we in the ban phase of hero pick?","returns":["bool"],"args":[]},{"kind":"function","name":"IsItemInWhiteList","available":"server","description":"Query an item in the whitelist.","returns":["bool"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"IsNightstalkerNight","available":"server","description":"Is it night stalker night-time?","returns":["bool"],"args":[]},{"kind":"function","name":"IsTemporaryNight","available":"server","description":"Is it temporarily night-time?","returns":["bool"],"args":[]},{"kind":"function","name":"LockCustomGameSetupTeamAssignment","available":"server","description":"Lock (true) or unlock (false) team assignemnt. If team assignment is locked players cannot change teams.","returns":["nil"],"args":[{"name":"locked","types":["bool"]}]},{"kind":"function","name":"MakeTeamLose","available":"server","description":"Makes the specified team lose.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"ModifyGoldFiltered","available":"server","description":"Like ModifyGold, but will use the gold filter if SetFilterMoreGold has been set true.","returns":["int"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"goldChange","types":["int"]},{"name":"reliable","types":["bool"]},{"name":"reason","types":["EDOTA_ModifyGold_Reason"]}]},{"kind":"function","name":"NumDroppedItems","available":"server","description":"Returns the number of items currently dropped on the ground.","returns":["int"],"args":[]},{"kind":"function","name":"PlayerHasCustomGameHostPrivileges","available":"server","description":"Whether a player has custom game host privileges (shuffle teams, etc.).","returns":["bool"],"args":[{"name":"player","types":["CDOTAPlayerController"]}]},{"kind":"function","name":"Playtesting_UpdateAddOnKeyValues","available":"server","description":"Updates custom hero, unit and ability KeyValues in memory with the latest values from disk.","returns":["nil"],"args":[]},{"kind":"function","name":"PrepareSpawners","available":"server","description":"Prepare Dota lane style spawners with a given interval.","returns":["nil"],"args":[{"name":"arg1","types":["float"]}]},{"kind":"function","name":"RemoveFakeClient","available":"server","description":"Removes a fake client.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"RemoveHeroFromBlacklist","available":"server","description":"Remove the hero from the hero blacklist if present.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"RemoveHeroFromWhitelist","available":"server","description":"Remove the hero from the hero whitelist if present.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"RemoveHeroIDFromBlacklist","available":"server","description":"Remove the hero ID from the hero blacklist if present.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"RemoveHeroIDFromWhitelist","available":"server","description":"Remove the hero ID from the hero whitelist if present.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"RemoveItemFromWhiteList","available":"server","description":"Remove an item from the whitelist.","returns":["nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"ResetDefeated","available":"server","description":"Restart after killing the ancient, etc.","returns":["nil"],"args":[]},{"kind":"function","name":"ResetGameTime","available":"server","description":"Restart gametime from 0.","returns":["nil"],"args":[]},{"kind":"function","name":"ResetToCustomGameSetup","available":"server","description":"Restart at custom game setup.","returns":["nil"],"args":[]},{"kind":"function","name":"ResetToHeroSelection","available":"server","description":"Restart the game at hero selection.","returns":["nil"],"args":[]},{"kind":"function","name":"Script_GetMatchID","available":"server","description":"Get the MatchID for this game.","returns":["Uint64"],"args":[]},{"kind":"function","name":"SendCustomMessage","available":"server","description":"Sends a message on behalf of a player.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]}]},{"kind":"function","name":"SendCustomMessageToTeam","available":"server","description":"Sends a message on behalf of a player to the specified team.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]}]},{"kind":"function","name":"SetAllowOutpostBonuses","available":"server","description":"Allow Outposts granting XP.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetCreepMinimapIconScale","available":"server","description":"Scale the creep icons on the minimap.","returns":["nil"],"args":[{"name":"scale","types":["float"]}]},{"kind":"function","name":"SetCreepSpawningEnabled","available":"server","description":"Sets whether the regular Dota creeps spawn.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetCustomGameAccountRecordSaveFunction","available":"server","deprecated":"Unreleased.","description":"Sets a callback to handle saving custom game account records (callback is passed a Player ID and should return a flat simple table).","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"SetCustomGameAllowBattleMusic","available":"server","description":"Sets a flag to enable/disable the default music handling code for custom games.","returns":["nil"],"args":[{"name":"allow","types":["bool"]}]},{"kind":"function","name":"SetCustomGameAllowHeroPickMusic","available":"server","description":"Sets a flag to enable/disable the default music handling code for custom games.","returns":["nil"],"args":[{"name":"allow","types":["bool"]}]},{"kind":"function","name":"SetCustomGameAllowMusicAtGameStart","available":"server","description":"Sets a flag to enable/disable the default music handling code for custom games.","returns":["nil"],"args":[{"name":"allow","types":["bool"]}]},{"kind":"function","name":"SetCustomGameAllowSecondaryAbilitiesOnOtherUnits","available":"server","description":"Sets a flag to enable/disable the casting secondary abilities from units other than the player\'s own hero.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetCustomGameBansPerTeam","available":"server","description":"Set number of hero bans each team gets.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"SetCustomGameDifficulty","available":"server","description":"Set the difficulty level of the custom game mode.","returns":["nil"],"args":[{"name":"difficulty","types":["int"]}]},{"kind":"function","name":"SetCustomGameEndDelay","available":"server","description":"Sets the game end delay.","returns":["nil"],"args":[{"name":"delay","types":["float"]}]},{"kind":"function","name":"SetCustomGameSetupAutoLaunchDelay","available":"server","description":"Set the amount of time to wait for auto launch.","returns":["nil"],"args":[{"name":"delay","types":["float"]}]},{"kind":"function","name":"SetCustomGameSetupRemainingTime","available":"server","description":"Set the amount of remaining time, in seconds, for custom game setup. 0 = finish immediately, -1 = wait forever.","returns":["nil"],"args":[{"name":"remainingTime","types":["float"]}]},{"kind":"function","name":"SetCustomGameSetupTimeout","available":"server","description":"Setup (pre-gameplay) phase timeout. 0 = instant, -1 = forever (until FinishCustomGameSetup is called).","returns":["nil"],"args":[{"name":"timeout","types":["float"]}]},{"kind":"function","name":"SetCustomGameTeamMaxPlayers","available":"server","description":"Set whether a team is selectable during game setup.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"maxPlayers","types":["int"]}]},{"kind":"function","name":"SetCustomVictoryMessage","available":"server","description":"Sets the victory message.","returns":["nil"],"args":[{"name":"message","types":["string"]}]},{"kind":"function","name":"SetCustomVictoryMessageDuration","available":"server","description":"Sets the victory message duration.","returns":["nil"],"args":[{"name":"duration","types":["float"]}]},{"kind":"function","name":"SetEnableAlternateHeroGrids","available":"server","description":"Allow alternate hero grids to be used (DOTA+, etc).  True by default.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetEventMetadataCustomTable","available":"server","description":"Event-only.","returns":["bool"],"args":[{"name":"metadataTable","types":["handle"]}]},{"kind":"function","name":"SetEventSignoutCustomTable","available":"server","description":"Event-only.","returns":["bool"],"args":[{"name":"metadataTable","types":["handle"]}]},{"kind":"function","name":"SetFilterMoreGold","available":"server","description":"Sets whether to filter more gold events than normal.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetFirstBloodActive","available":"server","description":"Sets whether First Blood has been triggered.","returns":["nil"],"args":[{"name":"active","types":["bool"]}]},{"kind":"function","name":"SetGameTimeFrozen","available":"server","description":"Freeze the game time.","returns":["nil"],"args":[{"name":"frozen","types":["bool"]}]},{"kind":"function","name":"SetGameWinner","available":"server","description":"Makes the specified team win.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"SetGlyphCooldown","available":"server","description":"Set Glyph cooldown for team.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"cooldown","types":["float"]}]},{"kind":"function","name":"SetGoldPerTick","available":"server","description":"Set the auto gold increase per timed interval.","returns":["nil"],"args":[{"name":"amount","types":["int"]}]},{"kind":"function","name":"SetGoldTickTime","available":"server","description":"Set the time interval between auto gold increases.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetHeroMinimapIconScale","available":"server","description":"Scale the hero minimap icons on the minimap.","returns":["nil"],"args":[{"name":"scale","types":["float"]}]},{"kind":"function","name":"SetHeroRespawnEnabled","available":"server","description":"Control if the normal DOTA hero respawn rules apply.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetHeroSelectionTime","available":"server","description":"Sets the amount of time players have to pick their hero.","returns":["nil"],"args":[{"name":"selectionTime","types":["float"]}]},{"kind":"function","name":"SetHeroSelectPenaltyTime","available":"server","description":"Sets amount of penalty time before randoming a hero.","returns":["nil"],"args":[{"name":"arg1","types":["float"]}]},{"kind":"function","name":"SetHideBlacklistedHeroes","available":"server","description":"Should blacklisted heroes be hidden, or just dimmed, in hero picking?","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetHideKillMessageHeaders","available":"server","description":"Sets whether the multikill, streak, and first-blood banners appear at the top of the screen.","returns":["nil"],"args":[{"name":"hideHeaders","types":["bool"]}]},{"kind":"function","name":"SetIgnoreLobbyTeamsInCustomGame","available":"server","description":"Set whether custom and event games should ignore Lobby teams when assigning players to teams. Defaults to true.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetItemStockCount","available":"server","description":"Set the stock count of the item.","returns":["nil"],"args":[{"name":"count","types":["int"]},{"name":"team","types":["DOTATeam_t"]},{"name":"itemName","types":["string"]},{"name":"playerId","description":"Used only for items with \\"PlayerSpecificCooldown\\"","types":["PlayerID"]}]},{"kind":"function","name":"SetNextBountyRuneSpawnTime","available":"server","description":"Sets next bounty rune spawn time.","returns":["nil"],"args":[{"name":"arg1","types":["float"]}]},{"kind":"function","name":"SetNextRuneSpawnTime","available":"server","description":"Sets next rune spawn time.","returns":["nil"],"args":[{"name":"arg1","types":["float"]}]},{"kind":"function","name":"SetOverlayHealthBarUnit","available":"server","description":"Show this unit\'s health on the overlay health bar.","returns":["nil"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"style","types":["int"]}]},{"kind":"function","name":"SetPostGameTime","available":"server","description":"Sets the amount of time players have between the game ending and the server disconnecting them.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetPreGameTime","available":"server","description":"Sets the amount of time players have between picking their hero and game start.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetRiverPaint","available":"server","description":"Paints the river for a duration.","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["float"]}]},{"kind":"function","name":"SetRuneMinimapIconScale","available":"server","description":"Scale the rune icons on the minimap.","returns":["nil"],"args":[{"name":"minimapRuneIconScale","types":["float"]}]},{"kind":"function","name":"SetRuneSpawnTime","available":"server","description":"Sets the amount of time between rune spawns.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetSafeToLeave","available":"server","description":"Mark this game as safe to leave.","returns":["nil"],"args":[{"name":"safeToLeave","types":["bool"]}]},{"kind":"function","name":"SetSameHeroSelectionEnabled","available":"server","description":"When true, players can repeatedly pick the same hero.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetShowcaseTime","available":"server","description":"Sets the amount of time players have between the strategy phase and entering the pre-game phase.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetSpeechUseSpawnInsteadOfRespawnConcept","available":"server","description":"Set whether to speak a Spawn concept instead of a Respawn concept on respawn.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"SetStartingGold","available":"server","description":"Set the starting gold amount.","returns":["nil"],"args":[{"name":"amount","types":["int"]}]},{"kind":"function","name":"SetStrategyTime","available":"server","description":"Sets the amount of time players have between the hero selection and entering the showcase phase.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetTimeOfDay","available":"server","description":"Set the time of day.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetTreeRegrowTime","available":"server","description":"Sets the tree regrow time in seconds.","returns":["nil"],"args":[{"name":"time","types":["float"]}]},{"kind":"function","name":"SetUseBaseGoldBountyOnHeroes","available":"server","description":"Heroes will use the basic NPC functionality for determining their bounty, rather than DOTA specific formulas.","returns":["nil"],"args":[{"name":"useBaseGoldBounties","types":["bool"]}]},{"kind":"function","name":"SetUseCustomHeroXPValues","available":"server","description":"Allows heroes in the map to give a specific amount of XP (this value must be set).","returns":["nil"],"args":[{"name":"useCustomXPValues","types":["bool"]}]},{"kind":"function","name":"SetUseUniversalShopMode","available":"server","description":"When true, all items are available at as long as any shop is in range.","returns":["nil"],"args":[{"name":"useUniversalShopMode","types":["bool"]}]},{"kind":"function","name":"SetWeatherWindDirection","available":"server","description":"Set Weather Wind Direction Vector.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"SetWhiteListEnabled","available":"server","description":"Item whitelist functionality enable/disable.","returns":["nil"],"args":[{"name":"whiteListEnabled","types":["bool"]}]},{"kind":"function","name":"ShouldHideBlacklistedHeroes","available":"both","description":"Are blacklisted heroes hidden, or just dimmed, in hero picking?","returns":["bool"],"args":[]},{"kind":"function","name":"SpawnAndReleaseCreeps","available":"server","description":"Spawn and release the next creep wave from Dota lane style spawners.","returns":["nil"],"args":[]},{"kind":"function","name":"SpawnNeutralCreeps","available":"server","description":"Spawn and release the next set of neutral camps.","returns":["nil"],"args":[]},{"kind":"function","name":"State_Get","available":"both","description":"Get the current Gamerules state.","returns":["DOTA_GameState"],"args":[]}]},{"kind":"class","name":"CDOTAPlayerController","extend":"CBaseAnimating","members":[{"kind":"function","name":"CheckForCourierSpawning","available":"server","description":"Attempt to spawn the appropriate couriers for this mode.","returns":["handle"],"args":[{"name":"hero","types":["CDOTA_BaseNPC_Hero"]}]},{"kind":"function","name":"GetAssignedHero","available":"server","description":"Get the player\'s hero.","returns":["CDOTA_BaseNPC_Hero"],"args":[]},{"kind":"function","name":"GetPlayerID","available":"server","description":"Get the player\'s official PlayerID; notably is -1 when the player isn\'t yet on a team.","returns":["PlayerID"],"args":[]},{"kind":"function","name":"MakeRandomHeroSelection","available":"server","description":"Randoms this player\'s hero.","returns":["nil"],"args":[]},{"kind":"function","name":"SetAssignedHeroEntity","available":"server","description":"Sets this player\'s hero .","returns":["nil"],"args":[{"name":"hero","types":["handle"]}]},{"kind":"function","name":"SetKillCamUnit","available":"server","description":"Set the kill cam unit for this hero.","returns":["nil"],"args":[{"name":"entity","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"SetMusicStatus","available":"server","description":"Set the music status for this player, note this will only really apply if dota_music_battle_enable is off.","returns":["nil"],"args":[{"name":"musicStatus","types":["int"]},{"name":"intensity","types":["float"]}]},{"kind":"function","name":"SetSelectedHero","available":"server","description":"Sets this player\'s hero selection.","returns":["nil"],"args":[{"name":"heroName","types":["string"]}]},{"kind":"function","name":"SpawnCourierAtPosition","available":"server","description":"Spawn a courier for this player at the given position.","returns":["CDOTA_Unit_Courier"],"args":[{"name":"location","types":["Vector"]}]}]},{"kind":"class","name":"CDotaQuest","extend":"CBaseEntity","members":[{"kind":"function","name":"AddSubquest","available":"server","description":"Add a subquest to this quest.","returns":["nil"],"args":[{"name":"subquest","types":["handle"]}]},{"kind":"function","name":"CompleteQuest","available":"server","description":"Mark this quest complete.","returns":["nil"],"args":[]},{"kind":"function","name":"GetSubquest","available":"server","description":"Finds a subquest from this quest by index.","returns":["handle"],"args":[{"name":"index","types":["int"]}]},{"kind":"function","name":"GetSubquestByName","available":"server","description":"Finds a subquest from this quest by name.","returns":["handle"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"RemoveSubquest","available":"server","description":"Remove a subquest from this quest.","returns":["nil"],"args":[{"name":"subquest","types":["handle"]}]},{"kind":"function","name":"SetTextReplaceString","available":"server","description":"Set the text replace string for this quest.","returns":["nil"],"args":[{"name":"string","types":["string"]}]},{"kind":"function","name":"SetTextReplaceValue","available":"server","description":"Set a quest value.","returns":["nil"],"args":[{"name":"valueSlot","types":["int"]},{"name":"value","types":["int"]}]}]},{"kind":"class","name":"CDotaSubquestBase","extend":"CBaseEntity","members":[{"kind":"function","name":"CompleteSubquest","available":"server","description":"Mark this subquest complete.","returns":["nil"],"args":[]},{"kind":"function","name":"SetTextReplaceString","available":"server","description":"Set the text replace string for this subquest.","returns":["nil"],"args":[{"name":"string","types":["string"]}]},{"kind":"function","name":"SetTextReplaceValue","available":"server","description":"Set a subquest value.","returns":["nil"],"args":[{"name":"valueSlot","types":["int"]},{"name":"value","types":["int"]}]}]},{"kind":"class","name":"CDOTATutorial","instance":"Tutorial","members":[{"kind":"function","name":"AddBot","available":"server","description":"Add a computer controlled bot.","returns":["bool"],"args":[{"name":"heroName","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["bool"]}]},{"kind":"function","name":"AddQuest","available":"server","description":"Add a quest to the quest log.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["string"]}]},{"kind":"function","name":"AddShopWhitelistItem","available":"server","description":"Add an item to the shop whitelist.","returns":["nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"CompleteQuest","available":"server","description":"Complete a quest,.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"CreateLocationTask","available":"server","description":"Add a task to move to a specific location.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"EnableCreepAggroViz","available":"server","description":"Alert the player when a creep becomes agro to their hero.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"EnablePlayerOffscreenTip","available":"server","description":"Enable the tip to alert players how to find their hero.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"EnableTowerAggroViz","available":"server","description":"Alert the player when a tower becomes agro to their hero.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]}]},{"kind":"function","name":"FinishTutorial","available":"server","description":"End the tutorial.","returns":["nil"],"args":[]},{"kind":"function","name":"ForceGameStart","available":"server","description":"Force the start of the game.","returns":["nil"],"args":[]},{"kind":"function","name":"GetTimeFrozen","available":"server","description":"Is our time frozen?","returns":["bool"],"args":[]},{"kind":"function","name":"IsItemInWhiteList","available":"server","description":"Is this item currently in the white list.","returns":["bool"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"RemoveShopWhitelistItem","available":"server","description":"Remove an item from the shop whitelist.","returns":["nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"SelectHero","available":"server","description":"Select a hero for the local player.","returns":["nil"],"args":[{"name":"heroName","types":["string"]}]},{"kind":"function","name":"SelectPlayerTeam","available":"server","description":"Select the team for the local player.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetItemGuide","available":"server","description":"Set the current item guide.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetOrModifyPlayerGold","available":"server","description":"Set gold amount for the tutorial player.","returns":["nil"],"args":[{"name":"goldAmount","types":["int"]},{"name":"setNotModify","description":"When true sets gold amount, otherwise modifies it","types":["bool"]}]},{"kind":"function","name":"SetQuickBuy","available":"server","description":"Set players quick buy item.","returns":["nil"],"args":[{"name":"itemName","types":["string"]}]},{"kind":"function","name":"SetShopOpen","available":"server","description":"Set the shop open or closed.","returns":["nil"],"args":[{"name":"open","types":["bool"]}]},{"kind":"function","name":"SetTimeFrozen","available":"server","description":"Set if we should freeze time or not.","returns":["nil"],"args":[{"name":"timeFrozen","types":["bool"]}]},{"kind":"function","name":"SetTutorialConvar","available":"server","description":"Set a tutorial convar.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"SetTutorialUI","available":"server","description":"Set the UI to use a reduced version to focus attention to specific elements.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"SetWhiteListEnabled","available":"server","description":"Set if we should whitelist shop items.","returns":["nil"],"args":[{"name":"whiteListEnabled","types":["bool"]}]},{"kind":"function","name":"StartTutorialMode","available":"server","description":"Initialize Tutorial Mode.","returns":["nil"],"args":[]},{"kind":"function","name":"UpgradePlayerAbility","available":"server","description":"Upgrade a specific ability for the local hero.","returns":["nil"],"args":[{"name":"abilityName","types":["string"]}]}]},{"kind":"class","name":"CDotaTutorialNPCBlocker","extend":"CBaseFlex","members":[{"kind":"function","name":"SetEnabled","available":"server","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]},{"kind":"function","name":"SetOtherBlocker","available":"server","returns":["nil"],"args":[{"name":"blocker","types":["handle"]}]}]},{"kind":"class","name":"CDOTAVoteSystem","instance":"VoteSystem","members":[{"kind":"function","name":"StartVote","available":"server","description":"Starts a vote, based upon a table of parameters.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]}]}]},{"kind":"class","name":"CEntities","clientName":"CEntities","instance":"Entities","members":[{"kind":"function","name":"CreateByClassname","available":"server","description":"Creates an entity by classname.","returns":["CBaseEntity"],"args":[{"name":"className","types":["string"]}]},{"kind":"function","name":"FindAllByClassname","available":"server","description":"Finds all entities by class name. Returns an array containing all the found entities.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"className","types":["string"]}]},{"kind":"function","name":"FindAllByClassnameWithin","available":"server","description":"Find entities by class name within a radius.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"className","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindAllByModel","available":"server","description":"Find entities by model name.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"modelName","types":["string"]}]},{"kind":"function","name":"FindAllByName","available":"server","description":"Find all entities by name. Returns an array containing all the found entities in it.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"FindAllByNameWithin","available":"server","description":"Find entities by name within a radius.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"name","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindAllByTarget","available":"server","description":"Find entities by targetname.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"target","types":["string"]}]},{"kind":"function","name":"FindAllInSphere","available":"server","description":"Find entities within a radius.","returns":[{"kind":"array","types":["CBaseEntity"]}],"args":[{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindByClassname","available":"server","description":"Find entities by class name. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"className","types":["string"]}]},{"kind":"function","name":"FindByClassnameNearest","available":"server","description":"Find entities by class name nearest to a point.","returns":["CBaseEntity","nil"],"args":[{"name":"className","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindByClassnameWithin","available":"server","description":"Find entities by class name within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"className","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindByModel","available":"server","description":"Find entities by model name. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"modelName","types":["string"]}]},{"kind":"function","name":"FindByModelWithin","available":"server","description":"Find entities by model name within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"modelName","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindByName","available":"server","description":"Find entities by name. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"name","types":["string"]}]},{"kind":"function","name":"FindByNameNearest","available":"server","description":"Find entities by name nearest to a point.","returns":["CBaseEntity","nil"],"args":[{"name":"name","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindByNameWithin","available":"server","description":"Find entities by name within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"name","types":["string"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"FindByTarget","available":"server","description":"Find entities by targetname. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"target","types":["string"]}]},{"kind":"function","name":"FindInSphere","available":"server","description":"Find entities within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"First","available":"both","description":"Begin an iteration over the list of entities.","returns":["CBaseEntity"],"args":[]},{"kind":"function","name":"GetLocalPlayer","available":"server","description":"Get the local player controller (backcompat).","returns":["CDOTAPlayerController"],"args":[]},{"kind":"function","name":"GetLocalPlayerController","available":"server","description":"Get the local player controller.","returns":["handle"],"args":[]},{"kind":"function","name":"GetLocalPlayerPawn","available":"server","description":"Get the local player pawn.","returns":["handle"],"args":[]},{"kind":"function","name":"Next","available":"both","description":"Continue an iteration over the list of entities, providing reference to a previously found entity.","returns":["CBaseEntity","nil"],"args":[{"name":"previous","types":["CBaseEntity","nil"]}]}]},{"kind":"class","name":"CEntityInstance","clientName":"CEntityInstance","members":[{"kind":"function","name":"ConnectOutput","available":"both","description":"Adds an I/O connection that will call the named function on this entity when the specified output fires.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"Destroy","available":"both","returns":["nil"],"args":[]},{"kind":"function","name":"DisconnectOutput","available":"both","description":"Removes a connected script function from an I/O event on this entity.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"DisconnectRedirectedOutput","available":"both","description":"Removes a connected script function from an I/O event on the passed entity.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["handle"]}]},{"kind":"function","name":"entindex","available":"both","returns":["EntityIndex"],"args":[]},{"kind":"function","name":"FireOutput","available":"both","description":"Fire an entity output.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]},{"name":"arg3","types":["handle"]},{"name":"arg4","types":["table"]},{"name":"arg5","types":["float"]}]},{"kind":"function","name":"GetClassname","available":"both","returns":["string"],"args":[]},{"kind":"function","name":"GetDebugName","available":"both","description":"Get the entity name w/help if not defined (i.e. classname/etc).","returns":["string"],"args":[]},{"kind":"function","name":"GetEntityHandle","available":"both","description":"Get the entity as an EHANDLE.","returns":["ehandle"],"args":[]},{"kind":"function","name":"GetEntityIndex","available":"both","returns":["EntityIndex"],"args":[]},{"kind":"function","name":"GetIntAttr","available":"both","description":"Get Integer Attribute.","returns":["int"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"GetName","available":"both","returns":["string"],"args":[]},{"kind":"function","name":"GetOrCreatePrivateScriptScope","available":"both","description":"Retrieve, creating if necessary, the private per-instance script-side data associated with an entity.","returns":["handle"],"args":[]},{"kind":"function","name":"GetOrCreatePublicScriptScope","available":"both","description":"Retrieve, creating if necessary, the public script-side data associated with an entity.","returns":["handle"],"args":[]},{"kind":"function","name":"GetPrivateScriptScope","available":"both","description":"Retrieve the private per-instance script-side data associated with an entity.","returns":["handle"],"args":[]},{"kind":"function","name":"GetPublicScriptScope","available":"both","description":"Retrieve the public script-side data associated with an entity.","returns":["handle"],"args":[]},{"kind":"function","name":"IsNull","available":"both","description":"Has underlying C++ entity object been deleted?","returns":["bool"],"args":[]},{"kind":"function","name":"RedirectOutput","available":"both","description":"Adds an I/O connection that will call the named function on the passed entity when the specified output fires.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["handle"]}]},{"kind":"function","name":"RemoveSelf","available":"both","description":"Delete this entity.","returns":["nil"],"args":[]},{"kind":"function","name":"SetIntAttr","available":"both","description":"Set Integer Attribute.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]}]}]},{"kind":"class","name":"CEntityScriptFramework","clientName":"CEntityScriptFramework","instance":"NativeFunctions","members":[]},{"kind":"class","name":"CEnvEntityMaker","extend":"CBaseEntity","members":[{"kind":"function","name":"SpawnEntity","available":"server","description":"Create an entity at the location of the maker.","returns":["nil"],"args":[]},{"kind":"function","name":"SpawnEntityAtEntityOrigin","available":"server","description":"Create an entity at the location of a specified entity instance.","returns":["nil"],"args":[{"name":"entity","types":["handle"]}]},{"kind":"function","name":"SpawnEntityAtLocation","available":"server","description":"Create an entity at a specified location and orientaton, orientation is Euler angle in degrees.","returns":["nil"],"args":[{"name":"vecAlternateOrigin","types":["Vector"]},{"name":"vecAlternateAngles","types":["Vector"]}]},{"kind":"function","name":"SpawnEntityAtNamedEntityOrigin","available":"server","description":"Create an entity at the location of a named entity.","returns":["nil"],"args":[{"name":"name","types":["string"]}]}]},{"kind":"class","name":"CEnvProjectedTexture","extend":"CBaseEntity","members":[{"kind":"function","name":"SetFarRange","available":"server","description":"Set light maximum range.","returns":["nil"],"args":[{"name":"range","types":["float"]}]},{"kind":"function","name":"SetLinearAttenuation","available":"server","description":"Set light linear attenuation value.","returns":["nil"],"args":[{"name":"atten","types":["float"]}]},{"kind":"function","name":"SetNearRange","available":"server","description":"Set light minimum range.","returns":["nil"],"args":[{"name":"range","types":["float"]}]},{"kind":"function","name":"SetQuadraticAttenuation","available":"server","description":"Set light quadratic attenuation value.","returns":["nil"],"args":[{"name":"atten","types":["float"]}]},{"kind":"function","name":"SetVolumetrics","available":"server","description":"Turn on/off light volumetrics.","returns":["nil"],"args":[{"name":"on","types":["bool"]},{"name":"intensity","types":["float"]},{"name":"noise","types":["float"]},{"name":"planes","types":["int"]},{"name":"planeOffset","types":["float"]}]}]},{"kind":"class","name":"CFoWBlockerRegion","extend":"CBaseEntity","members":[{"kind":"function","name":"AddRectangularBlocker","available":"server","description":"Sets or clears a blocker rectangle.","returns":["nil"],"args":[{"name":"mins","types":["Vector"]},{"name":"maxs","types":["Vector"]},{"name":"clearRegion","types":["bool"]}]},{"kind":"function","name":"AddRectangularOutlineBlocker","available":"server","description":"Sets or clears a blocker rectangle outline.","returns":["nil"],"args":[{"name":"mins","types":["Vector"]},{"name":"maxs","types":["Vector"]},{"name":"clearRegion","types":["bool"]}]}]},{"kind":"class","name":"CInfoData","extend":"CBaseEntity","members":[{"kind":"function","name":"QueryColor","available":"server","description":"Query color data for this key.","returns":["Vector"],"args":[{"name":"tok","types":["string"]},{"name":"default","types":["Vector"]}]},{"kind":"function","name":"QueryFloat","available":"server","description":"Query float data for this key.","returns":["float"],"args":[{"name":"tok","types":["string"]},{"name":"default","types":["float"]}]},{"kind":"function","name":"QueryInt","available":"server","description":"Query int data for this key.","returns":["int"],"args":[{"name":"tok","types":["string"]},{"name":"default","types":["int"]}]},{"kind":"function","name":"QueryNumber","available":"server","description":"Query number data for this key.","returns":["float"],"args":[{"name":"tok","types":["string"]},{"name":"default","types":["float"]}]},{"kind":"function","name":"QueryString","available":"server","description":"Query string data for this key.","returns":["string"],"args":[{"name":"tok","types":["string"]},{"name":"default","types":["string"]}]},{"kind":"function","name":"QueryVector","available":"server","description":"Query vector data for this key.","returns":["Vector"],"args":[{"name":"tok","types":["string"]},{"name":"default","types":["Vector"]}]}]},{"kind":"class","name":"CInfoPlayerStartDota","extend":"CPointEntity","members":[{"kind":"function","name":"IsEnabled","available":"server","description":"Returns whether the object is currently active.","returns":["bool"],"args":[]},{"kind":"function","name":"SetEnabled","available":"server","description":"Enable or disable the obstruction.","returns":["nil"],"args":[{"name":"enabled","types":["bool"]}]}]},{"kind":"class","name":"CInfoWorldLayer","clientName":"CInfoWorldLayer","extend":"CBaseEntity","members":[{"kind":"function","name":"HideWorldLayer","available":"both","description":"Hides this layer.","returns":["nil"],"args":[]},{"kind":"function","name":"ShowWorldLayer","available":"both","description":"Shows this layer.","returns":["nil"],"args":[]}]},{"kind":"class","name":"CLogicRelay","clientName":"CLogicRelay","extend":"CBaseEntity","members":[{"kind":"function","name":"Trigger","available":"both","description":"Triggers the logic_relay.","returns":["nil"],"args":[{"name":"activator","types":["CBaseEntity","nil"]},{"name":"caller","types":["CBaseEntity","nil"]}]}]},{"kind":"class","name":"CLogicScript","extend":"CBaseEntity","members":[]},{"kind":"class","name":"CMarkupVolumeTagged","extend":"CBaseEntity","members":[{"kind":"function","name":"HasTag","available":"server","description":"Does this volume have the given tag.","returns":["bool"],"args":[{"name":"tagName","types":["string"]}]}]},{"kind":"class","name":"CNativeOutputs","clientName":"CNativeOutputs","members":[{"kind":"function","name":"AddOutput","available":"both","description":"Add an output.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"Init","available":"both","description":"Initialize with number of outputs.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]}]},{"kind":"class","name":"Convars","clientName":"Convars","instance":"Convars","members":[{"kind":"function","name":"GetBool","available":"both","description":"Returns the convar as a boolean flag.","returns":["bool","nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"GetCommandClient","available":"both","description":"Returns the player who issued this console command.","returns":["CDOTAPlayerController"],"args":[]},{"kind":"function","name":"GetDOTACommandClient","available":"both","description":"Returns the DOTA player who issued this console command.","returns":["CDOTAPlayerController"],"args":[]},{"kind":"function","name":"GetFloat","available":"both","description":"Returns the convar as a float. May return null if no such convar.","returns":["float","nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"GetInt","available":"both","description":"Returns the convar as an int. May return null if no such convar.","returns":["int","nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"GetStr","available":"both","description":"Returns the convar as a string. May return null if no such convar.","returns":["string","nil"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"RegisterCommand","available":"both","description":"Register a console command.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"...args","types":[{"kind":"array","types":["string"]}]}]}]},{"name":"helpString","types":["string"]},{"name":"flags","types":["ConVarFlags"]}]},{"kind":"function","name":"RegisterConvar","available":"both","description":"Register a new console variable.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"defaultValue","types":["string"]},{"name":"helpString","types":["string"]},{"name":"flags","types":["ConVarFlags"]}]},{"kind":"function","name":"SetBool","available":"both","description":"Sets the value of the convar to the bool.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["bool"]}]},{"kind":"function","name":"SetFloat","available":"both","description":"Sets the value of the convar to the float.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["float"]}]},{"kind":"function","name":"SetInt","available":"both","description":"Sets the value of the convar to the int.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["int"]}]},{"kind":"function","name":"SetStr","available":"both","description":"Sets the value of the convar to the string.","returns":["nil"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["string"]}]}]},{"kind":"class","name":"CParticleSystem","extend":"CBaseModelEntity","members":[]},{"kind":"class","name":"CPhysicsProp","extend":"CBaseAnimating","members":[{"kind":"function","name":"DisableMotion","available":"server","description":"Disable motion for the prop.","returns":["nil"],"args":[]},{"kind":"function","name":"EnableMotion","available":"server","description":"Enable motion for the prop.","returns":["nil"],"args":[]},{"kind":"function","name":"SetDynamicVsDynamicContinuous","available":"server","description":"Enable/disable dynamic vs dynamic continuous collision traces.","returns":["nil"],"args":[{"name":"isDynamicVsDynamicContinuousEnabled","types":["bool"]}]}]},{"kind":"class","name":"CPointClientUIWorldPanel","extend":"CBaseModelEntity","members":[{"kind":"function","name":"AcceptUserInput","available":"server","description":"Tells the panel to accept user input.","returns":["nil"],"args":[]},{"kind":"function","name":"AddCSSClasses","available":"server","description":"Adds CSS class(es) to the panel.","returns":["nil"],"args":[{"name":"classes","types":["string"]}]},{"kind":"function","name":"IgnoreUserInput","available":"server","description":"Tells the panel to ignore user input.","returns":["nil"],"args":[]},{"kind":"function","name":"IsGrabbable","available":"server","description":"Returns whether this entity is grabbable.","returns":["bool"],"args":[]},{"kind":"function","name":"RemoveCSSClasses","available":"server","description":"Remove CSS class(es) from the panel.","returns":["nil"],"args":[{"name":"classes","types":["string"]}]}]},{"kind":"class","name":"CPointEntity","clientName":"C_PointEntity","extend":"CBaseEntity","members":[]},{"kind":"class","name":"CPointTemplate","clientName":"CPointTemplate","extend":"CBaseEntity","members":[{"kind":"function","name":"DeleteCreatedSpawnGroups","available":"both","description":"Deletes any spawn groups that this point_template has spawned. Note: The point_template will not be deleted by this.","returns":["nil"],"args":[]},{"kind":"function","name":"ForceSpawn","available":"both","description":"Spawns all of the entities the point_template is pointing at.","returns":["nil"],"args":[]},{"kind":"function","name":"GetSpawnedEntities","available":"both","description":"Get the list of the most recent spawned entities.","returns":["handle"],"args":[]},{"kind":"function","name":"SetSpawnCallback","available":"both","description":"Set a callback for when the template spawns entities. The spawned entities will be passed in as an array.","returns":["nil"],"args":[{"name":"callbackFunc","types":["handle"]},{"name":"callbackScope","types":["handle"]}]}]},{"kind":"class","name":"CPointWorldText","clientName":"C_PointWorldText","extend":"CBaseModelEntity","members":[{"kind":"function","name":"SetMessage","available":"both","description":"Set the message on this entity.","returns":["nil"],"args":[{"name":"message","types":["string"]}]}]},{"kind":"class","name":"CSceneEntity","extend":"CBaseEntity","members":[{"kind":"function","name":"AddBroadcastTeamTarget","available":"server","description":"Adds a team (by index) to the broadcast list.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"Cancel","available":"server","description":"Cancel scene playback.","returns":["nil"],"args":[]},{"kind":"function","name":"EstimateLength","available":"server","description":"Returns length of this scene in seconds.","returns":["float"],"args":[]},{"kind":"function","name":"FindCamera","available":"server","description":"Get the camera.","returns":["handle"],"args":[]},{"kind":"function","name":"FindNamedEntity","available":"server","description":"Given an entity reference, such as !target, get actual entity from scene object.","returns":["handle"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"IsPaused","available":"server","description":"If this scene is currently paused.","returns":["bool"],"args":[]},{"kind":"function","name":"IsPlayingBack","available":"server","description":"If this scene is currently playing.","returns":["bool"],"args":[]},{"kind":"function","name":"LoadSceneFromString","available":"server","description":"Given a dummy scene name and a vcd string, load the scene.","returns":["bool"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"RemoveBroadcastTeamTarget","available":"server","description":"Removes a team (by index) from the broadcast list.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"Start","available":"server","description":"Start scene playback, takes activatorEntity as param.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]}]}]},{"kind":"class","name":"CScriptHeroList","instance":"HeroList","members":[{"kind":"function","name":"GetAllHeroes","available":"server","description":"Returns all the heroes in the world.","returns":[{"kind":"array","types":["CDOTA_BaseNPC_Hero"]}],"args":[]},{"kind":"function","name":"GetHero","available":"server","description":"Get the Nth hero in the Hero List.","returns":["CDOTA_BaseNPC_Hero","nil"],"args":[{"name":"nth","types":["int"]}]},{"kind":"function","name":"GetHeroCount","available":"server","description":"Returns the number of heroes in the world.","returns":["int"],"args":[]}]},{"kind":"class","name":"CScriptHTTPRequest","clientName":"CScriptHTTPRequest","description":"Note: Actual `CScriptHTTPRequest` global exists only after CreateHTTPRequest is called.","members":[{"kind":"function","name":"Send","available":"both","description":"Send a HTTP request.","returns":["bool"],"args":[{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"response","types":["CScriptHTTPResponse"]}]}]}]},{"kind":"function","name":"SetHTTPRequestAbsoluteTimeoutMS","available":"both","description":"Set the total timeout on the request.","returns":["bool"],"args":[{"name":"milliseconds","types":["uint"]}]},{"kind":"function","name":"SetHTTPRequestGetOrPostParameter","available":"both","description":"Set a POST or GET parameter on the request.","returns":["bool"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["string"]}]},{"kind":"function","name":"SetHTTPRequestHeaderValue","available":"both","description":"Set a header value on the request.","returns":["bool"],"args":[{"name":"name","types":["string"]},{"name":"value","types":["string"]}]},{"kind":"function","name":"SetHTTPRequestNetworkActivityTimeout","available":"both","description":"Set the network timeout on the request - this timer is reset when any data is received.","returns":["bool"],"args":[{"name":"seconds","types":["uint"]}]},{"kind":"function","name":"SetHTTPRequestRawPostBody","available":"both","description":"Set the literal body of a post - invalid after setting a post parameter.","returns":["bool"],"args":[{"name":"contentType","types":["string"]},{"name":"body","types":["string"]}]}]},{"kind":"class","name":"CScriptKeyValues","clientName":"CScriptKeyValues","members":[{"kind":"function","name":"GetValue","available":"both","description":"Reads a spawn key.","returns":["table"],"args":[{"name":"arg1","types":["string"]}]}]},{"kind":"class","name":"CScriptParticleManager","clientName":"CScriptParticleManager","instance":"ParticleManager","members":[{"kind":"function","name":"CreateParticle","available":"both","description":"Creates a new particle effect.","returns":["ParticleID"],"args":[{"name":"particleName","types":["string"]},{"name":"particleAttach","types":["ParticleAttachment_t"]},{"name":"owner","types":["CBaseEntity","nil"]}]},{"kind":"function","name":"CreateParticleForPlayer","available":"both","description":"Creates a new particle effect that only plays for the specified player.","returns":["ParticleID"],"args":[{"name":"particleName","types":["string"]},{"name":"particleAttach","types":["ParticleAttachment_t"]},{"name":"owner","types":["CBaseEntity","nil"]},{"name":"player","types":["CDOTAPlayerController"]}]},{"kind":"function","name":"CreateParticleForTeam","available":"both","description":"Creates a new particle effect that only plays for the specified team.","returns":["ParticleID"],"args":[{"name":"particleName","types":["string"]},{"name":"particleAttach","types":["ParticleAttachment_t"]},{"name":"owner","types":["CBaseEntity","nil"]},{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"DestroyParticle","available":"both","description":"Destroy a particle, if bDestroyImmediately destroy it without playing end caps.","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"immediate","types":["bool"]}]},{"kind":"function","name":"GetParticleReplacement","available":"both","returns":["string"],"args":[{"name":"particleName","types":["string"]},{"name":"hero","types":["CDOTA_BaseNPC_Hero","nil"]}]},{"kind":"function","name":"ReleaseParticleIndex","available":"both","description":"Frees the specified particle index.","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]}]},{"kind":"function","name":"SetParticleAlwaysSimulate","available":"both","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]}]},{"kind":"function","name":"SetParticleControl","available":"both","description":"Set the control point data for a control on a particle effect.","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"value","types":["Vector"]}]},{"kind":"function","name":"SetParticleControlEnt","available":"both","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"unit","types":["CBaseEntity"]},{"name":"particleAttach","types":["ParticleAttachment_t"]},{"name":"attachment","types":["string"]},{"name":"offset","types":["Vector"]},{"name":"lockOrientation","types":["bool"]}]},{"kind":"function","name":"SetParticleControlFallback","available":"both","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"vecPosition","types":["Vector"]}]},{"kind":"function","name":"SetParticleControlForward","available":"both","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"forward","types":["Vector"]}]},{"kind":"function","name":"SetParticleControlOrientation","available":"both","description":"Set the orientation for a control on a particle effect (NOTE: This is left handed -- bad!!).","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"forward","types":["Vector"]},{"name":"right","types":["Vector"]},{"name":"up","types":["Vector"]}]},{"kind":"function","name":"SetParticleControlOrientationFLU","available":"both","description":"Set the orientation for a control on a particle effect.","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"vecForward","types":["Vector"]},{"name":"vecLeft","types":["Vector"]},{"name":"vecUp","types":["Vector"]}]},{"kind":"function","name":"SetParticleFoWProperties","available":"both","returns":["nil"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"controlPoint","types":["int"]},{"name":"controlPoint2","types":["int"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"SetParticleShouldCheckFoW","available":"both","returns":["bool"],"args":[{"name":"particle","types":["ParticleID"]},{"name":"checkFoW","types":["bool"]}]}]},{"kind":"class","name":"CScriptPrecacheContext","clientName":"CScriptPrecacheContext","members":[{"kind":"function","name":"AddResource","available":"both","description":"Precaches a specific resource.","returns":["nil"],"args":[{"name":"resource","types":["string"]}]},{"kind":"function","name":"GetValue","available":"both","description":"Reads a spawn key.","returns":["table"],"args":[{"name":"key","types":["string"]}]}]},{"kind":"class","name":"CScriptUniformRandomStream","clientName":"CScriptUniformRandomStream","members":[{"kind":"function","name":"RandomFloat","available":"both","returns":["float"],"args":[{"name":"minVal","types":["float"]},{"name":"maxVal","types":["float"]}]},{"kind":"function","name":"RandomFloatExp","available":"both","returns":["float"],"args":[{"name":"minVal","types":["float"]},{"name":"maxVal","types":["float"]},{"name":"exponent","types":["float"]}]},{"kind":"function","name":"RandomInt","available":"both","returns":["int"],"args":[{"name":"minVal","types":["int"]},{"name":"maxVal","types":["int"]}]},{"kind":"function","name":"RollPercentage","available":"both","returns":["bool"],"args":[{"name":"percentage","types":["int"]}]}]},{"kind":"class","name":"CTakeDamageInfo","members":[{"kind":"function","name":"AddDamage","available":"server","returns":["nil"],"args":[{"name":"addAmount","types":["float"]}]},{"kind":"function","name":"AddDamageType","available":"server","returns":["nil"],"args":[{"name":"bitsDamageType","types":["int"]}]},{"kind":"function","name":"GetAmmoType","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetAttacker","available":"server","returns":["handle"],"args":[]},{"kind":"function","name":"GetDamage","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetDamageCustom","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetDamageForce","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"GetDamagePosition","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"GetDamageType","available":"server","returns":["int"],"args":[]},{"kind":"function","name":"GetInflictor","available":"server","returns":["handle"],"args":[]},{"kind":"function","name":"GetOriginalDamage","available":"server","returns":["float"],"args":[]},{"kind":"function","name":"GetReportedPosition","available":"server","returns":["Vector"],"args":[]},{"kind":"function","name":"HasDamageType","available":"server","returns":["bool"],"args":[{"name":"bitsToTest","types":["int"]}]},{"kind":"function","name":"ScaleDamage","available":"server","returns":["nil"],"args":[{"name":"scaleAmount","types":["float"]}]},{"kind":"function","name":"SetAmmoType","available":"server","returns":["nil"],"args":[{"name":"ammoType","types":["int"]}]},{"kind":"function","name":"SetAttacker","available":"server","returns":["nil"],"args":[{"name":"attacker","types":["handle"]}]},{"kind":"function","name":"SetDamage","available":"server","returns":["nil"],"args":[{"name":"damage","types":["float"]}]},{"kind":"function","name":"SetDamageCustom","available":"server","returns":["nil"],"args":[{"name":"damageCustom","types":["int"]}]},{"kind":"function","name":"SetDamageForce","available":"server","returns":["nil"],"args":[{"name":"damageForce","types":["Vector"]}]},{"kind":"function","name":"SetDamagePosition","available":"server","returns":["nil"],"args":[{"name":"damagePosition","types":["Vector"]}]},{"kind":"function","name":"SetDamageType","available":"server","returns":["nil"],"args":[{"name":"bitsDamageType","types":["int"]}]},{"kind":"function","name":"SetOriginalDamage","available":"server","returns":["nil"],"args":[{"name":"originalDamage","types":["float"]}]},{"kind":"function","name":"SetReportedPosition","available":"server","returns":["nil"],"args":[{"name":"reportedPosition","types":["Vector"]}]}]},{"kind":"class","name":"GlobalSys","clientName":"GlobalSys","instance":"GlobalSys","members":[{"kind":"function","name":"CommandLineCheck","available":"both","description":"Returns true if the command line param was used, otherwise false.","returns":["table"],"args":[{"name":"name","types":["string"]}]},{"kind":"function","name":"CommandLineFloat","available":"both","description":"Returns the command line param as a float.","returns":["table"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["float"]}]},{"kind":"function","name":"CommandLineInt","available":"both","description":"Returns the command line param as an int.","returns":["table"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]}]},{"kind":"function","name":"CommandLineStr","available":"both","description":"Returns the command line param as a string.","returns":["table"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]}]},{"kind":"class","name":"GridNav","instance":"GridNav","members":[{"kind":"function","name":"CanFindPath","available":"server","description":"Determine if it is possible to reach the specified end point from the specified start point. bool.","returns":["bool"],"args":[{"name":"start","types":["Vector"]},{"name":"end","types":["Vector"]}]},{"kind":"function","name":"DestroyTreesAroundPoint","available":"server","description":"Destroy all trees in the area(vPosition, flRadius, bFullCollision.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["bool"]}]},{"kind":"function","name":"FindPathLength","available":"server","description":"Find a path between the two points an return the length of the path. If there is not a path between the points the returned value will be -1.","returns":["float"],"args":[{"name":"start","types":["Vector"]},{"name":"end","types":["Vector"]}]},{"kind":"function","name":"GetAllTreesAroundPoint","available":"server","description":"Returns a table full of tree HSCRIPTS.","returns":[{"kind":"array","types":["CDOTA_MapTree"]}],"args":[{"name":"position","types":["Vector"]},{"name":"radius","types":["float"]},{"name":"fullCollision","types":["bool"]}]},{"kind":"function","name":"GridPosToWorldCenterX","available":"server","description":"Get the X position of the center of a given X index.","returns":["float"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"GridPosToWorldCenterY","available":"server","description":"Get the Y position of the center of a given Y index.","returns":["float"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"IsBlocked","available":"server","description":"Checks whether the given position is blocked.","returns":["bool"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"IsNearbyTree","available":"server","description":"Checks whether there are any trees overlapping the given point.","returns":["bool"],"args":[{"name":"position","types":["Vector"]},{"name":"radius","types":["float"]},{"name":"checkFullTreeRadius","types":["bool"]}]},{"kind":"function","name":"IsTraversable","available":"server","description":"Checks whether the given position is traversable.","returns":["bool"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"RegrowAllTrees","available":"server","description":"Causes all trees in the map to regrow.","returns":["nil"],"args":[]},{"kind":"function","name":"WorldToGridPosX","available":"server","description":"Get the X index of a given world X position.","returns":["int"],"args":[{"name":"arg1","types":["float"]}]},{"kind":"function","name":"WorldToGridPosY","available":"server","description":"Get the Y index of a given world Y position.","returns":["int"],"args":[{"name":"arg1","types":["float"]}]}]},{"kind":"class","name":"ProjectileManager","instance":"ProjectileManager","members":[{"kind":"function","name":"ChangeTrackingProjectileSpeed","available":"server","description":"Update speed.","returns":["nil"],"args":[{"name":"ability","types":["CDOTABaseAbility"]},{"name":"speed","types":["int"]}]},{"kind":"function","name":"CreateLinearProjectile","available":"server","description":"Creates a linear projectile and returns the projectile ID.","returns":["ProjectileID"],"args":[{"name":"options","types":["CreateLinearProjectileOptions"]}]},{"kind":"function","name":"CreateTrackingProjectile","available":"server","description":"Creates a tracking projectile.","returns":["ProjectileID"],"args":[{"name":"options","types":["CreateTrackingProjectileOptions"]}]},{"kind":"function","name":"DestroyLinearProjectile","available":"server","description":"Destroys the linear projectile matching the argument ID.","returns":["nil"],"args":[{"name":"projectile","types":["ProjectileID"]}]},{"kind":"function","name":"DestroyTrackingProjectile","available":"server","description":"Destroy a tracking projectile early.","returns":["nil"],"args":[{"name":"projectile","types":["ProjectileID"]}]},{"kind":"function","name":"GetLinearProjectileLocation","available":"server","description":"Returns current location of projectile.","returns":["Vector"],"args":[{"name":"projectile","types":["ProjectileID"]}]},{"kind":"function","name":"GetLinearProjectileRadius","available":"server","description":"Returns current radius of projectile.","returns":["float"],"args":[{"name":"projectile","types":["ProjectileID"]}]},{"kind":"function","name":"GetLinearProjectileVelocity","available":"server","description":"Returns a vector representing the current velocity of the projectile.","returns":["Vector"],"args":[{"name":"projectile","types":["ProjectileID"]}]},{"kind":"function","name":"GetTrackingProjectileLocation","available":"server","description":"Returns current location of projectile.","returns":["Vector"],"args":[{"name":"projectile","types":["ProjectileID"]}]},{"kind":"function","name":"IsValidProjectile","available":"server","description":"Is this a valid projectile?","returns":["bool"],"args":[{"name":"value","types":["int"]}]},{"kind":"function","name":"ProjectileDodge","available":"server","description":"Makes the specified unit dodge projectiles.","returns":["nil"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"UpdateLinearProjectileDirection","available":"server","description":"Update velocity.","returns":["nil"],"args":[{"name":"projectile","types":["ProjectileID"]},{"name":"direction","types":["Vector"]},{"name":"speed","types":["float"]}]}]},{"kind":"class","name":"QAngle","clientName":"QAngle","description":"QAngle class.","call":{"kind":"function","returns":["QAngle"],"args":[{"name":"x","types":["float","nil"],"description":"Pitch +down/-up."},{"name":"y","types":["float","nil"],"description":"Yaw +left/-right."},{"name":"z","types":["float","nil"],"description":"Roll +right/-left."}]},"members":[{"kind":"field","name":"x","types":["float"],"description":"Pitch angle"},{"kind":"field","name":"y","types":["float"],"description":"Yaw angle"},{"kind":"field","name":"z","types":["float"],"description":"Roll angle"},{"kind":"function","name":"__add","available":"both","args":[{"name":"b","types":["QAngle"]}],"returns":["QAngle"],"description":"Overloaded +. Adds angles together."},{"kind":"function","name":"__eq","available":"both","args":[{"name":"b","types":["QAngle"]}],"returns":["bool"],"description":"Overloaded ==. Tests for Equality."},{"kind":"function","name":"__tostring","available":"both","args":[],"returns":["string"],"description":"Overloaded .. Converts the QAngles to strings."},{"kind":"function","name":"Forward","available":"both","args":[],"returns":["Vector"],"description":"Returns the forward vector."},{"kind":"function","name":"Left","available":"both","args":[],"returns":["Vector"],"description":"Returns the left vector."},{"kind":"function","name":"Up","available":"both","args":[],"returns":["Vector"],"description":"Returns the up vector."}]},{"kind":"class","name":"SteamInfo","instance":"SteamInfo","members":[{"kind":"function","name":"IsPublicUniverse","available":"server","description":"Is the script connected to the public Steam universe.","returns":["bool"],"args":[]}]},{"kind":"class","name":"Uint64","description":"Integer with binary operations.","members":[{"kind":"function","name":"__eq","available":"server","args":[{"name":"b","types":["Uint64"]}],"returns":["bool"]},{"kind":"function","name":"__tostring","available":"server","args":[],"returns":["string"],"description":"Overloaded .. Converts Uint64s to strings."},{"kind":"function","name":"BitwiseAnd","available":"server","args":[{"name":"operand","types":["Uint64"]}],"returns":["Uint64"],"description":"Performs bitwise AND between two integers."},{"kind":"function","name":"BitwiseOr","available":"server","args":[{"name":"operand","types":["Uint64"]}],"returns":["Uint64"],"description":"Performs bitwise OR between two integers."},{"kind":"function","name":"BitwiseXor","available":"server","args":[{"name":"operand","types":["Uint64"]}],"returns":["Uint64"],"description":"Performs bitwise XOR between two integers."},{"kind":"function","name":"BitwiseNot","available":"server","args":[],"returns":["Uint64"],"description":"Performs bitwise NOT."},{"kind":"function","name":"SetBit","available":"server","args":[{"name":"bitvalue","types":["int"]}],"returns":["nil"],"description":"Sets the specified bit."},{"kind":"function","name":"ClearBit","available":"server","args":[{"name":"bitvalue","types":["int"]}],"returns":["int"],"description":"Clears the specified bit."},{"kind":"function","name":"IsBitSet","available":"server","args":[{"name":"bitvalue","types":["int"]}],"returns":["int","nil"],"description":"Checks if bit is set."},{"kind":"function","name":"ToggleBit","available":"server","args":[{"name":"bitvalue","types":["int"]}],"returns":["int"],"description":"Toggles the specified bit."},{"kind":"function","name":"ToHexString","available":"server","args":[],"returns":["string"],"description":"Returns a hexadecimal string representation of the integer."}]},{"kind":"class","name":"Vector","clientName":"Vector","description":"3D Vector class.","call":{"kind":"function","returns":["Vector"],"args":[{"name":"x","types":["float","nil"]},{"name":"y","types":["float","nil"]},{"name":"z","types":["float","nil"]}]},"members":[{"kind":"field","name":"x","types":["float"],"description":"X-axis"},{"kind":"field","name":"y","types":["float"],"description":"Y-axis"},{"kind":"field","name":"z","types":["float"],"description":"Z-axis"},{"kind":"function","name":"__add","available":"both","args":[{"name":"b","types":["Vector"]}],"returns":["Vector"],"description":"Overloaded +. Adds vectors together."},{"kind":"function","name":"__div","available":"both","args":[{"name":"b","types":["Vector"]}],"returns":["Vector"],"description":"Overloaded /. Divides vectors."},{"kind":"function","name":"__eq","available":"both","args":[{"name":"b","types":["Vector"]}],"returns":["bool"],"description":"Overloaded ==. Tests for Equality."},{"kind":"function","name":"__len","available":"both","args":[],"returns":["float"],"description":"Overloaded # returns the length of the vector."},{"kind":"function","name":"__mul","available":"both","args":[{"name":"b","types":["Vector","float"]}],"returns":["Vector"],"description":"Overloaded * returns the vectors multiplied together. Can also be used to multiply with scalars."},{"kind":"function","name":"__sub","available":"both","args":[{"name":"b","types":["Vector"]}],"returns":["Vector"],"description":"Overloaded -. Subtracts vectors."},{"kind":"function","name":"__tostring","available":"both","args":[],"returns":["string"],"description":"Overloaded .. Converts vectors to strings."},{"kind":"function","name":"__unm","available":"both","args":[],"returns":["Vector"],"description":"Overloaded - operator. Reverses the vector."},{"kind":"function","name":"Cross","available":"both","args":[{"name":"b","types":["Vector"]}],"returns":["Vector"],"description":"Cross product of two vectors."},{"kind":"function","name":"Dot","available":"both","args":[{"name":"b","types":["Vector"]}],"returns":["float"],"description":"Dot product of two vectors."},{"kind":"function","name":"Length","available":"both","args":[],"returns":["float"],"description":"Length of the Vector."},{"kind":"function","name":"Length2D","available":"both","args":[],"returns":["float"],"description":"Length of the Vector in the XY plane."},{"kind":"function","name":"Normalized","available":"both","args":[],"returns":["Vector"],"description":"Returns the vector normalized."},{"kind":"function","name":"Lerp","available":"both","args":[{"name":"b","types":["Vector"]},{"name":"t","types":["float"],"description":"Interpolant"}],"returns":["Vector"],"description":"Linearly interpolates between two vectors.\\nThis is most commonly used to find a point some fraction of the way along a line between two endpoints.\\nSame as `this + (b - this) * t`."}]},{"kind":"function","name":"AddFOWViewer","available":"server","description":"Add temporary vision for a given team.","returns":["ViewerID"],"args":[{"name":"teamId","types":["DOTATeam_t"]},{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]},{"name":"duration","types":["float"]},{"name":"obstructedVision","types":["bool"]}]},{"kind":"function","name":"AngleDiff","available":"both","description":"Returns the number of degrees difference between two yaw angles.","returns":["float"],"args":[{"name":"arg1","types":["float"]},{"name":"arg2","types":["float"]}]},{"kind":"function","name":"AnglesToVector","available":"both","description":"Generate a vector given a QAngles.","returns":["Vector"],"args":[{"name":"arg1","types":["QAngle"]}]},{"kind":"function","name":"AppendToLogFile","available":"both","deprecated":"AppendToLogFile is deprecated. Print to the console for logging instead.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"ApplyDamage","available":"server","description":"Damage an npc.","returns":["float"],"args":[{"name":"options","types":["ApplyDamageOptions"]}]},{"kind":"function","name":"AxisAngleToQuaternion","available":"both","description":"Constructs a quaternion representing a rotation by angle around the specified vector axis.","returns":["Quaternion"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["float"]}]},{"kind":"function","name":"CalcClosestPointOnEntityOBB","available":"both","description":"Compute the closest point on the OBB of an entity.","returns":["Vector"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["Vector"]}]},{"kind":"function","name":"CalcDistanceBetweenEntityOBB","available":"both","description":"Compute the distance between two entity OBB. A negative return value indicates an input error. A return value of zero indicates that the OBBs are overlapping.","returns":["float"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"CalcDistanceToLineSegment2D","available":"both","returns":["float"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]}]},{"kind":"function","name":"CancelEntityIOEvents","available":"both","description":"Create all I/O events for a particular entity.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]}]},{"kind":"function","name":"CenterCameraOnUnit","available":"server","description":"Centers each players\' camera on a unit.","returns":["nil"],"args":[{"name":"playerId","types":["PlayerID"]},{"name":"unit","types":["CBaseEntity","nil"]}]},{"kind":"function","name":"ClearTeamCustomHealthbarColor","available":"server","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"CreateDamageInfo","available":"server","description":"Allocate a damageinfo object, used as an argument to TakeDamage(). Call DestroyDamageInfo( hInfo ) to free the object.","returns":["CTakeDamageInfo"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["handle"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["Vector"]},{"name":"arg5","types":["float"]},{"name":"arg6","types":["int"]}]},{"kind":"function","name":"CreateEffect","available":"both","description":"Pass table - Inputs: entity, effect.","returns":["bool"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"CreateHeroForPlayer","available":"server","description":"Creates a DOTA hero by its dota_npc_units.txt name and sets it as the given player\'s controlled hero.","returns":["CDOTA_BaseNPC_Hero"],"args":[{"name":"heroName","types":["string"]},{"name":"player","types":["CDOTAPlayerController"]}]},{"kind":"function","name":"CreateHTTPRequest","available":"both","description":"Create an HTTP request.","returns":["CScriptHTTPRequest"],"args":[{"name":"method","types":["string"]},{"name":"url","types":["string"]}]},{"kind":"function","name":"CreateHTTPRequestScriptVM","available":"both","description":"Create an HTTP request.","returns":["CScriptHTTPRequest"],"args":[{"name":"method","types":["string"]},{"name":"url","types":["string"]}]},{"kind":"function","name":"CreateIllusions","available":"server","description":"Create illusions of the passed hero that belong to passed unit using passed modifier data.","returns":[{"kind":"array","types":["CDOTA_BaseNPC_Hero"]}],"args":[{"name":"owner","types":["CBaseEntity"]},{"name":"heroToCopy","types":["CDOTA_BaseNPC_Hero"]},{"name":"modifierKeys","types":["CreateIllusionsModifierKeys"]},{"name":"numIllusions","types":["int"]},{"name":"padding","types":["int"]},{"name":"scramblePosition","types":["bool"]},{"name":"findClearSpace","types":["bool"]}]},{"kind":"function","name":"CreateItem","available":"server","description":"Create a DOTA item.","returns":["CDOTA_Item","nil"],"args":[{"name":"itemName","types":["string"]},{"name":"owner","types":["CDOTAPlayerController","nil"]},{"name":"purchaser","types":["CDOTAPlayerController","nil"]}]},{"kind":"function","name":"CreateItemOnPositionForLaunch","available":"server","description":"Create a physical item at a given location, can start in air (but doesn\'t clear a space).","returns":["CDOTA_Item_Physical"],"args":[{"name":"location","types":["Vector"]},{"name":"item","types":["CDOTA_Item","nil"]}]},{"kind":"function","name":"CreateItemOnPositionSync","available":"server","description":"Create a physical item at a given location.","returns":["CDOTA_Item_Physical"],"args":[{"name":"location","types":["Vector"]},{"name":"item","types":["CDOTA_Item","nil"]}]},{"kind":"function","name":"CreateModifierThinker","available":"server","description":"Create a modifier not associated with an NPC.","returns":["CDOTA_BaseNPC"],"args":[{"name":"caster","types":["CDOTA_BaseNPC","nil"]},{"name":"ability","types":["CDOTABaseAbility","nil"]},{"name":"modifierName","types":["string"]},{"name":"paramTable","types":["table","nil"]},{"name":"origin","types":["Vector"]},{"name":"teamNumber","types":["DOTATeam_t"]},{"name":"phantomBlocker","types":["bool"]}]},{"kind":"function","name":"CreateRune","available":"server","description":"Create a rune of the specified type.","returns":["CBaseAnimating"],"args":[{"name":"location","types":["Vector"]},{"name":"runeType","types":["DOTA_RUNES"]}]},{"kind":"function","name":"CreateSceneEntity","available":"server","description":"Create a scene entity to play the specified scene.","returns":["CSceneEntity"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"CreateTempTree","available":"server","description":"Create a temporary tree, uses a default tree model.","returns":["CBaseAnimating"],"args":[{"name":"location","types":["Vector"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"CreateTempTreeWithModel","available":"server","description":"Create a temporary tree, specifying the tree model name.","returns":["CBaseAnimating"],"args":[{"name":"location","types":["Vector"]},{"name":"duration","types":["float"]},{"name":"modelName","types":["string"]}]},{"kind":"function","name":"CreateTrigger","available":"server","description":"Creates and returns an AABB trigger.","returns":["CBaseTrigger"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]}]},{"kind":"function","name":"CreateTriggerRadiusApproximate","available":"server","description":"Creates and returns an AABB trigger thats bigger than the radius provided.","returns":["CBaseTrigger"],"args":[{"name":"vecOrigin","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"CreateUniformRandomStream","available":"both","description":"Creates a separate random number stream.","returns":["CScriptUniformRandomStream"],"args":[{"name":"seed","types":["int"]}]},{"kind":"function","name":"CreateUnitByName","available":"server","description":"Creates a unit by its dota_npc_units.txt name.\\nThe spawned unit will not be controllable by default. You can use unit.SetControllableByPlayer() to change this.\\nWarning: mass synchronous unit spawning may be slow. Prefer CreateUnitByNameAsync unless synchronous access is required.","returns":["CDOTA_BaseNPC"],"args":[{"name":"unitName","types":["string"]},{"name":"location","types":["Vector"]},{"name":"findClearSpace","types":["bool"]},{"name":"npcOwner","types":["CBaseEntity","nil"]},{"name":"entityOwner","description":"This entity will be returned by GetOwner() and GetOwnerEntity(). GetPlayerOwner() and GetPlayerOwnerID() will be automatically inferred from this entity. Can be changed after spawn using SetOwner(entity). When spawning heroes, passing CDOTAPlayerController makes hero use owned wearables.","types":["CBaseEntity","nil"]},{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"CreateUnitByNameAsync","available":"server","description":"Creates a unit by its dota_npc_units.txt name.\\nThe spawned unit will not be controllable by default. You can use unit.SetControllableByPlayer() to change this.","returns":["SpawnGroupHandle"],"args":[{"name":"unitName","types":["string"]},{"name":"location","types":["Vector"]},{"name":"findClearSpace","types":["bool"]},{"name":"npcOwner","types":["CBaseEntity","nil"]},{"name":"entityOwner","description":"This entity will be returned by GetOwner() and GetOwnerEntity(). GetPlayerOwner() and GetPlayerOwnerID() will be automatically inferred from this entity. Can be changed after spawn using SetOwner(entity). When spawning heroes, passing CDOTAPlayerController makes hero use owned wearables.","types":["CBaseEntity","nil"]},{"name":"team","types":["DOTATeam_t"]},{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]}]}]}]},{"kind":"function","name":"CreateUnitFromTable","available":"server","description":"Creates a DOTA unit by its dota_npc_units.txt name from a table of entity key values and a position to spawn at.","returns":["CDOTA_BaseNPC"],"args":[{"name":"options","types":["CreateUnitFromTableOptions"]},{"name":"location","types":["Vector"]}]},{"kind":"function","name":"CrossVectors","available":"both","description":"Cross product between two vectors.","returns":["Vector"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]}]},{"kind":"function","name":"cvar_getf","available":"both","description":"Gets the value of the given cvar, as a float.","returns":["float"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"cvar_setf","available":"both","description":"Sets the value of the given cvar, as a float.","returns":["bool"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["float"]}]},{"kind":"function","name":"DebugBreak","available":"both","description":"Breaks in the debugger.","returns":["nil"],"args":[]},{"kind":"function","name":"DebugCreateUnit","available":"server","description":"Creates a test unit controllable by the specified player.","returns":["int"],"args":[{"name":"playerOwner","types":["CDOTAPlayerController"]},{"name":"unitName","types":["string"]},{"name":"team","types":["DOTATeam_t"]},{"name":"arg4","types":["bool"]},{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]}]}]}]},{"kind":"function","name":"DebugDrawBox","available":"both","description":"Draw a debug overlay box.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]},{"name":"arg8","types":["float"]}]},{"kind":"function","name":"DebugDrawBoxDirection","available":"both","description":"Draw a debug forward box.","returns":["nil"],"args":[{"name":"cent","types":["Vector"]},{"name":"min","types":["Vector"]},{"name":"max","types":["Vector"]},{"name":"forward","types":["Vector"]},{"name":"rgb","types":["Vector"]},{"name":"a","types":["float"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DebugDrawCircle","available":"both","description":"Draw a debug circle.","returns":["nil"],"args":[{"name":"center","types":["Vector"]},{"name":"rgb","types":["Vector"]},{"name":"a","types":["float"]},{"name":"rad","types":["float"]},{"name":"ztest","types":["bool"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DebugDrawClear","available":"both","description":"Try to clear all the debug overlay info.","returns":["nil"],"args":[]},{"kind":"function","name":"DebugDrawLine","available":"both","description":"Draw a debug overlay line.","returns":["nil"],"args":[{"name":"origin","types":["Vector"]},{"name":"target","types":["Vector"]},{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]},{"name":"ztest","types":["bool"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DebugDrawLine_vCol","available":"both","description":"Draw a debug line using color vec.","returns":["nil"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["bool"]},{"name":"arg5","types":["float"]}]},{"kind":"function","name":"DebugDrawScreenTextLine","available":"both","description":"Draw text with a line offset.","returns":["nil"],"args":[{"name":"x","types":["float"]},{"name":"y","types":["float"]},{"name":"lineOffset","types":["int"]},{"name":"text","types":["string"]},{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]},{"name":"a","types":["int"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DebugDrawSphere","available":"both","description":"Draw a debug sphere.","returns":["nil"],"args":[{"name":"center","types":["Vector"]},{"name":"rgb","types":["Vector"]},{"name":"a","types":["float"]},{"name":"rad","types":["float"]},{"name":"ztest","types":["bool"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DebugDrawText","available":"both","description":"Draw text in 3d.","returns":["nil"],"args":[{"name":"origin","types":["Vector"]},{"name":"text","types":["string"]},{"name":"viewCheck","types":["bool"]},{"name":"duration","types":["float"]}]},{"kind":"function","name":"DebugScreenTextPretty","available":"both","description":"Draw pretty debug text.","returns":["nil"],"args":[{"name":"x","types":["float"]},{"name":"y","types":["float"]},{"name":"lineOffset","types":["int"]},{"name":"text","types":["string"]},{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]},{"name":"a","types":["int"]},{"name":"duration","types":["float"]},{"name":"font","types":["string"]},{"name":"size","types":["int"]},{"name":"bold","types":["bool"]}]},{"kind":"function","name":"DeepPrintTable","description":"Print out a table (and subtables) to the console.","available":"both","args":[{"name":"table","types":["table","nil"]}],"returns":["nil"]},{"kind":"function","name":"DestroyDamageInfo","available":"server","description":"Free a damageinfo object that was created with CreateDamageInfo().","returns":["nil"],"args":[{"name":"damageInfo","types":["CTakeDamageInfo"]}]},{"kind":"function","name":"DisconnectClient","available":"server","description":"Kick a specific player from the game.","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["bool"]}]},{"kind":"function","name":"DoCleaveAttack","available":"server","returns":["int"],"args":[{"name":"attacker","types":["CDOTA_BaseNPC"]},{"name":"target","types":["CDOTA_BaseNPC"]},{"name":"ability","types":["CDOTABaseAbility","nil"]},{"name":"damage","types":["float"]},{"name":"startRadius","types":["float"]},{"name":"endRadius","types":["float"]},{"name":"distance","types":["float"]},{"name":"effectName","types":["string"]}]},{"kind":"function","name":"DoEntFire","available":"server","description":"Generate and entity i/o event.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["handle"]},{"name":"arg6","types":["handle"]}]},{"kind":"function","name":"DoEntFireByInstanceHandle","available":"server","description":"Generate and entity i/o event.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["handle"]},{"name":"arg6","types":["handle"]}]},{"kind":"function","name":"DoIncludeScript","available":"both","description":"Execute a script (internal).","returns":["bool"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"DoScriptAssert","available":"both","description":"Asserts the passed in value. Prints out a message and brings up the assert dialog.","returns":["nil"],"args":[{"name":"arg1","types":["bool"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"DOTA_SpawnMapAtPosition","available":"server","description":"Spawn a .vmap at the target location.","returns":["SpawnGroupHandle"],"args":[{"name":"mapName","description":"A map name without extension, relative to \\"maps\\" directory.","types":["string"]},{"name":"location","description":"The value of x and y must be multiple the grid size 64.\\nTo avoid GridNav conflicts, tiles on these coordinates on the base map must be empty.","types":["Vector"]},{"name":"deferCompletion","description":"If true, to finish map loading you need to call ManuallyTriggerSpawnGroupCompletion(spawnGroupHandle).","types":["bool"]},{"name":"onReadyToSpawn","description":"Called only when deferCompletion is true.","types":[{"kind":"function","returns":["nil"],"args":[{"name":"spawnGroupHandle","types":["SpawnGroupHandle"]}]}]},{"name":"onSpawnComplete","types":[{"kind":"function","returns":["nil"],"args":[{"name":"spawnGroupHandle","types":["SpawnGroupHandle"]}]}]},{"name":"context","types":["table","nil"]}]},{"kind":"function","name":"DotProduct","available":"server","returns":["float"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]}]},{"kind":"function","name":"DoUniqueString","available":"both","description":"Generate a string guaranteed to be unique across the life of the script VM, with an optional root string. Useful for adding data to tables when not sure what keys are already in use in that table.","returns":["string"],"args":[{"name":"seed","types":["string"]}]},{"kind":"function","name":"DropNeutralItemAtPositionForHero","available":"server","description":"Drop a neutral item for the team of the hero at the given tier.","returns":["CDOTA_Item_Physical"],"args":[{"name":"itemName","description":"Can be any item name, it does not have to be neutral.","types":["string"]},{"name":"location","types":["Vector"]},{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"tier","description":"Zero-based tier number.","types":["int"]},{"name":"arg5","types":["bool"]}]},{"kind":"function","name":"Dynamic_Wrap","description":"A function to re-lookup a function by name every time.","available":"both","args":[{"name":"context","types":["table"]},{"name":"name","types":["string"]}],"returns":["unknown"]},{"kind":"function","name":"EmitAnnouncerSound","available":"server","description":"Emit an announcer sound for all players.","returns":["nil"],"args":[{"name":"soundName","types":["string"]}]},{"kind":"function","name":"EmitAnnouncerSoundForPlayer","available":"server","description":"Emit an announcer sound for a player.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"playerId","types":["PlayerID"]}]},{"kind":"function","name":"EmitAnnouncerSoundForTeam","available":"server","description":"Emit an announcer sound for a team.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"EmitAnnouncerSoundForTeamOnLocation","available":"server","description":"Emit an announcer sound for a team at a specific location.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"team","types":["DOTATeam_t"]},{"name":"location","types":["Vector"]}]},{"kind":"function","name":"EmitGlobalSound","available":"server","description":"Play named sound for all players.","returns":["nil"],"args":[{"name":"soundName","types":["string"]}]},{"kind":"function","name":"EmitSoundOn","available":"both","description":"Play named sound on Entity.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"entity","types":["CBaseEntity"]}]},{"kind":"function","name":"EmitSoundOnClient","available":"both","description":"Play named sound only on the client for the passed in player.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"EmitSoundOnEntityForPlayer","available":"server","description":"Emit a sound on an entity for only a specific player.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]},{"name":"arg3","types":["int"]}]},{"kind":"function","name":"EmitSoundOnLocationForAllies","available":"server","description":"Emit a sound on a location from a unit, only for players allied with that unit.","returns":["nil"],"args":[{"name":"location","types":["Vector"]},{"name":"soundName","types":["string"]},{"name":"caster","types":["CBaseEntity"]}]},{"kind":"function","name":"EmitSoundOnLocationForPlayer","available":"server","description":"Emit a sound on a location for only a specific player.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["int"]}]},{"kind":"function","name":"EmitSoundOnLocationWithCaster","available":"server","description":"Emit a sound on a location from a unit.","returns":["nil"],"args":[{"name":"location","types":["Vector"]},{"name":"soundName","types":["string"]},{"name":"caster","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"EntIndexToHScript","available":"both","description":"Turn an entity index integer to an HScript representing that entity\'s script instance.","returns":["CBaseEntity","nil"],"args":[{"name":"entityIndex","types":["EntityIndex"]}]},{"kind":"function","name":"ExecuteOrderFromTable","available":"server","description":"Issue an order from a script table.","returns":["nil"],"args":[{"name":"order","types":["ExecuteOrderOptions"]}]},{"kind":"function","name":"ExponentialDecay","available":"both","description":"Smooth curve decreasing slower as it approaches zero.","returns":["float"],"args":[{"name":"arg1","types":["float"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["float"]}]},{"kind":"function","name":"FindClearRandomPositionAroundUnit","available":"server","description":"Finds a clear random position around a given target unit, using the target unit\'s padded collision radius.","returns":["bool"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["handle"]},{"name":"arg3","types":["int"]}]},{"kind":"function","name":"FindClearSpaceForUnit","available":"server","description":"Place a unit somewhere not already occupied.","returns":["bool"],"args":[{"name":"unit","types":["CDOTA_BaseNPC"]},{"name":"location","types":["Vector"]},{"name":"arg3","types":["bool"]}]},{"kind":"function","name":"FindSpawnEntityForTeam","available":"server","description":"Find a spawn point for the given team.","returns":["CBaseEntity","nil"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"FindUnitsInLine","available":"server","description":"Find units that intersect the given line with the given flags.","returns":[{"kind":"array","types":["CDOTA_BaseNPC"]}],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"startPos","types":["Vector"]},{"name":"endPos","types":["Vector"]},{"name":"cacheUnit","types":["CBaseEntity","nil"]},{"name":"width","types":["float"]},{"name":"teamFilter","types":["DOTA_UNIT_TARGET_TEAM"]},{"name":"typeFilter","types":["DOTA_UNIT_TARGET_TYPE"]},{"name":"flagFilter","types":["DOTA_UNIT_TARGET_FLAGS"]}]},{"kind":"function","name":"FindUnitsInRadius","available":"server","description":"Finds the units in a given radius with the given flags.","returns":[{"kind":"array","types":["CDOTA_BaseNPC"]}],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"location","types":["Vector"]},{"name":"cacheUnit","types":["CBaseEntity","nil"]},{"name":"radius","types":["float"]},{"name":"teamFilter","types":["DOTA_UNIT_TARGET_TEAM"]},{"name":"typeFilter","types":["DOTA_UNIT_TARGET_TYPE"]},{"name":"flagFilter","types":["DOTA_UNIT_TARGET_FLAGS"]},{"name":"order","types":["FindOrder"]},{"name":"canGrowCache","types":["bool"]}]},{"kind":"function","name":"FireEntityIOInputNameOnly","available":"both","description":"Fire Entity\'s Action Input w/no data.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"FireEntityIOInputString","available":"both","description":"Fire Entity\'s Action Input with passed String - you own the memory.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]}]},{"kind":"function","name":"FireEntityIOInputVec","available":"both","description":"Fire Entity\'s Action Input with passed Vector - you own the memory.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["Vector"]}]},{"kind":"function","name":"FireGameEvent","available":"both","description":"Fire a game event.","returns":["nil"],"args":[{"name":"eventName","types":["string"]},{"name":"eventData","types":["table"]}]},{"kind":"function","name":"FireGameEventLocal","available":"both","description":"Fire a game event without broadcasting to the client.","returns":["nil"],"args":[{"name":"eventName","types":["string"]},{"name":"eventData","types":["table"]}]},{"kind":"function","name":"FrameTime","available":"both","description":"Get the time spent on the server in the last frame.","returns":["float"],"args":[]},{"kind":"function","name":"GetAbilityKeyValuesByName","available":"both","description":"Get ability data by ability name.","returns":["table"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"GetAbilityTextureNameForAbility","available":"both","description":"Gets the ability texture name for an ability.","returns":["string"],"args":[{"name":"abilityName","types":["string"]}]},{"kind":"function","name":"GetActiveSpawnGroupHandle","available":"both","description":"Returns the currently active spawn group handle.","returns":["SpawnGroupHandle"],"args":[]},{"kind":"function","name":"GetDedicatedServerKey","available":"server","deprecated":"This function is unsafe. Prefer using `GetDedicatedServerKeyV2` instead.","returns":["string"],"args":[{"name":"version","types":["string"]}]},{"kind":"function","name":"GetDedicatedServerKeyV2","available":"server","returns":["string"],"args":[{"name":"version","types":["string"]}]},{"kind":"function","name":"GetEntityIndexForTreeId","available":"server","description":"Get the enity index for a tree id specified as the entindex_target of a DOTA_UNIT_ORDER_CAST_TARGET_TREE.","returns":["EntityIndex"],"args":[{"name":"treeId","types":["uint"]}]},{"kind":"function","name":"GetFrameCount","available":"both","description":"Returns the engines current frame count.","returns":["int"],"args":[]},{"kind":"function","name":"GetGroundHeight","available":"server","returns":["float"],"args":[{"name":"location","types":["Vector"]},{"name":"unitHull","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"GetGroundPosition","available":"server","description":"Returns the supplied position moved to the ground. Second parameter is an NPC for measuring movement collision hull offset.","returns":["Vector"],"args":[{"name":"location","types":["Vector"]},{"name":"unitHull","types":["CDOTA_BaseNPC","nil"]}]},{"kind":"function","name":"GetItemCost","available":"server","description":"Get the cost of an item by name.","returns":["int"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"GetItemDefOwnedCount","available":"server","returns":["int"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["int"]}]},{"kind":"function","name":"GetItemDefQuantity","available":"server","returns":["int"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["int"]}]},{"kind":"function","name":"GetListenServerHost","available":"both","description":"Get the local player on a listen server.","returns":["CDOTAPlayerController"],"args":[]},{"kind":"function","name":"GetLobbyEventGameDetails","available":"server","returns":["table"],"args":[]},{"kind":"function","name":"GetLocalPlayerID","available":"client","description":"Get the local player ID.","returns":["PlayerID"],"args":[]},{"kind":"function","name":"GetLocalPlayerTeam","available":"client","description":"Get the local player team.","returns":["DOTATeam_t"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"GetMapName","available":"both","description":"Get the name of the map.","returns":["string"],"args":[]},{"kind":"function","name":"GetMaxOutputDelay","available":"both","description":"Get the longest delay for all events attached to an output.","returns":["float"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"GetPhysAngularVelocity","available":"both","description":"Get Angular Velocity for VPHYS or normal object. Returns a vector of the axis of rotation, multiplied by the degrees of rotation per second.","returns":["Vector"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"GetPhysVelocity","available":"both","description":"Get Velocity for VPHYS or normal object.","returns":["Vector"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"GetPotentialNeutralItemDrop","available":"server","description":"Given the item tier and the team, roll for the name of a valid neutral item drop, considering previous drops and consumables.","returns":["string"],"args":[{"name":"tier","types":["int"]},{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetSystemDate","available":"server","description":"Get the current real world date.","returns":["string"],"args":[]},{"kind":"function","name":"GetSystemTime","available":"server","description":"Get the current real world time.","returns":["string"],"args":[]},{"kind":"function","name":"GetSystemTimeMS","available":"server","description":"Get system time in milliseconds.","returns":["double"],"args":[]},{"kind":"function","name":"GetTargetAOELocation","available":"server","returns":["Vector"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["Vector"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]}]},{"kind":"function","name":"GetTargetLinearLocation","available":"server","returns":["Vector"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["Vector"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["int"]}]},{"kind":"function","name":"GetTeamHeroKills","available":"server","returns":["int"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetTeamName","available":"server","returns":["string"],"args":[{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"GetTreeIdForEntityIndex","available":"server","description":"Given and entity index of a tree, get the tree id for use for use with with unit orders.","returns":["int"],"args":[{"name":"entityIndex","types":["EntityIndex"]}]},{"kind":"function","name":"GetUnitKeyValuesByName","available":"both","description":"Get unit data by ability name.","returns":["table"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"GetWorldMaxX","available":"server","description":"Gets the world\'s maximum X position.","returns":["float"],"args":[]},{"kind":"function","name":"GetWorldMaxY","available":"server","description":"Gets the world\'s maximum Y position.","returns":["float"],"args":[]},{"kind":"function","name":"GetWorldMinX","available":"server","description":"Gets the world\'s minimum X position.","returns":["float"],"args":[]},{"kind":"function","name":"GetWorldMinY","available":"server","description":"Gets the world\'s minimum Y position.","returns":["float"],"args":[]},{"kind":"function","name":"GetXPNeededToReachNextLevel","available":"server","description":"Get amount of XP required to reach the next level.","returns":["int"],"args":[{"name":"level","types":["int"]}]},{"kind":"function","name":"HeroMaxLevel","available":"server","description":"Max out a hero\'s level and give them all appropriate abilities and talents.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"InitLogFile","available":"both","deprecated":"InitLogFile is deprecated. Print to the console for logging instead.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"IsClient","available":"both","description":"Returns true if this is lua running from the client.dll.","returns":["bool"],"args":[]},{"kind":"function","name":"IsDedicatedServer","available":"both","description":"Returns true if this server is a dedicated server.","returns":["bool"],"args":[]},{"kind":"function","name":"IsInToolsMode","available":"both","description":"Returns true if this is lua running within tools mode.","returns":["bool"],"args":[]},{"kind":"function","name":"IsLocationVisible","available":"server","description":"Ask fog of war if a location is visible to a certain team.","returns":["bool"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"location","types":["Vector"]}]},{"kind":"function","name":"IsMangoTree","available":"server","description":"Is this entity a mango tree? (hEntity).","returns":["bool"],"args":[{"name":"entity","types":["CBaseEntity"]}]},{"kind":"function","name":"IsMarkedForDeletion","available":"both","description":"Returns true if the entity is valid and marked for deletion.","returns":["bool"],"args":[{"name":"entity","types":["CBaseEntity"]}]},{"kind":"function","name":"IsServer","available":"both","description":"Returns true if this is lua running from the server.dll.","returns":["bool"],"args":[]},{"kind":"function","name":"IsUnitInValidPosition","available":"server","description":"Returns true if the unit is in a valid position in the gridnav.","returns":["bool"],"args":[{"name":"unit","types":["CBaseEntity"]}]},{"kind":"function","name":"IsValidEntity","available":"both","description":"Checks to see if the given hScript is a valid entity.","returns":["bool"],"args":[{"name":"entity","types":["table","nil"]}]},{"kind":"function","name":"LerpVectors","available":"both","description":"Lerp between two vectors by a float factor returning new vector.","returns":["Vector"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]}]},{"kind":"function","name":"LimitPathingSearchDepth","available":"server","description":"Set the limit on the pathfinding search space.","returns":["nil"],"args":[{"name":"arg1","types":["float"]}]},{"kind":"function","name":"LinkLuaModifier","available":"both","description":"Link a lua-defined modifier with the associated class.","returns":["nil"],"args":[{"name":"className","types":["string"]},{"name":"filePath","types":["string"]},{"name":"luaModifierType","types":["LuaModifierType"]}]},{"kind":"function","name":"ListenToGameEvent","available":"both","description":"Register as a listener for a game event from script.","returns":["EventListenerID"],"args":[{"name":"eventName","types":["string"]},{"name":"listener","types":[{"kind":"function","returns":["nil"],"args":[{"name":"event","types":["table"]}]}]},{"name":"context","types":["table","nil"]}]},{"kind":"function","name":"LoadKeyValues","available":"both","description":"Creates a table from the specified keyvalues text file.","returns":["table"],"args":[{"name":"filePath","types":["string"]}]},{"kind":"function","name":"LoadKeyValuesFromString","available":"both","description":"Creates a table from the specified keyvalues string.","returns":["table"],"args":[{"name":"kvString","types":["string"]}]},{"kind":"function","name":"LocalTime","available":"both","description":"Get the current local time.","returns":["LocalTime"],"args":[]},{"kind":"function","name":"MakeStringToken","available":"both","description":"Checks to see if the given hScript is a valid entity.","returns":["int"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"ManuallyTriggerSpawnGroupCompletion","available":"both","description":"Triggers the creation of entities in a manually-completed spawn group.","returns":["nil"],"args":[{"name":"handle","types":["SpawnGroupHandle"]}]},{"kind":"function","name":"MinimapEvent","available":"server","description":"Start a minimap event.","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"entity","types":["CBaseEntity"]},{"name":"xCoord","types":["int"]},{"name":"yCoord","types":["int"]},{"name":"eventType","types":["DOTAMinimapEvent_t"]},{"name":"eventDuration","types":["int"]}]},{"kind":"function","name":"Msg","available":"both","description":"Print a message.","returns":["nil"],"args":[{"name":"message","types":["string"]}]},{"kind":"function","name":"PauseGame","available":"server","description":"Pause or unpause the game.","returns":["nil"],"args":[{"name":"paused","types":["bool"]}]},{"kind":"function","name":"Plat_FloatTime","available":"both","description":"Get the current float time from the engine.","returns":["float"],"args":[]},{"kind":"function","name":"PlayerInstanceFromIndex","available":"both","description":"Get a script instance of a player by index.","returns":["CDOTAPlayerController","nil"],"args":[{"name":"entityIndex","types":["EntityIndex"]}]},{"kind":"function","name":"PrecacheEntityFromTable","available":"both","description":"Precache an entity from KeyValues in table.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]},{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"PrecacheEntityListFromTable","available":"both","description":"Precache a list of entity KeyValues tables.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"PrecacheItemByNameAsync","available":"server","description":"Asynchronously precaches a DOTA item by its dota_npc_items.txt name, provides a callback when it\'s finished.","returns":["nil"],"args":[{"name":"itemName","types":["string"]},{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"precacheId","types":["int"]}]}]}]},{"kind":"function","name":"PrecacheItemByNameSync","available":"server","description":"Precaches a DOTA item by its dota_npc_items.txt name.","returns":["nil"],"args":[{"name":"itemName","types":["string"]},{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"PrecacheModel","available":"server","description":"Manually precache a single model.","returns":["nil"],"args":[{"name":"modelName","types":["string"]},{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"PrecacheResource","available":"server","description":"Manually precache a single resource.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"PrecacheUnitByNameAsync","available":"server","description":"Asynchronously precaches a DOTA unit by its dota_npc_units.txt name, provides a callback when it\'s finished.","returns":["nil"],"args":[{"name":"unitName","types":["string"]},{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"precacheId","types":["int"]}]}]},{"name":"playerId","types":["PlayerID","nil"]}]},{"kind":"function","name":"PrecacheUnitByNameSync","available":"server","description":"Precaches a DOTA unit by its dota_npc_units.txt name.","returns":["nil"],"args":[{"name":"unitName","types":["string"]},{"name":"context","types":["CScriptPrecacheContext"]},{"name":"playerId","types":["PlayerID","nil"]}]},{"kind":"function","name":"PrecacheUnitFromTableAsync","available":"server","description":"Precaches a DOTA unit from a table of entity key values.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"callback","types":[{"kind":"function","returns":["nil"],"args":[{"name":"precacheId","types":["int"]}]}]}]},{"kind":"function","name":"PrecacheUnitFromTableSync","available":"server","description":"Precaches a DOTA unit from a table of entity key values.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"context","types":["CScriptPrecacheContext"]}]},{"kind":"function","name":"PrintLinkedConsoleMessage","available":"both","description":"Print a console message with a linked console command.","returns":["nil"],"args":[{"name":"message","types":["string"]},{"name":"tooltip","types":["string"]}]},{"kind":"function","name":"QSlerp","available":"both","description":"Spherical lerp of angle from->to based on time.","returns":["QAngle"],"args":[{"name":"from_angle","types":["QAngle"]},{"name":"to_angle","types":["QAngle"]},{"name":"time","types":["float"]}]},{"kind":"function","name":"RandomFloat","available":"both","description":"Get a random float within a range.","returns":["float"],"args":[{"name":"min","types":["float"]},{"name":"max","types":["float"]}]},{"kind":"function","name":"RandomInt","available":"both","description":"Get a random int within a range.","returns":["int"],"args":[{"name":"min","types":["int"]},{"name":"max","types":["int"]}]},{"kind":"function","name":"RandomVector","available":"server","description":"Get a random 2D vector of the given length.","returns":["Vector"],"args":[{"name":"length","types":["float"]}]},{"kind":"function","name":"RegisterCustomAnimationScriptForModel","available":"server","description":"Register a custom animation script to run when a model loads.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"RegisterSpawnGroupFilterProxy","available":"both","description":"Create a C proxy for a script-based spawn group filter.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"ReloadMOTD","available":"both","description":"Reloads the MotD file.","returns":["nil"],"args":[]},{"kind":"function","name":"RemapValClamped","available":"server","returns":["float"],"args":[{"name":"arg1","types":["float"]},{"name":"arg2","types":["float"]},{"name":"arg3","types":["float"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["float"]}]},{"kind":"function","name":"RemoveFOWViewer","available":"server","description":"Remove temporary vision for a given team.","returns":["nil"],"args":[{"name":"teamId","types":["DOTATeam_t"]},{"name":"viewerId","types":["ViewerID"]}]},{"kind":"function","name":"RemoveSpawnGroupFilterProxy","available":"both","description":"Remove the C proxy for a script-based spawn group filter.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"ResolveNPCPositions","available":"server","description":"Check and fix units that have been assigned a position inside collision radius of other NPCs.","returns":["nil"],"args":[{"name":"location","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"RollPercentage","available":"server","description":"Rolls a number from 1 to 100 and returns true if the roll is less than or equal to the number specified.","returns":["bool"],"args":[{"name":"successPercentage","types":["int"]}]},{"kind":"function","name":"RollPseudoRandomPercentage","available":"server","returns":["bool"],"args":[{"name":"chance","types":["uint"]},{"name":"pseudoRandomId","description":"Any number can be specified. Using DOTA_PSEUDO_RANDOM_NONE makes it act as a pure RNG.","types":["PseudoRandom"]},{"name":"unit","types":["CDOTA_BaseNPC"]}]},{"kind":"function","name":"RotateOrientation","available":"both","description":"Rotate a QAngle by another QAngle.","returns":["QAngle"],"args":[{"name":"arg1","types":["QAngle"]},{"name":"arg2","types":["QAngle"]}]},{"kind":"function","name":"RotatePosition","available":"both","description":"Rotate a Vector around a point.","returns":["Vector"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["QAngle"]},{"name":"arg3","types":["Vector"]}]},{"kind":"function","name":"RotateQuaternionByAxisAngle","available":"both","description":"Rotates a quaternion by the specified angle around the specified vector axis.","returns":["Quaternion"],"args":[{"name":"arg1","types":["Quaternion"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]}]},{"kind":"function","name":"RotationDelta","available":"both","description":"Find the delta between two QAngles.","returns":["QAngle"],"args":[{"name":"arg1","types":["QAngle"]},{"name":"arg2","types":["QAngle"]}]},{"kind":"function","name":"RotationDeltaAsAngularVelocity","available":"both","description":"Converts delta QAngle to an angular velocity Vector.","returns":["Vector"],"args":[{"name":"arg1","types":["QAngle"]},{"name":"arg2","types":["QAngle"]}]},{"kind":"function","name":"rr_AddDecisionRule","available":"both","description":"Add a rule to the decision database.","returns":["bool"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"rr_CommitAIResponse","available":"both","description":"Commit the result of QueryBestResponse back to the given entity to play. Call with params.","returns":["bool"],"args":[{"name":"entity","types":["handle"]},{"name":"airesponse","types":["handle"]}]},{"kind":"function","name":"rr_GetResponseTargets","available":"both","description":"Retrieve a table of all available expresser targets, in the form { name : handle, name: handle }.","returns":["handle"],"args":[]},{"kind":"function","name":"rr_QueryBestResponse","available":"both","description":"Params: (entity, query) : tests \'query\' against entity\'s response system and returns the best response found (or null if none found).","returns":["bool"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["handle"]},{"name":"arg3","types":["handle"]}]},{"kind":"function","name":"Say","available":"server","description":"Have Entity say string, and teamOnly or not.","returns":["nil"],"args":[{"name":"entity","types":["CBaseEntity","nil"]},{"name":"message","types":["string"]},{"name":"teamOnly","types":["bool"]}]},{"kind":"function","name":"ScreenShake","available":"both","description":"Start a screenshake.","returns":["nil"],"args":[{"name":"center","types":["Vector"]},{"name":"amplitude","types":["float"]},{"name":"frequency","types":["float"]},{"name":"duration","types":["float"]},{"name":"radius","types":["float"]},{"name":"command","description":"SHAKE_START = 0, SHAKE_STOP = 1","types":[{"kind":"literal","value":0},{"kind":"literal","value":1}]},{"name":"airShake","types":["bool"]}]},{"kind":"function","name":"SendOverheadEventMessage","available":"server","returns":["nil"],"args":[{"name":"sendToPlayer","types":["CDOTAPlayerController","nil"]},{"name":"messageType","types":["DOTA_OVERHEAD_ALERT"]},{"name":"targetEntity","types":["CDOTA_BaseNPC"]},{"name":"value","types":["int"]},{"name":"sourcePlayer","types":["CDOTAPlayerController","nil"]}]},{"kind":"function","name":"SendToConsole","available":"both","description":"Send a string to the console as a client command.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SendToServerConsole","available":"server","description":"Send a string to the console as a server command.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetOpvarFloatAll","available":"both","description":"Sets an opvar value for all players.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["float"]}]},{"kind":"function","name":"SetOpvarFloatPlayer","available":"both","description":"Sets an opvar value for a single player.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["float"]},{"name":"arg5","types":["handle"]}]},{"kind":"function","name":"SetPhysAngularVelocity","available":"both","description":"Set Angular Velocity for VPHYS or normal object, from a vector of the axis of rotation, multiplied by the degrees of rotation per second.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["Vector"]}]},{"kind":"function","name":"SetQuestName","available":"both","description":"Set the current quest name.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SetQuestPhase","available":"both","description":"Set the current quest phase.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"SetRenderingEnabled","available":"both","deprecated":"Instantly crashes the game.","description":"Set rendering on/off for an ehandle.","returns":["nil"],"args":[{"name":"arg1","types":["ehandle"]},{"name":"arg2","types":["bool"]}]},{"kind":"function","name":"SetTeamCustomHealthbarColor","available":"server","returns":["nil"],"args":[{"name":"team","types":["DOTATeam_t"]},{"name":"r","types":["int"]},{"name":"g","types":["int"]},{"name":"b","types":["int"]}]},{"kind":"function","name":"ShowCustomHeaderMessage","available":"server","description":"Supports localized strings - %s1 = PlayerName, %s2 = Value, %s3 = TeamName.","returns":["nil"],"args":[{"name":"message","types":["string"]},{"name":"playerId","types":["PlayerID"]},{"name":"value","types":["int"]},{"name":"time","types":["float"]}]},{"kind":"function","name":"ShowGenericPopup","available":"server","description":"Show a generic popup dialog for all players.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["string"]},{"name":"arg5","types":["int"]}]},{"kind":"function","name":"ShowGenericPopupToPlayer","available":"server","description":"Show a generic popup dialog to a specific player.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["string"]},{"name":"arg4","types":["string"]},{"name":"arg5","types":["string"]},{"name":"arg6","types":["int"]}]},{"kind":"function","name":"ShowMessage","available":"server","description":"Print a hud message on all clients.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"SpawnDOTAShopTriggerRadiusApproximate","available":"server","returns":["CDOTA_ShopTrigger"],"args":[{"name":"origin","types":["Vector"]},{"name":"radius","types":["float"]}]},{"kind":"function","name":"SpawnEffigyOfUnitOrModel","available":"server","description":"Spawn an effigy of the target unit.","returns":["handle"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["Vector"]},{"name":"arg4","types":["Vector"]},{"name":"arg5","types":["float"]},{"name":"arg6","types":["float"]},{"name":"arg7","types":["int"]}]},{"kind":"function","name":"SpawnEntityFromTableAsynchronous","available":"both","description":"Asynchronously spawns a single entity from a table.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]},{"name":"arg3","types":["handle"]},{"name":"arg4","types":["handle"]}]},{"kind":"function","name":"SpawnEntityFromTableSynchronous","available":"both","description":"Synchronously spawns a single entity from a table.","returns":["CBaseEntity"],"args":[{"name":"baseclass","types":["string"]},{"name":"data","types":["table"]}]},{"kind":"function","name":"SpawnEntityGroupFromTable","available":"both","description":"Hierarchically spawn an entity group from a set of spawn tables.","returns":["bool"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["bool"]},{"name":"arg3","types":["handle"]}]},{"kind":"function","name":"SpawnEntityListFromTableAsynchronous","available":"both","description":"Asynchronously spawn an entity group from a list of spawn tables. A callback will be triggered when the spawning is complete.","returns":["int"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"SpawnEntityListFromTableSynchronous","available":"both","description":"Synchronously spawn an entity group from a list of spawn tables.","returns":["handle"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"SpawnMangoTree","available":"server","description":"Spawn a mango tree.","returns":["handle"],"args":[{"name":"pos","types":["Vector"]},{"name":"team","types":["int"]},{"name":"duration","types":["float"]},{"name":"mangoInterval","types":["float"]},{"name":"initialMangoes","types":["int"]}]},{"kind":"function","name":"SplineQuaternions","available":"both","description":"Very basic interpolation of v0 to v1 over t on [0,1].","returns":["Quaternion"],"args":[{"name":"arg1","types":["Quaternion"]},{"name":"arg2","types":["Quaternion"]},{"name":"arg3","types":["float"]}]},{"kind":"function","name":"SplineVectors","available":"both","description":"Very basic interpolation of v0 to v1 over t on [0,1].","returns":["Vector"],"args":[{"name":"arg1","types":["Vector"]},{"name":"arg2","types":["Vector"]},{"name":"arg3","types":["float"]}]},{"kind":"function","name":"StartSoundEvent","available":"both","description":"Start a sound event.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"StartSoundEventFromPosition","available":"both","description":"Start a sound event from position.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"position","types":["Vector"]}]},{"kind":"function","name":"StartSoundEventFromPositionReliable","available":"both","description":"Start a sound event from position with reliable delivery.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"position","types":["Vector"]}]},{"kind":"function","name":"StartSoundEventFromPositionUnreliable","available":"both","description":"Start a sound event from position with optional delivery.","returns":["nil"],"args":[{"name":"soundName","types":["string"]},{"name":"position","types":["Vector"]}]},{"kind":"function","name":"StartSoundEventReliable","available":"both","description":"Start a sound event with reliable delivery.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"StartSoundEventUnreliable","available":"both","description":"Start a sound event with optional delivery.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"StopEffect","available":"both","description":"Pass entity and effect name.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]},{"name":"arg2","types":["string"]}]},{"kind":"function","name":"StopGlobalSound","available":"server","description":"Stop named sound for all players.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"StopListeningToAllGameEvents","available":"both","description":"Stop listening to all game events within a specific context.","returns":["nil"],"args":[{"name":"arg1","types":["handle"]}]},{"kind":"function","name":"StopListeningToGameEvent","available":"both","description":"Stop listening to a particular game event.","returns":["bool"],"args":[{"name":"listenerId","types":["EventListenerID"]}]},{"kind":"function","name":"StopSoundEvent","available":"both","description":"Stops a sound event with optional delivery.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"StopSoundOn","available":"both","description":"Stop named sound on Entity.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["handle"]}]},{"kind":"function","name":"Time","available":"both","description":"Get the current server time.","returns":["float"],"args":[]},{"kind":"function","name":"TraceCollideable","available":"both","returns":["bool"],"args":[{"name":"query","types":["TraceCollideableInputs"]}]},{"kind":"function","name":"TraceHull","available":"both","returns":["bool"],"args":[{"name":"query","types":["TraceHullInputs"]}]},{"kind":"function","name":"TraceLine","available":"both","returns":["bool"],"args":[{"name":"query","types":["TraceLineInputs"]}]},{"kind":"function","name":"UnitFilter","available":"both","description":"Check if a unit passes a set of filters.","returns":["UnitFilterResult"],"args":[{"name":"npc","types":["CDOTA_BaseNPC"]},{"name":"teamFilter","types":["DOTA_UNIT_TARGET_TEAM"]},{"name":"typeFilter","types":["DOTA_UNIT_TARGET_TYPE"]},{"name":"flagFilter","types":["DOTA_UNIT_TARGET_FLAGS"]},{"name":"team","types":["DOTATeam_t"]}]},{"kind":"function","name":"UnloadSpawnGroup","available":"both","description":"Unload a spawn group by name.","returns":["nil"],"args":[{"name":"arg1","types":["string"]}]},{"kind":"function","name":"UnloadSpawnGroupByHandle","available":"both","description":"Unload a spawn group by handle.","returns":["nil"],"args":[{"name":"handle","types":["SpawnGroupHandle"]}]},{"kind":"function","name":"UpdateEventPoints","available":"server","returns":["nil"],"args":[{"name":"eventPointData","types":["handle"]}]},{"kind":"function","name":"UserIDToControllerHScript","available":"both","description":"Turn a userid integer (typically, fields named \'userid\' in game events) to an HScript representing the associated player controller\'s script instance.","returns":["handle"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"UTIL_MessageText","available":"server","description":"Sends colored text to one client.","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]}]},{"kind":"function","name":"UTIL_MessageText_WithContext","available":"server","description":"Sends colored text to one client. (Valid context keys: player_id, value, team_id).","returns":["nil"],"args":[{"name":"arg1","types":["int"]},{"name":"arg2","types":["string"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["int"]},{"name":"arg7","types":["handle"]}]},{"kind":"function","name":"UTIL_MessageTextAll","available":"server","description":"Sends colored text to all clients.","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]}]},{"kind":"function","name":"UTIL_MessageTextAll_WithContext","available":"server","description":"Sends colored text to all clients. (Valid context keys: player_id, value, team_id).","returns":["nil"],"args":[{"name":"arg1","types":["string"]},{"name":"arg2","types":["int"]},{"name":"arg3","types":["int"]},{"name":"arg4","types":["int"]},{"name":"arg5","types":["int"]},{"name":"arg6","types":["handle"]}]},{"kind":"function","name":"UTIL_Remove","available":"both","description":"Removes the specified entity.","returns":["nil"],"args":[{"name":"entity","types":["CBaseEntity","nil"]}]},{"kind":"function","name":"UTIL_RemoveImmediate","available":"both","description":"Immediately removes the specified entity.","returns":["nil"],"args":[{"name":"entity","types":["CBaseEntity","nil"]}]},{"kind":"function","name":"UTIL_ResetMessageText","available":"server","description":"Clear all message text on one client.","returns":["nil"],"args":[{"name":"arg1","types":["int"]}]},{"kind":"function","name":"UTIL_ResetMessageTextAll","available":"server","description":"Clear all message text from all clients.","returns":["nil"],"args":[]},{"kind":"function","name":"VectorAngles","available":"server","returns":["QAngle"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"VectorToAngles","available":"both","description":"Get Qangles (with no roll) for a Vector.","returns":["QAngle"],"args":[{"name":"arg1","types":["Vector"]}]},{"kind":"function","name":"Warning","available":"both","description":"Print a warning.","returns":["nil"],"args":[{"name":"message","types":["string"]}]}]')},KEF9:e=>{"use strict";e.exports=JSON.parse('[{"kind":"constant","name":"DOTA_ITEM_INVENTORY_SIZE","value":9,"available":"server"},{"kind":"constant","name":"DOTA_ITEM_MAX","value":19,"available":"server"},{"kind":"constant","name":"DOTA_ITEM_STASH_MAX","value":15,"available":"server"},{"kind":"constant","name":"DOTA_ITEM_STASH_MIN","value":9,"available":"server"},{"kind":"constant","name":"DOTA_ITEM_STASH_SIZE","value":6,"available":"server"},{"kind":"constant","name":"DOTA_MAX_ABILITIES","value":32,"available":"both"},{"kind":"constant","name":"FIND_UNITS_EVERYWHERE","value":-1,"available":"both"},{"kind":"constant","name":"SPAWN_GROUP_HANDLE_INVALID","value":0,"available":"both"},{"kind":"enum","name":"ABILITY_TYPES","available":"both","members":[{"name":"ABILITY_TYPE_BASIC","value":0},{"name":"ABILITY_TYPE_ULTIMATE","value":1},{"name":"ABILITY_TYPE_ATTRIBUTES","value":2},{"name":"ABILITY_TYPE_HIDDEN","value":3}]},{"kind":"enum","name":"AbilityLearnResult_t","available":"both","members":[{"name":"ABILITY_CAN_BE_UPGRADED","value":0},{"name":"ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE","value":1},{"name":"ABILITY_CANNOT_BE_UPGRADED_AT_MAX","value":2},{"name":"ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL","value":3},{"name":"ABILITY_NOT_LEARNABLE","value":4}]},{"kind":"enum","name":"ActivateType","available":"both","members":[{"name":"ACTIVATE_TYPE_INITIAL_CREATION","value":0},{"name":"ACTIVATE_TYPE_DATAUPDATE_CREATION","value":1},{"name":"ACTIVATE_TYPE_ONRESTORE","value":2}]},{"kind":"enum","name":"attackfail","available":"server","members":[{"name":"DOTA_ATTACK_RECORD_FAIL_NO","value":0},{"name":"DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS","value":1},{"name":"DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS","value":2},{"name":"DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED","value":3},{"name":"DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE","value":4},{"name":"DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE","value":5},{"name":"DOTA_ATTACK_RECORD_CANNOT_FAIL","value":6},{"name":"DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION","value":7}]},{"kind":"enum","name":"AttributeDerivedStats","available":"both","members":[{"name":"DOTA_ATTRIBUTE_STRENGTH_DAMAGE","value":0},{"name":"DOTA_ATTRIBUTE_STRENGTH_HP","value":1},{"name":"DOTA_ATTRIBUTE_STRENGTH_HP_REGEN","value":2},{"name":"DOTA_ATTRIBUTE_AGILITY_DAMAGE","value":3},{"name":"DOTA_ATTRIBUTE_AGILITY_ARMOR","value":4},{"name":"DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED","value":5},{"name":"DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE","value":6},{"name":"DOTA_ATTRIBUTE_INTELLIGENCE_MANA","value":7},{"name":"DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN","value":8}]},{"kind":"enum","name":"Attributes","available":"both","members":[{"name":"DOTA_ATTRIBUTE_INVALID","value":-1},{"name":"DOTA_ATTRIBUTE_STRENGTH","value":0},{"name":"DOTA_ATTRIBUTE_AGILITY","value":1},{"name":"DOTA_ATTRIBUTE_INTELLECT","value":2},{"name":"DOTA_ATTRIBUTE_MAX","value":3}]},{"kind":"enum","name":"ConVarFlags","available":"both","members":[{"name":"FCVAR_NONE","value":0},{"name":"FCVAR_UNREGISTERED","description":"If this is set, the convar will become anonymous and won\'t show up in the \'find\' results.","value":1},{"name":"FCVAR_DEVELOPMENTONLY","value":2},{"name":"FCVAR_HIDDEN","value":16},{"name":"FCVAR_PROTECTED","description":"Makes the ConVar value hidden from all clients (for example sv_password).\\nReported as \\"prot\\" by cvarlist.","value":32},{"name":"FCVAR_SPONLY","description":"Executing the command or changing the ConVar is only allowed in singleplayer.\\nReported as \\"sp\\" by cvarlist.","value":64},{"name":"FCVAR_ARCHIVE","description":"Save the ConVar value into config.cfg.\\nReported as \\"a\\" by cvarlist, except Lua ConVars.","value":128},{"name":"FCVAR_NOTIFY","description":"For serverside ConVars, notifies all players with blue chat text when the value gets changed.\\nReported as \\"nf\\" by cvarlist.","value":256},{"name":"FCVAR_USERINFO","description":"For clientside commands, sends the value to the server.\\nReported as \\"user\\" by cvarlist.","value":512},{"name":"FCVAR_PRINTABLEONLY","description":"Forces the ConVar to only have printable characters (no control characters).\\nReported as \\"print\\" by cvarlist.","value":1024},{"name":"FCVAR_UNLOGGED","description":"Don\'t log the ConVar changes to console/log files/users.\\nReported as \\"log\\" by cvarlist.","value":2048},{"name":"FCVAR_NEVER_AS_STRING","description":"Tells the engine to never print this variable as a string since it contains control sequences.\\nReported as \\"numeric\\" by cvarlist.","value":4096},{"name":"FCVAR_REPLICATED","description":"For serverside ConVars, it will send its value to all clients. The ConVar with the same name must also exist on the client!\\nReported as \\"rep\\" by cvarlist.","value":8192},{"name":"FCVAR_CHEAT","description":"Requires sv_cheats to be enabled to change the ConVar or run the command.\\nReported as \\"cheat\\" by cvarlist.","value":16384},{"name":"FCVAR_SS","value":32768},{"name":"FCVAR_DEMO","description":"Force the ConVar to be recorded by demo recordings.\\nReported as \\"demo\\" by cvarlist.","value":65536},{"name":"FCVAR_DONTRECORD","description":"Opposite of FCVAR_DEMO, ensures the ConVar is not recorded in demos.\\nReported as \\"norecord\\" by cvarlist.","value":131072},{"name":"FCVAR_NOT_CONNECTED","description":"Makes the ConVar not changeable while connected to a server or in singleplayer.","value":4194304},{"name":"FCVAR_VCONSOLE_SET_FOCUS","value":1073741824}]},{"kind":"enum","name":"DAMAGE_TYPES","available":"server","members":[{"name":"DAMAGE_TYPE_NONE","value":0},{"name":"DAMAGE_TYPE_PHYSICAL","value":1},{"name":"DAMAGE_TYPE_MAGICAL","value":2},{"name":"DAMAGE_TYPE_PURE","value":4},{"name":"DAMAGE_TYPE_ALL","value":7},{"name":"DAMAGE_TYPE_HP_REMOVAL","value":8},{"name":"DAMAGE_TYPE_ABILITY_DEFINED","value":22}]},{"kind":"enum","name":"DamageCategory_t","available":"server","members":[{"name":"DOTA_DAMAGE_CATEGORY_SPELL","value":0},{"name":"DOTA_DAMAGE_CATEGORY_ATTACK","value":1}]},{"kind":"enum","name":"DOTA_ABILITY_BEHAVIOR","available":"both","members":[{"name":"DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT","value":-2147483648},{"name":"DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_IGNORE_SILENCE","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_NONE","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_OVERSHOOT","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX","value":0},{"name":"DOTA_ABILITY_BEHAVIOR_HIDDEN","value":1},{"name":"DOTA_ABILITY_BEHAVIOR_PASSIVE","value":2},{"name":"DOTA_ABILITY_BEHAVIOR_NO_TARGET","value":4},{"name":"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET","value":8},{"name":"DOTA_ABILITY_BEHAVIOR_POINT","value":16},{"name":"DOTA_ABILITY_BEHAVIOR_AOE","value":32},{"name":"DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE","value":64},{"name":"DOTA_ABILITY_BEHAVIOR_CHANNELLED","value":128},{"name":"DOTA_ABILITY_BEHAVIOR_ITEM","value":256},{"name":"DOTA_ABILITY_BEHAVIOR_TOGGLE","value":512},{"name":"DOTA_ABILITY_BEHAVIOR_DIRECTIONAL","value":1024},{"name":"DOTA_ABILITY_BEHAVIOR_IMMEDIATE","value":2048},{"name":"DOTA_ABILITY_BEHAVIOR_AUTOCAST","value":4096},{"name":"DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET","value":8192},{"name":"DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT","value":16384},{"name":"DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET","value":32768},{"name":"DOTA_ABILITY_BEHAVIOR_AURA","value":65536},{"name":"DOTA_ABILITY_BEHAVIOR_ATTACK","value":131072},{"name":"DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT","value":262144},{"name":"DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES","value":524288},{"name":"DOTA_ABILITY_BEHAVIOR_UNRESTRICTED","value":1048576},{"name":"DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE","value":2097152},{"name":"DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL","value":4194304},{"name":"DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT","value":8388608},{"name":"DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET","value":16777216},{"name":"DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK","value":33554432},{"name":"DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN","value":67108864},{"name":"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING","value":134217728},{"name":"DOTA_ABILITY_BEHAVIOR_RUNE_TARGET","value":268435456},{"name":"DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL","value":536870912},{"name":"DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING","value":1073741824}]},{"kind":"enum","name":"DOTA_GameState","available":"server","members":[{"name":"DOTA_GAMERULES_STATE_INIT","value":0},{"name":"DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD","value":1},{"name":"DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP","value":2},{"name":"DOTA_GAMERULES_STATE_HERO_SELECTION","value":3},{"name":"DOTA_GAMERULES_STATE_STRATEGY_TIME","value":4},{"name":"DOTA_GAMERULES_STATE_TEAM_SHOWCASE","value":5},{"name":"DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD","value":6},{"name":"DOTA_GAMERULES_STATE_PRE_GAME","value":7},{"name":"DOTA_GAMERULES_STATE_SCENARIO_SETUP","value":8},{"name":"DOTA_GAMERULES_STATE_GAME_IN_PROGRESS","value":9},{"name":"DOTA_GAMERULES_STATE_POST_GAME","value":10},{"name":"DOTA_GAMERULES_STATE_DISCONNECT","value":11}]},{"kind":"enum","name":"DOTA_GC_TEAM","available":"server","members":[{"name":"DOTA_GC_TEAM_GOOD_GUYS","value":0},{"name":"DOTA_GC_TEAM_BAD_GUYS","value":1},{"name":"DOTA_GC_TEAM_BROADCASTER","value":2},{"name":"DOTA_GC_TEAM_SPECTATOR","value":3},{"name":"DOTA_GC_TEAM_PLAYER_POOL","value":4},{"name":"DOTA_GC_TEAM_NOTEAM","value":5}]},{"kind":"enum","name":"DOTA_HeroPickState","available":"both","members":[{"name":"DOTA_HEROPICK_STATE_NONE","value":0},{"name":"DOTA_HEROPICK_STATE_AP_SELECT","value":1},{"name":"DOTA_HEROPICK_STATE_SD_SELECT","value":2},{"name":"DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED","value":3},{"name":"DOTA_HEROPICK_STATE_RD_SELECT_UNUSED","value":4},{"name":"DOTA_HEROPICK_STATE_CM_INTRO","value":5},{"name":"DOTA_HEROPICK_STATE_CM_CAPTAINPICK","value":6},{"name":"DOTA_HEROPICK_STATE_CM_BAN1","value":7},{"name":"DOTA_HEROPICK_STATE_CM_BAN2","value":8},{"name":"DOTA_HEROPICK_STATE_CM_BAN3","value":9},{"name":"DOTA_HEROPICK_STATE_CM_BAN4","value":10},{"name":"DOTA_HEROPICK_STATE_CM_BAN5","value":11},{"name":"DOTA_HEROPICK_STATE_CM_BAN6","value":12},{"name":"DOTA_HEROPICK_STATE_CM_BAN7","value":13},{"name":"DOTA_HEROPICK_STATE_CM_BAN8","value":14},{"name":"DOTA_HEROPICK_STATE_CM_BAN9","value":15},{"name":"DOTA_HEROPICK_STATE_CM_BAN10","value":16},{"name":"DOTA_HEROPICK_STATE_CM_BAN11","value":17},{"name":"DOTA_HEROPICK_STATE_CM_BAN12","value":18},{"name":"DOTA_HEROPICK_STATE_CM_BAN13","value":19},{"name":"DOTA_HEROPICK_STATE_CM_BAN14","value":20},{"name":"DOTA_HEROPICK_STATE_CM_SELECT1","value":21},{"name":"DOTA_HEROPICK_STATE_CM_SELECT2","value":22},{"name":"DOTA_HEROPICK_STATE_CM_SELECT3","value":23},{"name":"DOTA_HEROPICK_STATE_CM_SELECT4","value":24},{"name":"DOTA_HEROPICK_STATE_CM_SELECT5","value":25},{"name":"DOTA_HEROPICK_STATE_CM_SELECT6","value":26},{"name":"DOTA_HEROPICK_STATE_CM_SELECT7","value":27},{"name":"DOTA_HEROPICK_STATE_CM_SELECT8","value":28},{"name":"DOTA_HEROPICK_STATE_CM_SELECT9","value":29},{"name":"DOTA_HEROPICK_STATE_CM_SELECT10","value":30},{"name":"DOTA_HEROPICK_STATE_CM_PICK","value":31},{"name":"DOTA_HEROPICK_STATE_AR_SELECT","value":32},{"name":"DOTA_HEROPICK_STATE_MO_SELECT","value":33},{"name":"DOTA_HEROPICK_STATE_FH_SELECT","value":34},{"name":"DOTA_HEROPICK_STATE_CD_INTRO","value":35},{"name":"DOTA_HEROPICK_STATE_CD_CAPTAINPICK","value":36},{"name":"DOTA_HEROPICK_STATE_CD_BAN1","value":37},{"name":"DOTA_HEROPICK_STATE_CD_BAN2","value":38},{"name":"DOTA_HEROPICK_STATE_CD_BAN3","value":39},{"name":"DOTA_HEROPICK_STATE_CD_BAN4","value":40},{"name":"DOTA_HEROPICK_STATE_CD_BAN5","value":41},{"name":"DOTA_HEROPICK_STATE_CD_BAN6","value":42},{"name":"DOTA_HEROPICK_STATE_CD_SELECT1","value":43},{"name":"DOTA_HEROPICK_STATE_CD_SELECT2","value":44},{"name":"DOTA_HEROPICK_STATE_CD_SELECT3","value":45},{"name":"DOTA_HEROPICK_STATE_CD_SELECT4","value":46},{"name":"DOTA_HEROPICK_STATE_CD_SELECT5","value":47},{"name":"DOTA_HEROPICK_STATE_CD_SELECT6","value":48},{"name":"DOTA_HEROPICK_STATE_CD_SELECT7","value":49},{"name":"DOTA_HEROPICK_STATE_CD_SELECT8","value":50},{"name":"DOTA_HEROPICK_STATE_CD_SELECT9","value":51},{"name":"DOTA_HEROPICK_STATE_CD_SELECT10","value":52},{"name":"DOTA_HEROPICK_STATE_CD_PICK","value":53},{"name":"DOTA_HEROPICK_STATE_BD_SELECT","value":54},{"name":"DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT","value":55},{"name":"DOTA_HERO_PICK_STATE_ARDM_SELECT","value":56},{"name":"DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT","value":57},{"name":"DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT","value":58},{"name":"DOTA_HEROPICK_STATE_SELECT_PENALTY","value":59},{"name":"DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES","value":60},{"name":"DOTA_HEROPICK_STATE_SCENARIO_PICK","value":61},{"name":"DOTA_HEROPICK_STATE_COUNT","value":62}]},{"kind":"enum","name":"DOTA_MOTION_CONTROLLER_PRIORITY","available":"both","members":[{"name":"DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST","value":0},{"name":"DOTA_MOTION_CONTROLLER_PRIORITY_LOW","value":1},{"name":"DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM","value":2},{"name":"DOTA_MOTION_CONTROLLER_PRIORITY_HIGH","value":3},{"name":"DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST","value":4}]},{"kind":"enum","name":"DOTA_OVERHEAD_ALERT","available":"server","members":[{"name":"OVERHEAD_ALERT_GOLD","value":0},{"name":"OVERHEAD_ALERT_DENY","value":1},{"name":"OVERHEAD_ALERT_CRITICAL","value":2},{"name":"OVERHEAD_ALERT_XP","value":3},{"name":"OVERHEAD_ALERT_BONUS_SPELL_DAMAGE","value":4},{"name":"OVERHEAD_ALERT_MISS","value":5},{"name":"OVERHEAD_ALERT_DAMAGE","value":6},{"name":"OVERHEAD_ALERT_EVADE","value":7},{"name":"OVERHEAD_ALERT_BLOCK","value":8},{"name":"OVERHEAD_ALERT_BONUS_POISON_DAMAGE","value":9},{"name":"OVERHEAD_ALERT_HEAL","value":10},{"name":"OVERHEAD_ALERT_MANA_ADD","value":11},{"name":"OVERHEAD_ALERT_MANA_LOSS","value":12},{"name":"OVERHEAD_ALERT_LAST_HIT_EARLY","value":13},{"name":"OVERHEAD_ALERT_LAST_HIT_CLOSE","value":14},{"name":"OVERHEAD_ALERT_LAST_HIT_MISS","value":15},{"name":"OVERHEAD_ALERT_MAGICAL_BLOCK","value":16},{"name":"OVERHEAD_ALERT_INCOMING_DAMAGE","value":17},{"name":"OVERHEAD_ALERT_OUTGOING_DAMAGE","value":18},{"name":"OVERHEAD_ALERT_DISABLE_RESIST","value":19},{"name":"OVERHEAD_ALERT_DEATH","value":20},{"name":"OVERHEAD_ALERT_BLOCKED","value":21},{"name":"OVERHEAD_ALERT_ITEM_RECEIVED","value":22},{"name":"OVERHEAD_ALERT_SHARD","value":23},{"name":"OVERHEAD_ALERT_DEADLY_BLOW","value":24}]},{"kind":"enum","name":"DOTA_RUNES","available":"both","members":[{"name":"DOTA_RUNE_INVALID","value":-1},{"name":"DOTA_RUNE_DOUBLEDAMAGE","value":0},{"name":"DOTA_RUNE_HASTE","value":1},{"name":"DOTA_RUNE_ILLUSION","value":2},{"name":"DOTA_RUNE_INVISIBILITY","value":3},{"name":"DOTA_RUNE_REGENERATION","value":4},{"name":"DOTA_RUNE_BOUNTY","value":5},{"name":"DOTA_RUNE_ARCANE","value":6},{"name":"DOTA_RUNE_WATER","value":7},{"name":"DOTA_RUNE_COUNT","value":8}]},{"kind":"enum","name":"DOTA_SHOP_TYPE","available":"both","members":[{"name":"DOTA_SHOP_HOME","value":0},{"name":"DOTA_SHOP_SIDE","value":1},{"name":"DOTA_SHOP_SECRET","value":2},{"name":"DOTA_SHOP_GROUND","value":3},{"name":"DOTA_SHOP_SIDE2","value":4},{"name":"DOTA_SHOP_SECRET2","value":5},{"name":"DOTA_SHOP_CUSTOM","value":6},{"name":"DOTA_SHOP_NEUTRALS","value":7},{"name":"DOTA_SHOP_NONE","value":8}]},{"kind":"enum","name":"DOTA_UNIT_TARGET_FLAGS","available":"both","members":[{"name":"DOTA_UNIT_TARGET_FLAG_NONE","value":0},{"name":"DOTA_UNIT_TARGET_FLAG_RANGED_ONLY","value":2},{"name":"DOTA_UNIT_TARGET_FLAG_MELEE_ONLY","value":4},{"name":"DOTA_UNIT_TARGET_FLAG_DEAD","value":8},{"name":"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES","value":16},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES","value":32},{"name":"DOTA_UNIT_TARGET_FLAG_INVULNERABLE","value":64},{"name":"DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE","value":128},{"name":"DOTA_UNIT_TARGET_FLAG_NO_INVIS","value":256},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS","value":512},{"name":"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED","value":1024},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED","value":2048},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED","value":4096},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS","value":8192},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE","value":16384},{"name":"DOTA_UNIT_TARGET_FLAG_MANA_ONLY","value":32768},{"name":"DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP","value":65536},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO","value":131072},{"name":"DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD","value":262144},{"name":"DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED","value":524288},{"name":"DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES","value":1048576},{"name":"DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS","value":2097152}]},{"kind":"enum","name":"DOTA_UNIT_TARGET_TEAM","available":"both","members":[{"name":"DOTA_UNIT_TARGET_TEAM_NONE","value":0},{"name":"DOTA_UNIT_TARGET_TEAM_FRIENDLY","value":1},{"name":"DOTA_UNIT_TARGET_TEAM_ENEMY","value":2},{"name":"DOTA_UNIT_TARGET_TEAM_BOTH","value":3},{"name":"DOTA_UNIT_TARGET_TEAM_CUSTOM","value":4}]},{"kind":"enum","name":"DOTA_UNIT_TARGET_TYPE","available":"both","members":[{"name":"DOTA_UNIT_TARGET_NONE","value":0},{"name":"DOTA_UNIT_TARGET_HERO","value":1},{"name":"DOTA_UNIT_TARGET_CREEP","value":2},{"name":"DOTA_UNIT_TARGET_BUILDING","value":4},{"name":"DOTA_UNIT_TARGET_COURIER","value":16},{"name":"DOTA_UNIT_TARGET_BASIC","value":18},{"name":"DOTA_UNIT_TARGET_OTHER","value":32},{"name":"DOTA_UNIT_TARGET_ALL","value":55},{"name":"DOTA_UNIT_TARGET_TREE","value":64},{"name":"DOTA_UNIT_TARGET_CUSTOM","value":128}]},{"kind":"enum","name":"DOTAAbilitySpeakTrigger_t","available":"both","members":[{"name":"DOTA_ABILITY_SPEAK_START_ACTION_PHASE","value":0},{"name":"DOTA_ABILITY_SPEAK_CAST","value":1}]},{"kind":"enum","name":"DOTAConnectionState_t","available":"server","members":[{"name":"DOTA_CONNECTION_STATE_UNKNOWN","value":0},{"name":"DOTA_CONNECTION_STATE_NOT_YET_CONNECTED","value":1},{"name":"DOTA_CONNECTION_STATE_CONNECTED","value":2},{"name":"DOTA_CONNECTION_STATE_DISCONNECTED","value":3},{"name":"DOTA_CONNECTION_STATE_ABANDONED","value":4},{"name":"DOTA_CONNECTION_STATE_LOADING","value":5},{"name":"DOTA_CONNECTION_STATE_FAILED","value":6}]},{"kind":"enum","name":"DOTADamageFlag_t","available":"server","members":[{"name":"DOTA_DAMAGE_FLAG_NONE","value":0},{"name":"DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR","value":1},{"name":"DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR","value":2},{"name":"DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY","value":4},{"name":"DOTA_DAMAGE_FLAG_BYPASSES_BLOCK","value":8},{"name":"DOTA_DAMAGE_FLAG_REFLECTION","value":16},{"name":"DOTA_DAMAGE_FLAG_HPLOSS","value":32},{"name":"DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT","value":64},{"name":"DOTA_DAMAGE_FLAG_NON_LETHAL","value":128},{"name":"DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY","value":256},{"name":"DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS","value":512},{"name":"DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION","value":1024},{"name":"DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN","value":2048},{"name":"DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL","value":4096},{"name":"DOTA_DAMAGE_FLAG_PROPERTY_FIRE","value":8192},{"name":"DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR","value":16384},{"name":"DOTA_DAMAGE_FLAG_SECONDARY_PROJECTILE_ATTACK","value":32768},{"name":"DOTA_DAMAGE_FLAG_FORCE_SPELL_AMPLIFICATION","value":65536},{"name":"DOTA_DAMAGE_FLAG_MAGIC_AUTO_ATTACK","value":131072}]},{"kind":"enum","name":"DotaDefaultUIElement_t","available":"server","members":[{"name":"DOTA_DEFAULT_UI_INVALID","value":-1},{"name":"DOTA_DEFAULT_UI_TOP_TIMEOFDAY","value":0},{"name":"DOTA_DEFAULT_UI_TOP_HEROES","value":1},{"name":"DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD","value":2},{"name":"DOTA_DEFAULT_UI_ACTION_PANEL","value":3},{"name":"DOTA_DEFAULT_UI_ACTION_MINIMAP","value":4},{"name":"DOTA_DEFAULT_UI_INVENTORY_PANEL","value":5},{"name":"DOTA_DEFAULT_UI_INVENTORY_SHOP","value":6},{"name":"DOTA_DEFAULT_UI_INVENTORY_ITEMS","value":7},{"name":"DOTA_DEFAULT_UI_INVENTORY_QUICKBUY","value":8},{"name":"DOTA_DEFAULT_UI_INVENTORY_COURIER","value":9},{"name":"DOTA_DEFAULT_UI_INVENTORY_PROTECT","value":10},{"name":"DOTA_DEFAULT_UI_INVENTORY_GOLD","value":11},{"name":"DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS","value":12},{"name":"DOTA_DEFAULT_UI_SHOP_COMMONITEMS","value":13},{"name":"DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS","value":14},{"name":"DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME","value":15},{"name":"DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK","value":16},{"name":"DOTA_DEFAULT_UI_TOP_MENU_BUTTONS","value":17},{"name":"DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND","value":18},{"name":"DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM","value":19},{"name":"DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM","value":20},{"name":"DOTA_DEFAULT_UI_TOP_BAR_SCORE","value":21},{"name":"DOTA_DEFAULT_UI_ENDGAME","value":22},{"name":"DOTA_DEFAULT_UI_ENDGAME_CHAT","value":23},{"name":"DOTA_DEFAULT_UI_QUICK_STATS","value":24},{"name":"DOTA_DEFAULT_UI_PREGAME_STRATEGYUI","value":25},{"name":"DOTA_DEFAULT_UI_KILLCAM","value":26},{"name":"DOTA_DEFAULT_UI_TOP_BAR","value":27},{"name":"DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS","value":28},{"name":"DOTA_DEFAULT_UI_AGHANIMS_STATUS","value":29},{"name":"DOTA_DEFAULT_UI_ELEMENT_COUNT","value":30}]},{"kind":"enum","name":"DOTAHUDVisibility_t","available":"server","members":[{"name":"DOTA_HUD_VISIBILITY_INVALID","value":-1},{"name":"DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY","value":0},{"name":"DOTA_HUD_VISIBILITY_TOP_HEROES","value":1},{"name":"DOTA_HUD_VISIBILITY_TOP_SCOREBOARD","value":2},{"name":"DOTA_HUD_VISIBILITY_ACTION_PANEL","value":3},{"name":"DOTA_HUD_VISIBILITY_ACTION_MINIMAP","value":4},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_PANEL","value":5},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_SHOP","value":6},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_ITEMS","value":7},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY","value":8},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_COURIER","value":9},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_PROTECT","value":10},{"name":"DOTA_HUD_VISIBILITY_INVENTORY_GOLD","value":11},{"name":"DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS","value":12},{"name":"DOTA_HUD_VISIBILITY_SHOP_COMMONITEMS","value":13},{"name":"DOTA_HUD_VISIBILITY_HERO_SELECTION_TEAMS","value":14},{"name":"DOTA_HUD_VISIBILITY_HERO_SELECTION_GAME_NAME","value":15},{"name":"DOTA_HUD_VISIBILITY_HERO_SELECTION_CLOCK","value":16},{"name":"DOTA_HUD_VISIBILITY_TOP_MENU_BUTTONS","value":17},{"name":"DOTA_HUD_VISIBILITY_TOP_BAR_BACKGROUND","value":18},{"name":"DOTA_HUD_VISIBILITY_TOP_BAR_RADIANT_TEAM","value":19},{"name":"DOTA_HUD_VISIBILITY_TOP_BAR_DIRE_TEAM","value":20},{"name":"DOTA_HUD_VISIBILITY_TOP_BAR_SCORE","value":21},{"name":"DOTA_HUD_VISIBILITY_ENDGAME","value":22},{"name":"DOTA_HUD_VISIBILITY_ENDGAME_CHAT","value":23},{"name":"DOTA_HUD_VISIBILITY_QUICK_STATS","value":24},{"name":"DOTA_HUD_VISIBILITY_PREGAME_STRATEGYUI","value":25},{"name":"DOTA_HUD_VISIBILITY_KILLCAM","value":26},{"name":"DOTA_HUD_VISIBILITY_TOP_BAR","value":27},{"name":"DOTA_HUD_CUSTOMUI_BEHIND_HUD_ELEMENTS","value":28},{"name":"DOTA_HUD_VISIBILITY_AGHANIMS_STATUS","value":29},{"name":"DOTA_HUD_VISIBILITY_COUNT","value":30}]},{"kind":"enum","name":"DOTAInventoryFlags_t","available":"server","members":[{"name":"DOTA_INVENTORY_ALLOW_NONE","value":0},{"name":"DOTA_INVENTORY_ALLOW_MAIN","value":1},{"name":"DOTA_INVENTORY_ALLOW_STASH","value":2},{"name":"DOTA_INVENTORY_ALL_ACCESS","value":3},{"name":"DOTA_INVENTORY_ALLOW_DROP_ON_GROUND","value":4},{"name":"DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN","value":8},{"name":"DOTA_INVENTORY_LIMIT_DROP_ON_GROUND","value":16}]},{"kind":"enum","name":"DOTALimits_t","available":"both","members":[{"name":"DOTA_DEFAULT_MAX_TEAM","description":"Default number of players per team.","value":5},{"name":"DOTA_DEFAULT_MAX_TEAM_PLAYERS","description":"Default number of non-spectator players supported.","value":10},{"name":"DOTA_MAX_PLAYER_TEAMS","description":"Max number of player teams supported.","value":10},{"name":"DOTA_MAX_SPECTATOR_LOBBY_SIZE","description":"Max number of viewers in a spectator lobby.","value":15},{"name":"DOTA_MAX_TEAM","description":"Max number of players per team.","value":24},{"name":"DOTA_MAX_TEAM_PLAYERS","description":"Max number of non-spectator players supported.","value":24},{"name":"DOTA_MAX_SPECTATOR_TEAM_SIZE","description":"How many spectators can watch.","value":40},{"name":"DOTA_MAX_PLAYERS","description":"Max number of players connected to the server including spectators.","value":64}]},{"kind":"enum","name":"DOTAMinimapEvent_t","available":"server","members":[{"name":"DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK","value":2},{"name":"DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK","value":4},{"name":"DOTA_MINIMAP_EVENT_BASE_GLYPHED","value":8},{"name":"DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK","value":16},{"name":"DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING","value":32},{"name":"DOTA_MINIMAP_EVENT_TEAMMATE_DIED","value":64},{"name":"DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE","value":128},{"name":"DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED","value":256},{"name":"DOTA_MINIMAP_EVENT_HINT_LOCATION","value":512},{"name":"DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING","value":1024},{"name":"DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING","value":2048},{"name":"DOTA_MINIMAP_EVENT_RADAR","value":4096},{"name":"DOTA_MINIMAP_EVENT_RADAR_TARGET","value":8192},{"name":"DOTA_MINIMAP_EVENT_MOVE_TO_TARGET","value":16384}]},{"kind":"enum","name":"DOTAModifierAttribute_t","available":"both","members":[{"name":"MODIFIER_ATTRIBUTE_NONE","value":0},{"name":"MODIFIER_ATTRIBUTE_PERMANENT","value":1},{"name":"MODIFIER_ATTRIBUTE_MULTIPLE","value":2},{"name":"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE","value":4},{"name":"MODIFIER_ATTRIBUTE_AURA_PRIORITY","value":8},{"name":"MODIFIER_ATTRIBUTE_IGNORE_DODGE","value":16}]},{"kind":"enum","name":"DOTAMusicStatus_t","available":"server","members":[{"name":"DOTA_MUSIC_STATUS_NONE","value":0},{"name":"DOTA_MUSIC_STATUS_EXPLORATION","value":1},{"name":"DOTA_MUSIC_STATUS_BATTLE","value":2},{"name":"DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION","value":3},{"name":"DOTA_MUSIC_STATUS_DEAD","value":4},{"name":"DOTA_MUSIC_STATUS_LAST","value":5}]},{"kind":"enum","name":"DOTAProjectileAttachment_t","available":"both","members":[{"name":"DOTA_PROJECTILE_ATTACHMENT_NONE","value":0},{"name":"DOTA_PROJECTILE_ATTACHMENT_ATTACK_1","value":1},{"name":"DOTA_PROJECTILE_ATTACHMENT_ATTACK_2","value":2},{"name":"DOTA_PROJECTILE_ATTACHMENT_HITLOCATION","value":3},{"name":"DOTA_PROJECTILE_ATTACHMENT_ATTACK_3","value":4},{"name":"DOTA_PROJECTILE_ATTACHMENT_ATTACK_4","value":5},{"name":"DOTA_PROJECTILE_ATTACHMENT_LAST","value":6}]},{"kind":"enum","name":"DOTAScriptInventorySlot_t","available":"server","members":[{"name":"DOTA_ITEM_SLOT_1","value":0},{"name":"DOTA_ITEM_SLOT_2","value":1},{"name":"DOTA_ITEM_SLOT_3","value":2},{"name":"DOTA_ITEM_SLOT_4","value":3},{"name":"DOTA_ITEM_SLOT_5","value":4},{"name":"DOTA_ITEM_SLOT_6","value":5},{"name":"DOTA_ITEM_SLOT_7","value":6},{"name":"DOTA_ITEM_SLOT_8","value":7},{"name":"DOTA_ITEM_SLOT_9","value":8},{"name":"DOTA_STASH_SLOT_1","value":9},{"name":"DOTA_STASH_SLOT_2","value":10},{"name":"DOTA_STASH_SLOT_3","value":11},{"name":"DOTA_STASH_SLOT_4","value":12},{"name":"DOTA_STASH_SLOT_5","value":13},{"name":"DOTA_STASH_SLOT_6","value":14},{"name":"DOTA_ITEM_TP_SCROLL","value":15},{"name":"DOTA_ITEM_NEUTRAL_SLOT","value":16},{"name":"DOTA_ITEM_TRANSIENT_ITEM","value":17},{"name":"DOTA_ITEM_TRANSIENT_RECIPE","value":18},{"name":"DOTA_ITEM_TRANSIENT_CAST_ITEM","value":20}]},{"kind":"enum","name":"DOTASlotType_t","available":"server","members":[{"name":"DOTA_LOADOUT_TYPE_INVALID","value":-1},{"name":"DOTA_LOADOUT_TYPE_WEAPON","value":0},{"name":"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON","value":1},{"name":"DOTA_LOADOUT_TYPE_WEAPON2","value":2},{"name":"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2","value":3},{"name":"DOTA_LOADOUT_TYPE_HEAD","value":4},{"name":"DOTA_LOADOUT_TYPE_SHOULDER","value":5},{"name":"DOTA_LOADOUT_TYPE_ARMS","value":6},{"name":"DOTA_LOADOUT_TYPE_ARMOR","value":7},{"name":"DOTA_LOADOUT_TYPE_BELT","value":8},{"name":"DOTA_LOADOUT_TYPE_NECK","value":9},{"name":"DOTA_LOADOUT_TYPE_BACK","value":10},{"name":"DOTA_LOADOUT_TYPE_GLOVES","value":11},{"name":"DOTA_LOADOUT_TYPE_LEGS","value":12},{"name":"DOTA_LOADOUT_TYPE_TAIL","value":13},{"name":"DOTA_LOADOUT_TYPE_MISC","value":14},{"name":"DOTA_LOADOUT_TYPE_COSTUME","value":15},{"name":"DOTA_LOADOUT_TYPE_BODY_HEAD","value":16},{"name":"DOTA_LOADOUT_TYPE_MOUNT","value":17},{"name":"DOTA_LOADOUT_TYPE_SUMMON","value":18},{"name":"DOTA_LOADOUT_TYPE_SHAPESHIFT","value":19},{"name":"DOTA_LOADOUT_TYPE_TAUNT","value":20},{"name":"DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS","value":21},{"name":"DOTA_LOADOUT_TYPE_ABILITY_ATTACK","value":22},{"name":"DOTA_LOADOUT_TYPE_ABILITY1","value":23},{"name":"DOTA_LOADOUT_TYPE_ABILITY2","value":24},{"name":"DOTA_LOADOUT_TYPE_ABILITY3","value":25},{"name":"DOTA_LOADOUT_TYPE_ABILITY4","value":26},{"name":"DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE","value":27},{"name":"DOTA_LOADOUT_TYPE_VOICE","value":28},{"name":"DOTA_LOADOUT_PERSONA_1_START","value":29},{"name":"DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1","value":29},{"name":"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1","value":30},{"name":"DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1","value":31},{"name":"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1","value":32},{"name":"DOTA_LOADOUT_TYPE_HEAD_PERSONA_1","value":33},{"name":"DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1","value":34},{"name":"DOTA_LOADOUT_TYPE_ARMS_PERSONA_1","value":35},{"name":"DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1","value":36},{"name":"DOTA_LOADOUT_TYPE_BELT_PERSONA_1","value":37},{"name":"DOTA_LOADOUT_TYPE_NECK_PERSONA_1","value":38},{"name":"DOTA_LOADOUT_TYPE_BACK_PERSONA_1","value":39},{"name":"DOTA_LOADOUT_TYPE_LEGS_PERSONA_1","value":40},{"name":"DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1","value":41},{"name":"DOTA_LOADOUT_TYPE_TAIL_PERSONA_1","value":42},{"name":"DOTA_LOADOUT_TYPE_MISC_PERSONA_1","value":43},{"name":"DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1","value":44},{"name":"DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1","value":45},{"name":"DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1","value":46},{"name":"DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1","value":47},{"name":"DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1","value":48},{"name":"DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1","value":49},{"name":"DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1","value":50},{"name":"DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1","value":51},{"name":"DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1","value":52},{"name":"DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1","value":53},{"name":"DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1","value":54},{"name":"DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1","value":55},{"name":"DOTA_LOADOUT_PERSONA_1_END","value":56},{"name":"DOTA_LOADOUT_TYPE_VOICE_PERSONA_1","value":56},{"name":"DOTA_LOADOUT_TYPE_PERSONA_SELECTOR","value":57},{"name":"DOTA_LOADOUT_TYPE_COURIER","value":58},{"name":"DOTA_PLAYER_LOADOUT_START","value":58},{"name":"DOTA_LOADOUT_TYPE_ANNOUNCER","value":59},{"name":"DOTA_LOADOUT_TYPE_MEGA_KILLS","value":60},{"name":"DOTA_LOADOUT_TYPE_MUSIC","value":61},{"name":"DOTA_LOADOUT_TYPE_WARD","value":62},{"name":"DOTA_LOADOUT_TYPE_HUD_SKIN","value":63},{"name":"DOTA_LOADOUT_TYPE_LOADING_SCREEN","value":64},{"name":"DOTA_LOADOUT_TYPE_WEATHER","value":65},{"name":"DOTA_LOADOUT_TYPE_HEROIC_STATUE","value":66},{"name":"DOTA_LOADOUT_TYPE_MULTIKILL_BANNER","value":67},{"name":"DOTA_LOADOUT_TYPE_CURSOR_PACK","value":68},{"name":"DOTA_LOADOUT_TYPE_TELEPORT_EFFECT","value":69},{"name":"DOTA_LOADOUT_TYPE_BLINK_EFFECT","value":70},{"name":"DOTA_LOADOUT_TYPE_EMBLEM","value":71},{"name":"DOTA_LOADOUT_TYPE_TERRAIN","value":72},{"name":"DOTA_LOADOUT_TYPE_RADIANT_CREEPS","value":73},{"name":"DOTA_LOADOUT_TYPE_DIRE_CREEPS","value":74},{"name":"DOTA_LOADOUT_TYPE_RADIANT_TOWER","value":75},{"name":"DOTA_LOADOUT_TYPE_DIRE_TOWER","value":76},{"name":"DOTA_LOADOUT_TYPE_VERSUS_SCREEN","value":77},{"name":"DOTA_LOADOUT_TYPE_STREAK_EFFECT","value":78},{"name":"DOTA_LOADOUT_TYPE_KILL_EFFECT","value":79},{"name":"DOTA_LOADOUT_TYPE_DEATH_EFFECT","value":80},{"name":"DOTA_LOADOUT_TYPE_HEAD_EFFECT","value":81},{"name":"DOTA_LOADOUT_TYPE_MAP_EFFECT","value":82},{"name":"DOTA_LOADOUT_TYPE_COURIER_EFFECT","value":83},{"name":"DOTA_LOADOUT_TYPE_RADIANT_SIEGE_CREEPS","value":84},{"name":"DOTA_LOADOUT_TYPE_DIRE_SIEGE_CREEPS","value":85},{"name":"DOTA_PLAYER_LOADOUT_END","value":85},{"name":"DOTA_LOADOUT_TYPE_NONE","value":86},{"name":"DOTA_LOADOUT_TYPE_COUNT","value":87}]},{"kind":"enum","name":"DOTASpeechType_t","available":"both","members":[{"name":"DOTA_SPEECH_USER_INVALID","value":0},{"name":"DOTA_SPEECH_USER_SINGLE","value":1},{"name":"DOTA_SPEECH_USER_TEAM","value":2},{"name":"DOTA_SPEECH_USER_TEAM_NEARBY","value":3},{"name":"DOTA_SPEECH_USER_NEARBY","value":4},{"name":"DOTA_SPEECH_USER_ALL","value":5},{"name":"DOTA_SPEECH_GOOD_TEAM","value":6},{"name":"DOTA_SPEECH_BAD_TEAM","value":7},{"name":"DOTA_SPEECH_SPECTATOR","value":8},{"name":"DOTA_SPEECH_USER_TEAM_NOSPECTATOR","value":9},{"name":"DOTA_SPEECH_RECIPIENT_TYPE_MAX","value":10}]},{"kind":"enum","name":"DOTATeam_t","available":"both","members":[{"name":"DOTA_TEAM_FIRST","value":2},{"name":"DOTA_TEAM_GOODGUYS","value":2},{"name":"DOTA_TEAM_BADGUYS","value":3},{"name":"DOTA_TEAM_NEUTRALS","value":4},{"name":"DOTA_TEAM_NOTEAM","value":5},{"name":"DOTA_TEAM_CUSTOM_1","value":6},{"name":"DOTA_TEAM_CUSTOM_MIN","value":6},{"name":"DOTA_TEAM_CUSTOM_2","value":7},{"name":"DOTA_TEAM_CUSTOM_3","value":8},{"name":"DOTA_TEAM_CUSTOM_COUNT","value":8},{"name":"DOTA_TEAM_CUSTOM_4","value":9},{"name":"DOTA_TEAM_CUSTOM_5","value":10},{"name":"DOTA_TEAM_CUSTOM_6","value":11},{"name":"DOTA_TEAM_CUSTOM_7","value":12},{"name":"DOTA_TEAM_CUSTOM_8","value":13},{"name":"DOTA_TEAM_CUSTOM_MAX","value":13},{"name":"DOTA_TEAM_COUNT","value":14}]},{"kind":"enum","name":"DOTAUnitAttackCapability_t","available":"server","members":[{"name":"DOTA_UNIT_CAP_NO_ATTACK","value":0},{"name":"DOTA_UNIT_CAP_MELEE_ATTACK","value":1},{"name":"DOTA_UNIT_CAP_RANGED_ATTACK","value":2},{"name":"DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT","value":3},{"name":"DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL","value":4}]},{"kind":"enum","name":"DOTAUnitMoveCapability_t","available":"server","members":[{"name":"DOTA_UNIT_CAP_MOVE_NONE","value":0},{"name":"DOTA_UNIT_CAP_MOVE_GROUND","value":1},{"name":"DOTA_UNIT_CAP_MOVE_FLY","value":2}]},{"kind":"enum","name":"dotaunitorder_t","available":"server","members":[{"name":"DOTA_UNIT_ORDER_NONE","value":0},{"name":"DOTA_UNIT_ORDER_MOVE_TO_POSITION","value":1},{"name":"DOTA_UNIT_ORDER_MOVE_TO_TARGET","value":2},{"name":"DOTA_UNIT_ORDER_ATTACK_MOVE","value":3},{"name":"DOTA_UNIT_ORDER_ATTACK_TARGET","value":4},{"name":"DOTA_UNIT_ORDER_CAST_POSITION","value":5},{"name":"DOTA_UNIT_ORDER_CAST_TARGET","value":6},{"name":"DOTA_UNIT_ORDER_CAST_TARGET_TREE","value":7},{"name":"DOTA_UNIT_ORDER_CAST_NO_TARGET","value":8},{"name":"DOTA_UNIT_ORDER_CAST_TOGGLE","value":9},{"name":"DOTA_UNIT_ORDER_HOLD_POSITION","value":10},{"name":"DOTA_UNIT_ORDER_TRAIN_ABILITY","value":11},{"name":"DOTA_UNIT_ORDER_DROP_ITEM","value":12},{"name":"DOTA_UNIT_ORDER_GIVE_ITEM","value":13},{"name":"DOTA_UNIT_ORDER_PICKUP_ITEM","value":14},{"name":"DOTA_UNIT_ORDER_PICKUP_RUNE","value":15},{"name":"DOTA_UNIT_ORDER_PURCHASE_ITEM","value":16},{"name":"DOTA_UNIT_ORDER_SELL_ITEM","value":17},{"name":"DOTA_UNIT_ORDER_DISASSEMBLE_ITEM","value":18},{"name":"DOTA_UNIT_ORDER_MOVE_ITEM","value":19},{"name":"DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO","value":20},{"name":"DOTA_UNIT_ORDER_STOP","value":21},{"name":"DOTA_UNIT_ORDER_TAUNT","value":22},{"name":"DOTA_UNIT_ORDER_BUYBACK","value":23},{"name":"DOTA_UNIT_ORDER_GLYPH","value":24},{"name":"DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH","value":25},{"name":"DOTA_UNIT_ORDER_CAST_RUNE","value":26},{"name":"DOTA_UNIT_ORDER_PING_ABILITY","value":27},{"name":"DOTA_UNIT_ORDER_MOVE_TO_DIRECTION","value":28},{"name":"DOTA_UNIT_ORDER_PATROL","value":29},{"name":"DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION","value":30},{"name":"DOTA_UNIT_ORDER_RADAR","value":31},{"name":"DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK","value":32},{"name":"DOTA_UNIT_ORDER_CONTINUE","value":33},{"name":"DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED","value":34},{"name":"DOTA_UNIT_ORDER_CAST_RIVER_PAINT","value":35},{"name":"DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT","value":36},{"name":"DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN","value":37},{"name":"DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH","value":38},{"name":"DOTA_UNIT_ORDER_MOVE_RELATIVE","value":39}]},{"kind":"enum","name":"EDOTA_ModifyGold_Reason","available":"server","members":[{"name":"DOTA_ModifyGold_Unspecified","value":0},{"name":"DOTA_ModifyGold_Death","value":1},{"name":"DOTA_ModifyGold_Buyback","value":2},{"name":"DOTA_ModifyGold_PurchaseConsumable","value":3},{"name":"DOTA_ModifyGold_PurchaseItem","value":4},{"name":"DOTA_ModifyGold_AbandonedRedistribute","value":5},{"name":"DOTA_ModifyGold_SellItem","value":6},{"name":"DOTA_ModifyGold_AbilityCost","value":7},{"name":"DOTA_ModifyGold_CheatCommand","value":8},{"name":"DOTA_ModifyGold_SelectionPenalty","value":9},{"name":"DOTA_ModifyGold_GameTick","value":10},{"name":"DOTA_ModifyGold_Building","value":11},{"name":"DOTA_ModifyGold_HeroKill","value":12},{"name":"DOTA_ModifyGold_CreepKill","value":13},{"name":"DOTA_ModifyGold_NeutralKill","value":14},{"name":"DOTA_ModifyGold_RoshanKill","value":15},{"name":"DOTA_ModifyGold_CourierKill","value":16},{"name":"DOTA_ModifyGold_BountyRune","value":17},{"name":"DOTA_ModifyGold_SharedGold","value":18},{"name":"DOTA_ModifyGold_AbilityGold","value":19},{"name":"DOTA_ModifyGold_WardKill","value":20},{"name":"DOTA_ModifyGold_CourierKilledByThisPlayer","value":21}]},{"kind":"enum","name":"EDOTA_ModifyXP_Reason","available":"server","members":[{"name":"DOTA_ModifyXP_Unspecified","value":0},{"name":"DOTA_ModifyXP_HeroKill","value":1},{"name":"DOTA_ModifyXP_CreepKill","value":2},{"name":"DOTA_ModifyXP_RoshanKill","value":3},{"name":"DOTA_ModifyXP_TomeOfKnowledge","value":4},{"name":"DOTA_ModifyXP_Outpost","value":5},{"name":"DOTA_ModifyXP_MAX","value":6}]},{"kind":"enum","name":"EntityEffects","available":"server","members":[{"name":"EF_NODRAW","value":32}]},{"kind":"enum","name":"EntityThinkPhase","available":"both","members":[{"name":"PRESIM","value":0},{"name":"PRESENSING","value":1},{"name":"POSTSENSING","value":2}]},{"kind":"enum","name":"EShareAbility","available":"server","members":[{"name":"ITEM_FULLY_SHAREABLE","value":0},{"name":"ITEM_PARTIALLY_SHAREABLE","value":1},{"name":"ITEM_NOT_SHAREABLE","value":2}]},{"kind":"enum","name":"FindOrder","available":"both","members":[{"name":"FIND_ANY_ORDER","value":0},{"name":"FIND_CLOSEST","value":1},{"name":"FIND_FARTHEST","value":2}]},{"kind":"enum","name":"GameActivity_t","available":"both","members":[{"name":"ACT_RESET","value":0},{"name":"ACT_IDLE","value":1},{"name":"ACT_TRANSITION","value":2},{"name":"ACT_COVER","value":3},{"name":"ACT_COVER_MED","value":4},{"name":"ACT_COVER_LOW","value":5},{"name":"ACT_WALK","value":6},{"name":"ACT_WALK_AIM","value":7},{"name":"ACT_WALK_CROUCH","value":8},{"name":"ACT_WALK_CROUCH_AIM","value":9},{"name":"ACT_RUN","value":10},{"name":"ACT_RUN_AIM","value":11},{"name":"ACT_RUN_CROUCH","value":12},{"name":"ACT_RUN_CROUCH_AIM","value":13},{"name":"ACT_RUN_PROTECTED","value":14},{"name":"ACT_SCRIPT_CUSTOM_MOVE","value":15},{"name":"ACT_RANGE_ATTACK1","value":16},{"name":"ACT_RANGE_ATTACK2","value":17},{"name":"ACT_RANGE_ATTACK1_LOW","value":18},{"name":"ACT_RANGE_ATTACK2_LOW","value":19},{"name":"ACT_DIESIMPLE","value":20},{"name":"ACT_DIEBACKWARD","value":21},{"name":"ACT_DIEFORWARD","value":22},{"name":"ACT_DIEVIOLENT","value":23},{"name":"ACT_DIERAGDOLL","value":24},{"name":"ACT_FLY","value":25},{"name":"ACT_HOVER","value":26},{"name":"ACT_GLIDE","value":27},{"name":"ACT_SWIM","value":28},{"name":"ACT_JUMP","value":29},{"name":"ACT_HOP","value":30},{"name":"ACT_LEAP","value":31},{"name":"ACT_LAND","value":32},{"name":"ACT_CLIMB_UP","value":33},{"name":"ACT_CLIMB_DOWN","value":34},{"name":"ACT_CLIMB_DISMOUNT","value":35},{"name":"ACT_SHIPLADDER_UP","value":36},{"name":"ACT_SHIPLADDER_DOWN","value":37},{"name":"ACT_STRAFE_LEFT","value":38},{"name":"ACT_STRAFE_RIGHT","value":39},{"name":"ACT_ROLL_LEFT","value":40},{"name":"ACT_ROLL_RIGHT","value":41},{"name":"ACT_TURN_LEFT","value":42},{"name":"ACT_TURN_RIGHT","value":43},{"name":"ACT_CROUCH","value":44},{"name":"ACT_CROUCHIDLE","value":45},{"name":"ACT_STAND","value":46},{"name":"ACT_USE","value":47},{"name":"ACT_ALIEN_BURROW_IDLE","value":48},{"name":"ACT_ALIEN_BURROW_OUT","value":49},{"name":"ACT_SIGNAL1","value":50},{"name":"ACT_SIGNAL2","value":51},{"name":"ACT_SIGNAL3","value":52},{"name":"ACT_SIGNAL_ADVANCE","value":53},{"name":"ACT_SIGNAL_FORWARD","value":54},{"name":"ACT_SIGNAL_GROUP","value":55},{"name":"ACT_SIGNAL_HALT","value":56},{"name":"ACT_SIGNAL_LEFT","value":57},{"name":"ACT_SIGNAL_RIGHT","value":58},{"name":"ACT_SIGNAL_TAKECOVER","value":59},{"name":"ACT_LOOKBACK_RIGHT","value":60},{"name":"ACT_LOOKBACK_LEFT","value":61},{"name":"ACT_COWER","value":62},{"name":"ACT_SMALL_FLINCH","value":63},{"name":"ACT_BIG_FLINCH","value":64},{"name":"ACT_MELEE_ATTACK1","value":65},{"name":"ACT_MELEE_ATTACK2","value":66},{"name":"ACT_RELOAD","value":67},{"name":"ACT_RELOAD_START","value":68},{"name":"ACT_RELOAD_FINISH","value":69},{"name":"ACT_RELOAD_LOW","value":70},{"name":"ACT_ARM","value":71},{"name":"ACT_DISARM","value":72},{"name":"ACT_DROP_WEAPON","value":73},{"name":"ACT_DROP_WEAPON_SHOTGUN","value":74},{"name":"ACT_PICKUP_GROUND","value":75},{"name":"ACT_PICKUP_RACK","value":76},{"name":"ACT_IDLE_ANGRY","value":77},{"name":"ACT_IDLE_RELAXED","value":78},{"name":"ACT_IDLE_STIMULATED","value":79},{"name":"ACT_IDLE_AGITATED","value":80},{"name":"ACT_IDLE_STEALTH","value":81},{"name":"ACT_IDLE_HURT","value":82},{"name":"ACT_WALK_RELAXED","value":83},{"name":"ACT_WALK_STIMULATED","value":84},{"name":"ACT_WALK_AGITATED","value":85},{"name":"ACT_WALK_STEALTH","value":86},{"name":"ACT_RUN_RELAXED","value":87},{"name":"ACT_RUN_STIMULATED","value":88},{"name":"ACT_RUN_AGITATED","value":89},{"name":"ACT_RUN_STEALTH","value":90},{"name":"ACT_IDLE_AIM_RELAXED","value":91},{"name":"ACT_IDLE_AIM_STIMULATED","value":92},{"name":"ACT_IDLE_AIM_AGITATED","value":93},{"name":"ACT_IDLE_AIM_STEALTH","value":94},{"name":"ACT_WALK_AIM_RELAXED","value":95},{"name":"ACT_WALK_AIM_STIMULATED","value":96},{"name":"ACT_WALK_AIM_AGITATED","value":97},{"name":"ACT_WALK_AIM_STEALTH","value":98},{"name":"ACT_RUN_AIM_RELAXED","value":99},{"name":"ACT_RUN_AIM_STIMULATED","value":100},{"name":"ACT_RUN_AIM_AGITATED","value":101},{"name":"ACT_RUN_AIM_STEALTH","value":102},{"name":"ACT_CROUCHIDLE_STIMULATED","value":103},{"name":"ACT_CROUCHIDLE_AIM_STIMULATED","value":104},{"name":"ACT_CROUCHIDLE_AGITATED","value":105},{"name":"ACT_WALK_HURT","value":106},{"name":"ACT_RUN_HURT","value":107},{"name":"ACT_SPECIAL_ATTACK1","value":108},{"name":"ACT_SPECIAL_ATTACK2","value":109},{"name":"ACT_COMBAT_IDLE","value":110},{"name":"ACT_WALK_SCARED","value":111},{"name":"ACT_RUN_SCARED","value":112},{"name":"ACT_VICTORY_DANCE","value":113},{"name":"ACT_DIE_HEADSHOT","value":114},{"name":"ACT_DIE_CHESTSHOT","value":115},{"name":"ACT_DIE_GUTSHOT","value":116},{"name":"ACT_DIE_BACKSHOT","value":117},{"name":"ACT_FLINCH_HEAD","value":118},{"name":"ACT_FLINCH_CHEST","value":119},{"name":"ACT_FLINCH_STOMACH","value":120},{"name":"ACT_FLINCH_LEFTARM","value":121},{"name":"ACT_FLINCH_RIGHTARM","value":122},{"name":"ACT_FLINCH_LEFTLEG","value":123},{"name":"ACT_FLINCH_RIGHTLEG","value":124},{"name":"ACT_FLINCH_PHYSICS","value":125},{"name":"ACT_FLINCH_HEAD_BACK","value":126},{"name":"ACT_FLINCH_CHEST_BACK","value":127},{"name":"ACT_FLINCH_STOMACH_BACK","value":128},{"name":"ACT_FLINCH_CROUCH_FRONT","value":129},{"name":"ACT_FLINCH_CROUCH_BACK","value":130},{"name":"ACT_FLINCH_CROUCH_LEFT","value":131},{"name":"ACT_FLINCH_CROUCH_RIGHT","value":132},{"name":"ACT_IDLE_ON_FIRE","value":133},{"name":"ACT_WALK_ON_FIRE","value":134},{"name":"ACT_RUN_ON_FIRE","value":135},{"name":"ACT_180_LEFT","value":137},{"name":"ACT_180_RIGHT","value":138},{"name":"ACT_90_LEFT","value":139},{"name":"ACT_90_RIGHT","value":140},{"name":"ACT_STEP_LEFT","value":141},{"name":"ACT_STEP_RIGHT","value":142},{"name":"ACT_STEP_BACK","value":143},{"name":"ACT_STEP_FORE","value":144},{"name":"ACT_GESTURE_RANGE_ATTACK1","value":145},{"name":"ACT_GESTURE_RANGE_ATTACK2","value":146},{"name":"ACT_GESTURE_MELEE_ATTACK1","value":147},{"name":"ACT_GESTURE_MELEE_ATTACK2","value":148},{"name":"ACT_GESTURE_RANGE_ATTACK1_LOW","value":149},{"name":"ACT_GESTURE_RANGE_ATTACK2_LOW","value":150},{"name":"ACT_MELEE_ATTACK_SWING_GESTURE","value":151},{"name":"ACT_GESTURE_SMALL_FLINCH","value":152},{"name":"ACT_GESTURE_BIG_FLINCH","value":153},{"name":"ACT_GESTURE_FLINCH_BLAST","value":154},{"name":"ACT_GESTURE_FLINCH_BLAST_SHOTGUN","value":155},{"name":"ACT_GESTURE_FLINCH_BLAST_DAMAGED","value":156},{"name":"ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN","value":157},{"name":"ACT_GESTURE_FLINCH_HEAD","value":158},{"name":"ACT_GESTURE_FLINCH_CHEST","value":159},{"name":"ACT_GESTURE_FLINCH_STOMACH","value":160},{"name":"ACT_GESTURE_FLINCH_LEFTARM","value":161},{"name":"ACT_GESTURE_FLINCH_RIGHTARM","value":162},{"name":"ACT_GESTURE_FLINCH_LEFTLEG","value":163},{"name":"ACT_GESTURE_FLINCH_RIGHTLEG","value":164},{"name":"ACT_GESTURE_TURN_LEFT","value":165},{"name":"ACT_GESTURE_TURN_RIGHT","value":166},{"name":"ACT_GESTURE_TURN_LEFT45","value":167},{"name":"ACT_GESTURE_TURN_RIGHT45","value":168},{"name":"ACT_GESTURE_TURN_LEFT90","value":169},{"name":"ACT_GESTURE_TURN_RIGHT90","value":170},{"name":"ACT_GESTURE_TURN_LEFT45_FLAT","value":171},{"name":"ACT_GESTURE_TURN_RIGHT45_FLAT","value":172},{"name":"ACT_GESTURE_TURN_LEFT90_FLAT","value":173},{"name":"ACT_GESTURE_TURN_RIGHT90_FLAT","value":174},{"name":"ACT_BARNACLE_HIT","value":175},{"name":"ACT_BARNACLE_PULL","value":176},{"name":"ACT_BARNACLE_CHOMP","value":177},{"name":"ACT_BARNACLE_CHEW","value":178},{"name":"ACT_DO_NOT_DISTURB","value":179},{"name":"ACT_SPECIFIC_SEQUENCE","value":180},{"name":"ACT_VM_DEPLOY","value":181},{"name":"ACT_VM_RELOAD_EMPTY","value":182},{"name":"ACT_VM_DRAW","value":183},{"name":"ACT_VM_HOLSTER","value":184},{"name":"ACT_VM_IDLE","value":185},{"name":"ACT_VM_FIDGET","value":186},{"name":"ACT_VM_PULLBACK","value":187},{"name":"ACT_VM_PULLBACK_HIGH","value":188},{"name":"ACT_VM_PULLBACK_LOW","value":189},{"name":"ACT_VM_THROW","value":190},{"name":"ACT_VM_DROP","value":191},{"name":"ACT_VM_PULLPIN","value":192},{"name":"ACT_VM_PRIMARYATTACK","value":193},{"name":"ACT_VM_SECONDARYATTACK","value":194},{"name":"ACT_VM_RELOAD","value":195},{"name":"ACT_VM_DRYFIRE","value":196},{"name":"ACT_VM_HITLEFT","value":197},{"name":"ACT_VM_HITLEFT2","value":198},{"name":"ACT_VM_HITRIGHT","value":199},{"name":"ACT_VM_HITRIGHT2","value":200},{"name":"ACT_VM_HITCENTER","value":201},{"name":"ACT_VM_HITCENTER2","value":202},{"name":"ACT_VM_MISSLEFT","value":203},{"name":"ACT_VM_MISSLEFT2","value":204},{"name":"ACT_VM_MISSRIGHT","value":205},{"name":"ACT_VM_MISSRIGHT2","value":206},{"name":"ACT_VM_MISSCENTER","value":207},{"name":"ACT_VM_MISSCENTER2","value":208},{"name":"ACT_VM_HAULBACK","value":209},{"name":"ACT_VM_SWINGHARD","value":210},{"name":"ACT_VM_SWINGMISS","value":211},{"name":"ACT_VM_SWINGHIT","value":212},{"name":"ACT_VM_IDLE_TO_LOWERED","value":213},{"name":"ACT_VM_IDLE_LOWERED","value":214},{"name":"ACT_VM_LOWERED_TO_IDLE","value":215},{"name":"ACT_VM_RECOIL1","value":216},{"name":"ACT_VM_RECOIL2","value":217},{"name":"ACT_VM_RECOIL3","value":218},{"name":"ACT_VM_PICKUP","value":219},{"name":"ACT_VM_RELEASE","value":220},{"name":"ACT_VM_MAUL_LOOP","value":221},{"name":"ACT_VM_ATTACH_SILENCER","value":222},{"name":"ACT_VM_DETACH_SILENCER","value":223},{"name":"ACT_SLAM_STICKWALL_IDLE","value":224},{"name":"ACT_SLAM_STICKWALL_ND_IDLE","value":225},{"name":"ACT_SLAM_STICKWALL_ATTACH","value":226},{"name":"ACT_SLAM_STICKWALL_ATTACH2","value":227},{"name":"ACT_SLAM_STICKWALL_ND_ATTACH","value":228},{"name":"ACT_SLAM_STICKWALL_ND_ATTACH2","value":229},{"name":"ACT_SLAM_STICKWALL_DETONATE","value":230},{"name":"ACT_SLAM_STICKWALL_DETONATOR_HOLSTER","value":231},{"name":"ACT_SLAM_STICKWALL_DRAW","value":232},{"name":"ACT_SLAM_STICKWALL_ND_DRAW","value":233},{"name":"ACT_SLAM_STICKWALL_TO_THROW","value":234},{"name":"ACT_SLAM_STICKWALL_TO_THROW_ND","value":235},{"name":"ACT_SLAM_STICKWALL_TO_TRIPMINE_ND","value":236},{"name":"ACT_SLAM_THROW_IDLE","value":237},{"name":"ACT_SLAM_THROW_ND_IDLE","value":238},{"name":"ACT_SLAM_THROW_THROW","value":239},{"name":"ACT_SLAM_THROW_THROW2","value":240},{"name":"ACT_SLAM_THROW_THROW_ND","value":241},{"name":"ACT_SLAM_THROW_THROW_ND2","value":242},{"name":"ACT_SLAM_THROW_DRAW","value":243},{"name":"ACT_SLAM_THROW_ND_DRAW","value":244},{"name":"ACT_SLAM_THROW_TO_STICKWALL","value":245},{"name":"ACT_SLAM_THROW_TO_STICKWALL_ND","value":246},{"name":"ACT_SLAM_THROW_DETONATE","value":247},{"name":"ACT_SLAM_THROW_DETONATOR_HOLSTER","value":248},{"name":"ACT_SLAM_THROW_TO_TRIPMINE_ND","value":249},{"name":"ACT_SLAM_TRIPMINE_IDLE","value":250},{"name":"ACT_SLAM_TRIPMINE_DRAW","value":251},{"name":"ACT_SLAM_TRIPMINE_ATTACH","value":252},{"name":"ACT_SLAM_TRIPMINE_ATTACH2","value":253},{"name":"ACT_SLAM_TRIPMINE_TO_STICKWALL_ND","value":254},{"name":"ACT_SLAM_TRIPMINE_TO_THROW_ND","value":255},{"name":"ACT_SLAM_DETONATOR_IDLE","value":256},{"name":"ACT_SLAM_DETONATOR_DRAW","value":257},{"name":"ACT_SLAM_DETONATOR_DETONATE","value":258},{"name":"ACT_SLAM_DETONATOR_HOLSTER","value":259},{"name":"ACT_SLAM_DETONATOR_STICKWALL_DRAW","value":260},{"name":"ACT_SLAM_DETONATOR_THROW_DRAW","value":261},{"name":"ACT_SHOTGUN_RELOAD_START","value":262},{"name":"ACT_SHOTGUN_RELOAD_FINISH","value":263},{"name":"ACT_SHOTGUN_PUMP","value":264},{"name":"ACT_SMG2_IDLE2","value":265},{"name":"ACT_SMG2_FIRE2","value":266},{"name":"ACT_SMG2_DRAW2","value":267},{"name":"ACT_SMG2_RELOAD2","value":268},{"name":"ACT_SMG2_DRYFIRE2","value":269},{"name":"ACT_SMG2_TOAUTO","value":270},{"name":"ACT_SMG2_TOBURST","value":271},{"name":"ACT_PHYSCANNON_UPGRADE","value":272},{"name":"ACT_RANGE_ATTACK_AR1","value":273},{"name":"ACT_RANGE_ATTACK_AR2","value":274},{"name":"ACT_RANGE_ATTACK_AR2_LOW","value":275},{"name":"ACT_RANGE_ATTACK_AR2_GRENADE","value":276},{"name":"ACT_RANGE_ATTACK_HMG1","value":277},{"name":"ACT_RANGE_ATTACK_ML","value":278},{"name":"ACT_RANGE_ATTACK_SMG1","value":279},{"name":"ACT_RANGE_ATTACK_SMG1_LOW","value":280},{"name":"ACT_RANGE_ATTACK_SMG2","value":281},{"name":"ACT_RANGE_ATTACK_SHOTGUN","value":282},{"name":"ACT_RANGE_ATTACK_SHOTGUN_LOW","value":283},{"name":"ACT_RANGE_ATTACK_PISTOL","value":284},{"name":"ACT_RANGE_ATTACK_PISTOL_LOW","value":285},{"name":"ACT_RANGE_ATTACK_SLAM","value":286},{"name":"ACT_RANGE_ATTACK_TRIPWIRE","value":287},{"name":"ACT_RANGE_ATTACK_THROW","value":288},{"name":"ACT_RANGE_ATTACK_SNIPER_RIFLE","value":289},{"name":"ACT_RANGE_ATTACK_RPG","value":290},{"name":"ACT_MELEE_ATTACK_SWING","value":291},{"name":"ACT_RANGE_AIM_LOW","value":292},{"name":"ACT_RANGE_AIM_SMG1_LOW","value":293},{"name":"ACT_RANGE_AIM_PISTOL_LOW","value":294},{"name":"ACT_RANGE_AIM_AR2_LOW","value":295},{"name":"ACT_COVER_PISTOL_LOW","value":296},{"name":"ACT_COVER_SMG1_LOW","value":297},{"name":"ACT_GESTURE_RANGE_ATTACK_AR1","value":298},{"name":"ACT_GESTURE_RANGE_ATTACK_AR2","value":299},{"name":"ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE","value":300},{"name":"ACT_GESTURE_RANGE_ATTACK_HMG1","value":301},{"name":"ACT_GESTURE_RANGE_ATTACK_ML","value":302},{"name":"ACT_GESTURE_RANGE_ATTACK_SMG1","value":303},{"name":"ACT_GESTURE_RANGE_ATTACK_SMG1_LOW","value":304},{"name":"ACT_GESTURE_RANGE_ATTACK_SMG2","value":305},{"name":"ACT_GESTURE_RANGE_ATTACK_SHOTGUN","value":306},{"name":"ACT_GESTURE_RANGE_ATTACK_PISTOL","value":307},{"name":"ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW","value":308},{"name":"ACT_GESTURE_RANGE_ATTACK_SLAM","value":309},{"name":"ACT_GESTURE_RANGE_ATTACK_TRIPWIRE","value":310},{"name":"ACT_GESTURE_RANGE_ATTACK_THROW","value":311},{"name":"ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE","value":312},{"name":"ACT_GESTURE_MELEE_ATTACK_SWING","value":313},{"name":"ACT_IDLE_RIFLE","value":314},{"name":"ACT_IDLE_SMG1","value":315},{"name":"ACT_IDLE_ANGRY_SMG1","value":316},{"name":"ACT_IDLE_PISTOL","value":317},{"name":"ACT_IDLE_ANGRY_PISTOL","value":318},{"name":"ACT_IDLE_ANGRY_SHOTGUN","value":319},{"name":"ACT_IDLE_STEALTH_PISTOL","value":320},{"name":"ACT_IDLE_PACKAGE","value":321},{"name":"ACT_WALK_PACKAGE","value":322},{"name":"ACT_IDLE_SUITCASE","value":323},{"name":"ACT_WALK_SUITCASE","value":324},{"name":"ACT_IDLE_SMG1_RELAXED","value":325},{"name":"ACT_IDLE_SMG1_STIMULATED","value":326},{"name":"ACT_WALK_RIFLE_RELAXED","value":327},{"name":"ACT_RUN_RIFLE_RELAXED","value":328},{"name":"ACT_WALK_RIFLE_STIMULATED","value":329},{"name":"ACT_RUN_RIFLE_STIMULATED","value":330},{"name":"ACT_IDLE_AIM_RIFLE_STIMULATED","value":331},{"name":"ACT_WALK_AIM_RIFLE_STIMULATED","value":332},{"name":"ACT_RUN_AIM_RIFLE_STIMULATED","value":333},{"name":"ACT_IDLE_SHOTGUN_RELAXED","value":334},{"name":"ACT_IDLE_SHOTGUN_STIMULATED","value":335},{"name":"ACT_IDLE_SHOTGUN_AGITATED","value":336},{"name":"ACT_WALK_ANGRY","value":337},{"name":"ACT_POLICE_HARASS1","value":338},{"name":"ACT_POLICE_HARASS2","value":339},{"name":"ACT_IDLE_MANNEDGUN","value":340},{"name":"ACT_IDLE_MELEE","value":341},{"name":"ACT_IDLE_ANGRY_MELEE","value":342},{"name":"ACT_IDLE_RPG_RELAXED","value":343},{"name":"ACT_IDLE_RPG","value":344},{"name":"ACT_IDLE_ANGRY_RPG","value":345},{"name":"ACT_COVER_LOW_RPG","value":346},{"name":"ACT_WALK_RPG","value":347},{"name":"ACT_RUN_RPG","value":348},{"name":"ACT_WALK_CROUCH_RPG","value":349},{"name":"ACT_RUN_CROUCH_RPG","value":350},{"name":"ACT_WALK_RPG_RELAXED","value":351},{"name":"ACT_RUN_RPG_RELAXED","value":352},{"name":"ACT_WALK_RIFLE","value":353},{"name":"ACT_WALK_AIM_RIFLE","value":354},{"name":"ACT_WALK_CROUCH_RIFLE","value":355},{"name":"ACT_WALK_CROUCH_AIM_RIFLE","value":356},{"name":"ACT_RUN_RIFLE","value":357},{"name":"ACT_RUN_AIM_RIFLE","value":358},{"name":"ACT_RUN_CROUCH_RIFLE","value":359},{"name":"ACT_RUN_CROUCH_AIM_RIFLE","value":360},{"name":"ACT_RUN_STEALTH_PISTOL","value":361},{"name":"ACT_WALK_AIM_SHOTGUN","value":362},{"name":"ACT_RUN_AIM_SHOTGUN","value":363},{"name":"ACT_WALK_PISTOL","value":364},{"name":"ACT_RUN_PISTOL","value":365},{"name":"ACT_WALK_AIM_PISTOL","value":366},{"name":"ACT_RUN_AIM_PISTOL","value":367},{"name":"ACT_WALK_STEALTH_PISTOL","value":368},{"name":"ACT_WALK_AIM_STEALTH_PISTOL","value":369},{"name":"ACT_RUN_AIM_STEALTH_PISTOL","value":370},{"name":"ACT_RELOAD_PISTOL","value":371},{"name":"ACT_RELOAD_PISTOL_LOW","value":372},{"name":"ACT_RELOAD_SMG1","value":373},{"name":"ACT_RELOAD_SMG1_LOW","value":374},{"name":"ACT_RELOAD_SHOTGUN","value":375},{"name":"ACT_RELOAD_SHOTGUN_LOW","value":376},{"name":"ACT_GESTURE_RELOAD","value":377},{"name":"ACT_GESTURE_RELOAD_PISTOL","value":378},{"name":"ACT_GESTURE_RELOAD_SMG1","value":379},{"name":"ACT_GESTURE_RELOAD_SHOTGUN","value":380},{"name":"ACT_BUSY_LEAN_LEFT","value":381},{"name":"ACT_BUSY_LEAN_LEFT_ENTRY","value":382},{"name":"ACT_BUSY_LEAN_LEFT_EXIT","value":383},{"name":"ACT_BUSY_LEAN_BACK","value":384},{"name":"ACT_BUSY_LEAN_BACK_ENTRY","value":385},{"name":"ACT_BUSY_LEAN_BACK_EXIT","value":386},{"name":"ACT_BUSY_SIT_GROUND","value":387},{"name":"ACT_BUSY_SIT_GROUND_ENTRY","value":388},{"name":"ACT_BUSY_SIT_GROUND_EXIT","value":389},{"name":"ACT_BUSY_SIT_CHAIR","value":390},{"name":"ACT_BUSY_SIT_CHAIR_ENTRY","value":391},{"name":"ACT_BUSY_SIT_CHAIR_EXIT","value":392},{"name":"ACT_BUSY_STAND","value":393},{"name":"ACT_BUSY_QUEUE","value":394},{"name":"ACT_DUCK_DODGE","value":395},{"name":"ACT_DIE_BARNACLE_SWALLOW","value":396},{"name":"ACT_GESTURE_BARNACLE_STRANGLE","value":397},{"name":"ACT_PHYSCANNON_DETACH","value":398},{"name":"ACT_PHYSCANNON_ANIMATE","value":399},{"name":"ACT_PHYSCANNON_ANIMATE_PRE","value":400},{"name":"ACT_PHYSCANNON_ANIMATE_POST","value":401},{"name":"ACT_DIE_FRONTSIDE","value":402},{"name":"ACT_DIE_RIGHTSIDE","value":403},{"name":"ACT_DIE_BACKSIDE","value":404},{"name":"ACT_DIE_LEFTSIDE","value":405},{"name":"ACT_DIE_CROUCH_FRONTSIDE","value":406},{"name":"ACT_DIE_CROUCH_RIGHTSIDE","value":407},{"name":"ACT_DIE_CROUCH_BACKSIDE","value":408},{"name":"ACT_DIE_CROUCH_LEFTSIDE","value":409},{"name":"ACT_DIE_INCAP","value":410},{"name":"ACT_DIE_STANDING","value":411},{"name":"ACT_OPEN_DOOR","value":412},{"name":"ACT_DI_ALYX_ZOMBIE_MELEE","value":413},{"name":"ACT_DI_ALYX_ZOMBIE_TORSO_MELEE","value":414},{"name":"ACT_DI_ALYX_HEADCRAB_MELEE","value":415},{"name":"ACT_DI_ALYX_ANTLION","value":416},{"name":"ACT_DI_ALYX_ZOMBIE_SHOTGUN64","value":417},{"name":"ACT_DI_ALYX_ZOMBIE_SHOTGUN26","value":418},{"name":"ACT_READINESS_RELAXED_TO_STIMULATED","value":419},{"name":"ACT_READINESS_RELAXED_TO_STIMULATED_WALK","value":420},{"name":"ACT_READINESS_AGITATED_TO_STIMULATED","value":421},{"name":"ACT_READINESS_STIMULATED_TO_RELAXED","value":422},{"name":"ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED","value":423},{"name":"ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK","value":424},{"name":"ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED","value":425},{"name":"ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED","value":426},{"name":"ACT_IDLE_CARRY","value":427},{"name":"ACT_WALK_CARRY","value":428},{"name":"ACT_STARTDYING","value":429},{"name":"ACT_DYINGLOOP","value":430},{"name":"ACT_DYINGTODEAD","value":431},{"name":"ACT_RIDE_MANNED_GUN","value":432},{"name":"ACT_VM_SPRINT_ENTER","value":433},{"name":"ACT_VM_SPRINT_IDLE","value":434},{"name":"ACT_VM_SPRINT_LEAVE","value":435},{"name":"ACT_FIRE_START","value":436},{"name":"ACT_FIRE_LOOP","value":437},{"name":"ACT_FIRE_END","value":438},{"name":"ACT_CROUCHING_GRENADEIDLE","value":439},{"name":"ACT_CROUCHING_GRENADEREADY","value":440},{"name":"ACT_CROUCHING_PRIMARYATTACK","value":441},{"name":"ACT_OVERLAY_GRENADEIDLE","value":442},{"name":"ACT_OVERLAY_GRENADEREADY","value":443},{"name":"ACT_OVERLAY_PRIMARYATTACK","value":444},{"name":"ACT_OVERLAY_SHIELD_UP","value":445},{"name":"ACT_OVERLAY_SHIELD_DOWN","value":446},{"name":"ACT_OVERLAY_SHIELD_UP_IDLE","value":447},{"name":"ACT_OVERLAY_SHIELD_ATTACK","value":448},{"name":"ACT_OVERLAY_SHIELD_KNOCKBACK","value":449},{"name":"ACT_SHIELD_UP","value":450},{"name":"ACT_SHIELD_DOWN","value":451},{"name":"ACT_SHIELD_UP_IDLE","value":452},{"name":"ACT_SHIELD_ATTACK","value":453},{"name":"ACT_SHIELD_KNOCKBACK","value":454},{"name":"ACT_CROUCHING_SHIELD_UP","value":455},{"name":"ACT_CROUCHING_SHIELD_DOWN","value":456},{"name":"ACT_CROUCHING_SHIELD_UP_IDLE","value":457},{"name":"ACT_CROUCHING_SHIELD_ATTACK","value":458},{"name":"ACT_CROUCHING_SHIELD_KNOCKBACK","value":459},{"name":"ACT_TURNRIGHT45","value":460},{"name":"ACT_TURNLEFT45","value":461},{"name":"ACT_TURN","value":462},{"name":"ACT_OBJ_ASSEMBLING","value":463},{"name":"ACT_OBJ_DISMANTLING","value":464},{"name":"ACT_OBJ_STARTUP","value":465},{"name":"ACT_OBJ_RUNNING","value":466},{"name":"ACT_OBJ_IDLE","value":467},{"name":"ACT_OBJ_PLACING","value":468},{"name":"ACT_OBJ_DETERIORATING","value":469},{"name":"ACT_OBJ_UPGRADING","value":470},{"name":"ACT_DEPLOY","value":471},{"name":"ACT_DEPLOY_IDLE","value":472},{"name":"ACT_UNDEPLOY","value":473},{"name":"ACT_CROSSBOW_DRAW_UNLOADED","value":474},{"name":"ACT_GAUSS_SPINUP","value":475},{"name":"ACT_GAUSS_SPINCYCLE","value":476},{"name":"ACT_VM_PRIMARYATTACK_SILENCED","value":477},{"name":"ACT_VM_RELOAD_SILENCED","value":478},{"name":"ACT_VM_DRYFIRE_SILENCED","value":479},{"name":"ACT_VM_IDLE_SILENCED","value":480},{"name":"ACT_VM_DRAW_SILENCED","value":481},{"name":"ACT_VM_IDLE_EMPTY_LEFT","value":482},{"name":"ACT_VM_DRYFIRE_LEFT","value":483},{"name":"ACT_VM_IS_DRAW","value":484},{"name":"ACT_VM_IS_HOLSTER","value":485},{"name":"ACT_VM_IS_IDLE","value":486},{"name":"ACT_VM_IS_PRIMARYATTACK","value":487},{"name":"ACT_PLAYER_IDLE_FIRE","value":488},{"name":"ACT_PLAYER_CROUCH_FIRE","value":489},{"name":"ACT_PLAYER_CROUCH_WALK_FIRE","value":490},{"name":"ACT_PLAYER_WALK_FIRE","value":491},{"name":"ACT_PLAYER_RUN_FIRE","value":492},{"name":"ACT_IDLETORUN","value":493},{"name":"ACT_RUNTOIDLE","value":494},{"name":"ACT_VM_DRAW_DEPLOYED","value":495},{"name":"ACT_HL2MP_IDLE_MELEE","value":496},{"name":"ACT_HL2MP_RUN_MELEE","value":497},{"name":"ACT_HL2MP_IDLE_CROUCH_MELEE","value":498},{"name":"ACT_HL2MP_WALK_CROUCH_MELEE","value":499},{"name":"ACT_HL2MP_GESTURE_RANGE_ATTACK_MELEE","value":500},{"name":"ACT_HL2MP_GESTURE_RELOAD_MELEE","value":501},{"name":"ACT_HL2MP_JUMP_MELEE","value":502},{"name":"ACT_MP_STAND_IDLE","value":503},{"name":"ACT_MP_CROUCH_IDLE","value":504},{"name":"ACT_MP_CROUCH_DEPLOYED_IDLE","value":505},{"name":"ACT_MP_CROUCH_DEPLOYED","value":506},{"name":"ACT_MP_DEPLOYED_IDLE","value":507},{"name":"ACT_MP_RUN","value":508},{"name":"ACT_MP_WALK","value":509},{"name":"ACT_MP_AIRWALK","value":510},{"name":"ACT_MP_CROUCHWALK","value":511},{"name":"ACT_MP_SPRINT","value":512},{"name":"ACT_MP_JUMP","value":513},{"name":"ACT_MP_JUMP_START","value":514},{"name":"ACT_MP_JUMP_FLOAT","value":515},{"name":"ACT_MP_JUMP_LAND","value":516},{"name":"ACT_MP_DOUBLEJUMP","value":517},{"name":"ACT_MP_SWIM","value":518},{"name":"ACT_MP_DEPLOYED","value":519},{"name":"ACT_MP_SWIM_DEPLOYED","value":520},{"name":"ACT_MP_VCD","value":521},{"name":"ACT_MP_ATTACK_STAND_PRIMARYFIRE","value":522},{"name":"ACT_MP_ATTACK_STAND_PRIMARYFIRE_DEPLOYED","value":523},{"name":"ACT_MP_ATTACK_STAND_SECONDARYFIRE","value":524},{"name":"ACT_MP_ATTACK_STAND_GRENADE","value":525},{"name":"ACT_MP_ATTACK_CROUCH_PRIMARYFIRE","value":526},{"name":"ACT_MP_ATTACK_CROUCH_PRIMARYFIRE_DEPLOYED","value":527},{"name":"ACT_MP_ATTACK_CROUCH_SECONDARYFIRE","value":528},{"name":"ACT_MP_ATTACK_CROUCH_GRENADE","value":529},{"name":"ACT_MP_ATTACK_SWIM_PRIMARYFIRE","value":530},{"name":"ACT_MP_ATTACK_SWIM_SECONDARYFIRE","value":531},{"name":"ACT_MP_ATTACK_SWIM_GRENADE","value":532},{"name":"ACT_MP_ATTACK_AIRWALK_PRIMARYFIRE","value":533},{"name":"ACT_MP_ATTACK_AIRWALK_SECONDARYFIRE","value":534},{"name":"ACT_MP_ATTACK_AIRWALK_GRENADE","value":535},{"name":"ACT_MP_RELOAD_STAND","value":536},{"name":"ACT_MP_RELOAD_STAND_LOOP","value":537},{"name":"ACT_MP_RELOAD_STAND_END","value":538},{"name":"ACT_MP_RELOAD_CROUCH","value":539},{"name":"ACT_MP_RELOAD_CROUCH_LOOP","value":540},{"name":"ACT_MP_RELOAD_CROUCH_END","value":541},{"name":"ACT_MP_RELOAD_SWIM","value":542},{"name":"ACT_MP_RELOAD_SWIM_LOOP","value":543},{"name":"ACT_MP_RELOAD_SWIM_END","value":544},{"name":"ACT_MP_RELOAD_AIRWALK","value":545},{"name":"ACT_MP_RELOAD_AIRWALK_LOOP","value":546},{"name":"ACT_MP_RELOAD_AIRWALK_END","value":547},{"name":"ACT_MP_ATTACK_STAND_PREFIRE","value":548},{"name":"ACT_MP_ATTACK_STAND_POSTFIRE","value":549},{"name":"ACT_MP_ATTACK_STAND_STARTFIRE","value":550},{"name":"ACT_MP_ATTACK_CROUCH_PREFIRE","value":551},{"name":"ACT_MP_ATTACK_CROUCH_POSTFIRE","value":552},{"name":"ACT_MP_ATTACK_SWIM_PREFIRE","value":553},{"name":"ACT_MP_ATTACK_SWIM_POSTFIRE","value":554},{"name":"ACT_MP_STAND_PRIMARY","value":555},{"name":"ACT_MP_CROUCH_PRIMARY","value":556},{"name":"ACT_MP_RUN_PRIMARY","value":557},{"name":"ACT_MP_WALK_PRIMARY","value":558},{"name":"ACT_MP_AIRWALK_PRIMARY","value":559},{"name":"ACT_MP_CROUCHWALK_PRIMARY","value":560},{"name":"ACT_MP_JUMP_PRIMARY","value":561},{"name":"ACT_MP_JUMP_START_PRIMARY","value":562},{"name":"ACT_MP_JUMP_FLOAT_PRIMARY","value":563},{"name":"ACT_MP_JUMP_LAND_PRIMARY","value":564},{"name":"ACT_MP_SWIM_PRIMARY","value":565},{"name":"ACT_MP_DEPLOYED_PRIMARY","value":566},{"name":"ACT_MP_SWIM_DEPLOYED_PRIMARY","value":567},{"name":"ACT_MP_ATTACK_STAND_PRIMARY","value":568},{"name":"ACT_MP_ATTACK_STAND_PRIMARY_DEPLOYED","value":569},{"name":"ACT_MP_ATTACK_CROUCH_PRIMARY","value":570},{"name":"ACT_MP_ATTACK_CROUCH_PRIMARY_DEPLOYED","value":571},{"name":"ACT_MP_ATTACK_SWIM_PRIMARY","value":572},{"name":"ACT_MP_ATTACK_AIRWALK_PRIMARY","value":573},{"name":"ACT_MP_RELOAD_STAND_PRIMARY","value":574},{"name":"ACT_MP_RELOAD_STAND_PRIMARY_LOOP","value":575},{"name":"ACT_MP_RELOAD_STAND_PRIMARY_END","value":576},{"name":"ACT_MP_RELOAD_CROUCH_PRIMARY","value":577},{"name":"ACT_MP_RELOAD_CROUCH_PRIMARY_LOOP","value":578},{"name":"ACT_MP_RELOAD_CROUCH_PRIMARY_END","value":579},{"name":"ACT_MP_RELOAD_SWIM_PRIMARY","value":580},{"name":"ACT_MP_RELOAD_SWIM_PRIMARY_LOOP","value":581},{"name":"ACT_MP_RELOAD_SWIM_PRIMARY_END","value":582},{"name":"ACT_MP_RELOAD_AIRWALK_PRIMARY","value":583},{"name":"ACT_MP_RELOAD_AIRWALK_PRIMARY_LOOP","value":584},{"name":"ACT_MP_RELOAD_AIRWALK_PRIMARY_END","value":585},{"name":"ACT_MP_ATTACK_STAND_GRENADE_PRIMARY","value":586},{"name":"ACT_MP_ATTACK_CROUCH_GRENADE_PRIMARY","value":587},{"name":"ACT_MP_ATTACK_SWIM_GRENADE_PRIMARY","value":588},{"name":"ACT_MP_ATTACK_AIRWALK_GRENADE_PRIMARY","value":589},{"name":"ACT_MP_STAND_SECONDARY","value":590},{"name":"ACT_MP_CROUCH_SECONDARY","value":591},{"name":"ACT_MP_RUN_SECONDARY","value":592},{"name":"ACT_MP_WALK_SECONDARY","value":593},{"name":"ACT_MP_AIRWALK_SECONDARY","value":594},{"name":"ACT_MP_CROUCHWALK_SECONDARY","value":595},{"name":"ACT_MP_JUMP_SECONDARY","value":596},{"name":"ACT_MP_JUMP_START_SECONDARY","value":597},{"name":"ACT_MP_JUMP_FLOAT_SECONDARY","value":598},{"name":"ACT_MP_JUMP_LAND_SECONDARY","value":599},{"name":"ACT_MP_SWIM_SECONDARY","value":600},{"name":"ACT_MP_ATTACK_STAND_SECONDARY","value":601},{"name":"ACT_MP_ATTACK_CROUCH_SECONDARY","value":602},{"name":"ACT_MP_ATTACK_SWIM_SECONDARY","value":603},{"name":"ACT_MP_ATTACK_AIRWALK_SECONDARY","value":604},{"name":"ACT_MP_RELOAD_STAND_SECONDARY","value":605},{"name":"ACT_MP_RELOAD_STAND_SECONDARY_LOOP","value":606},{"name":"ACT_MP_RELOAD_STAND_SECONDARY_END","value":607},{"name":"ACT_MP_RELOAD_CROUCH_SECONDARY","value":608},{"name":"ACT_MP_RELOAD_CROUCH_SECONDARY_LOOP","value":609},{"name":"ACT_MP_RELOAD_CROUCH_SECONDARY_END","value":610},{"name":"ACT_MP_RELOAD_SWIM_SECONDARY","value":611},{"name":"ACT_MP_RELOAD_SWIM_SECONDARY_LOOP","value":612},{"name":"ACT_MP_RELOAD_SWIM_SECONDARY_END","value":613},{"name":"ACT_MP_RELOAD_AIRWALK_SECONDARY","value":614},{"name":"ACT_MP_RELOAD_AIRWALK_SECONDARY_LOOP","value":615},{"name":"ACT_MP_RELOAD_AIRWALK_SECONDARY_END","value":616},{"name":"ACT_MP_ATTACK_STAND_GRENADE_SECONDARY","value":617},{"name":"ACT_MP_ATTACK_CROUCH_GRENADE_SECONDARY","value":618},{"name":"ACT_MP_ATTACK_SWIM_GRENADE_SECONDARY","value":619},{"name":"ACT_MP_ATTACK_AIRWALK_GRENADE_SECONDARY","value":620},{"name":"ACT_MP_STAND_MELEE","value":621},{"name":"ACT_MP_CROUCH_MELEE","value":622},{"name":"ACT_MP_RUN_MELEE","value":623},{"name":"ACT_MP_WALK_MELEE","value":624},{"name":"ACT_MP_AIRWALK_MELEE","value":625},{"name":"ACT_MP_CROUCHWALK_MELEE","value":626},{"name":"ACT_MP_JUMP_MELEE","value":627},{"name":"ACT_MP_JUMP_START_MELEE","value":628},{"name":"ACT_MP_JUMP_FLOAT_MELEE","value":629},{"name":"ACT_MP_JUMP_LAND_MELEE","value":630},{"name":"ACT_MP_SWIM_MELEE","value":631},{"name":"ACT_MP_ATTACK_STAND_MELEE","value":632},{"name":"ACT_MP_ATTACK_STAND_MELEE_SECONDARY","value":633},{"name":"ACT_MP_ATTACK_CROUCH_MELEE","value":634},{"name":"ACT_MP_ATTACK_CROUCH_MELEE_SECONDARY","value":635},{"name":"ACT_MP_ATTACK_SWIM_MELEE","value":636},{"name":"ACT_MP_ATTACK_AIRWALK_MELEE","value":637},{"name":"ACT_MP_ATTACK_STAND_GRENADE_MELEE","value":638},{"name":"ACT_MP_ATTACK_CROUCH_GRENADE_MELEE","value":639},{"name":"ACT_MP_ATTACK_SWIM_GRENADE_MELEE","value":640},{"name":"ACT_MP_ATTACK_AIRWALK_GRENADE_MELEE","value":641},{"name":"ACT_MP_STAND_ITEM1","value":642},{"name":"ACT_MP_CROUCH_ITEM1","value":643},{"name":"ACT_MP_RUN_ITEM1","value":644},{"name":"ACT_MP_WALK_ITEM1","value":645},{"name":"ACT_MP_AIRWALK_ITEM1","value":646},{"name":"ACT_MP_CROUCHWALK_ITEM1","value":647},{"name":"ACT_MP_JUMP_ITEM1","value":648},{"name":"ACT_MP_JUMP_START_ITEM1","value":649},{"name":"ACT_MP_JUMP_FLOAT_ITEM1","value":650},{"name":"ACT_MP_JUMP_LAND_ITEM1","value":651},{"name":"ACT_MP_SWIM_ITEM1","value":652},{"name":"ACT_MP_ATTACK_STAND_ITEM1","value":653},{"name":"ACT_MP_ATTACK_STAND_ITEM1_SECONDARY","value":654},{"name":"ACT_MP_ATTACK_CROUCH_ITEM1","value":655},{"name":"ACT_MP_ATTACK_CROUCH_ITEM1_SECONDARY","value":656},{"name":"ACT_MP_ATTACK_SWIM_ITEM1","value":657},{"name":"ACT_MP_ATTACK_AIRWALK_ITEM1","value":658},{"name":"ACT_MP_STAND_ITEM2","value":659},{"name":"ACT_MP_CROUCH_ITEM2","value":660},{"name":"ACT_MP_RUN_ITEM2","value":661},{"name":"ACT_MP_WALK_ITEM2","value":662},{"name":"ACT_MP_AIRWALK_ITEM2","value":663},{"name":"ACT_MP_CROUCHWALK_ITEM2","value":664},{"name":"ACT_MP_JUMP_ITEM2","value":665},{"name":"ACT_MP_JUMP_START_ITEM2","value":666},{"name":"ACT_MP_JUMP_FLOAT_ITEM2","value":667},{"name":"ACT_MP_JUMP_LAND_ITEM2","value":668},{"name":"ACT_MP_SWIM_ITEM2","value":669},{"name":"ACT_MP_ATTACK_STAND_ITEM2","value":670},{"name":"ACT_MP_ATTACK_STAND_ITEM2_SECONDARY","value":671},{"name":"ACT_MP_ATTACK_CROUCH_ITEM2","value":672},{"name":"ACT_MP_ATTACK_CROUCH_ITEM2_SECONDARY","value":673},{"name":"ACT_MP_ATTACK_SWIM_ITEM2","value":674},{"name":"ACT_MP_ATTACK_AIRWALK_ITEM2","value":675},{"name":"ACT_MP_GESTURE_FLINCH","value":676},{"name":"ACT_MP_GESTURE_FLINCH_PRIMARY","value":677},{"name":"ACT_MP_GESTURE_FLINCH_SECONDARY","value":678},{"name":"ACT_MP_GESTURE_FLINCH_MELEE","value":679},{"name":"ACT_MP_GESTURE_FLINCH_ITEM1","value":680},{"name":"ACT_MP_GESTURE_FLINCH_ITEM2","value":681},{"name":"ACT_MP_GESTURE_FLINCH_HEAD","value":682},{"name":"ACT_MP_GESTURE_FLINCH_CHEST","value":683},{"name":"ACT_MP_GESTURE_FLINCH_STOMACH","value":684},{"name":"ACT_MP_GESTURE_FLINCH_LEFTARM","value":685},{"name":"ACT_MP_GESTURE_FLINCH_RIGHTARM","value":686},{"name":"ACT_MP_GESTURE_FLINCH_LEFTLEG","value":687},{"name":"ACT_MP_GESTURE_FLINCH_RIGHTLEG","value":688},{"name":"ACT_MP_GRENADE1_DRAW","value":689},{"name":"ACT_MP_GRENADE1_IDLE","value":690},{"name":"ACT_MP_GRENADE1_ATTACK","value":691},{"name":"ACT_MP_GRENADE2_DRAW","value":692},{"name":"ACT_MP_GRENADE2_IDLE","value":693},{"name":"ACT_MP_GRENADE2_ATTACK","value":694},{"name":"ACT_MP_PRIMARY_GRENADE1_DRAW","value":695},{"name":"ACT_MP_PRIMARY_GRENADE1_IDLE","value":696},{"name":"ACT_MP_PRIMARY_GRENADE1_ATTACK","value":697},{"name":"ACT_MP_PRIMARY_GRENADE2_DRAW","value":698},{"name":"ACT_MP_PRIMARY_GRENADE2_IDLE","value":699},{"name":"ACT_MP_PRIMARY_GRENADE2_ATTACK","value":700},{"name":"ACT_MP_SECONDARY_GRENADE1_DRAW","value":701},{"name":"ACT_MP_SECONDARY_GRENADE1_IDLE","value":702},{"name":"ACT_MP_SECONDARY_GRENADE1_ATTACK","value":703},{"name":"ACT_MP_SECONDARY_GRENADE2_DRAW","value":704},{"name":"ACT_MP_SECONDARY_GRENADE2_IDLE","value":705},{"name":"ACT_MP_SECONDARY_GRENADE2_ATTACK","value":706},{"name":"ACT_MP_MELEE_GRENADE1_DRAW","value":707},{"name":"ACT_MP_MELEE_GRENADE1_IDLE","value":708},{"name":"ACT_MP_MELEE_GRENADE1_ATTACK","value":709},{"name":"ACT_MP_MELEE_GRENADE2_DRAW","value":710},{"name":"ACT_MP_MELEE_GRENADE2_IDLE","value":711},{"name":"ACT_MP_MELEE_GRENADE2_ATTACK","value":712},{"name":"ACT_MP_ITEM1_GRENADE1_DRAW","value":713},{"name":"ACT_MP_ITEM1_GRENADE1_IDLE","value":714},{"name":"ACT_MP_ITEM1_GRENADE1_ATTACK","value":715},{"name":"ACT_MP_ITEM1_GRENADE2_DRAW","value":716},{"name":"ACT_MP_ITEM1_GRENADE2_IDLE","value":717},{"name":"ACT_MP_ITEM1_GRENADE2_ATTACK","value":718},{"name":"ACT_MP_ITEM2_GRENADE1_DRAW","value":719},{"name":"ACT_MP_ITEM2_GRENADE1_IDLE","value":720},{"name":"ACT_MP_ITEM2_GRENADE1_ATTACK","value":721},{"name":"ACT_MP_ITEM2_GRENADE2_DRAW","value":722},{"name":"ACT_MP_ITEM2_GRENADE2_IDLE","value":723},{"name":"ACT_MP_ITEM2_GRENADE2_ATTACK","value":724},{"name":"ACT_MP_STAND_BUILDING","value":725},{"name":"ACT_MP_CROUCH_BUILDING","value":726},{"name":"ACT_MP_RUN_BUILDING","value":727},{"name":"ACT_MP_WALK_BUILDING","value":728},{"name":"ACT_MP_AIRWALK_BUILDING","value":729},{"name":"ACT_MP_CROUCHWALK_BUILDING","value":730},{"name":"ACT_MP_JUMP_BUILDING","value":731},{"name":"ACT_MP_JUMP_START_BUILDING","value":732},{"name":"ACT_MP_JUMP_FLOAT_BUILDING","value":733},{"name":"ACT_MP_JUMP_LAND_BUILDING","value":734},{"name":"ACT_MP_SWIM_BUILDING","value":735},{"name":"ACT_MP_ATTACK_STAND_BUILDING","value":736},{"name":"ACT_MP_ATTACK_CROUCH_BUILDING","value":737},{"name":"ACT_MP_ATTACK_SWIM_BUILDING","value":738},{"name":"ACT_MP_ATTACK_AIRWALK_BUILDING","value":739},{"name":"ACT_MP_ATTACK_STAND_GRENADE_BUILDING","value":740},{"name":"ACT_MP_ATTACK_CROUCH_GRENADE_BUILDING","value":741},{"name":"ACT_MP_ATTACK_SWIM_GRENADE_BUILDING","value":742},{"name":"ACT_MP_ATTACK_AIRWALK_GRENADE_BUILDING","value":743},{"name":"ACT_MP_STAND_PDA","value":744},{"name":"ACT_MP_CROUCH_PDA","value":745},{"name":"ACT_MP_RUN_PDA","value":746},{"name":"ACT_MP_WALK_PDA","value":747},{"name":"ACT_MP_AIRWALK_PDA","value":748},{"name":"ACT_MP_CROUCHWALK_PDA","value":749},{"name":"ACT_MP_JUMP_PDA","value":750},{"name":"ACT_MP_JUMP_START_PDA","value":751},{"name":"ACT_MP_JUMP_FLOAT_PDA","value":752},{"name":"ACT_MP_JUMP_LAND_PDA","value":753},{"name":"ACT_MP_SWIM_PDA","value":754},{"name":"ACT_MP_ATTACK_STAND_PDA","value":755},{"name":"ACT_MP_ATTACK_SWIM_PDA","value":756},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH","value":757},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT","value":758},{"name":"ACT_MP_GESTURE_VC_FISTPUMP","value":759},{"name":"ACT_MP_GESTURE_VC_THUMBSUP","value":760},{"name":"ACT_MP_GESTURE_VC_NODYES","value":761},{"name":"ACT_MP_GESTURE_VC_NODNO","value":762},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_PRIMARY","value":763},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_PRIMARY","value":764},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_PRIMARY","value":765},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_PRIMARY","value":766},{"name":"ACT_MP_GESTURE_VC_NODYES_PRIMARY","value":767},{"name":"ACT_MP_GESTURE_VC_NODNO_PRIMARY","value":768},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_SECONDARY","value":769},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_SECONDARY","value":770},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_SECONDARY","value":771},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_SECONDARY","value":772},{"name":"ACT_MP_GESTURE_VC_NODYES_SECONDARY","value":773},{"name":"ACT_MP_GESTURE_VC_NODNO_SECONDARY","value":774},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_MELEE","value":775},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_MELEE","value":776},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_MELEE","value":777},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_MELEE","value":778},{"name":"ACT_MP_GESTURE_VC_NODYES_MELEE","value":779},{"name":"ACT_MP_GESTURE_VC_NODNO_MELEE","value":780},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_ITEM1","value":781},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_ITEM1","value":782},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_ITEM1","value":783},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_ITEM1","value":784},{"name":"ACT_MP_GESTURE_VC_NODYES_ITEM1","value":785},{"name":"ACT_MP_GESTURE_VC_NODNO_ITEM1","value":786},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_ITEM2","value":787},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_ITEM2","value":788},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_ITEM2","value":789},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_ITEM2","value":790},{"name":"ACT_MP_GESTURE_VC_NODYES_ITEM2","value":791},{"name":"ACT_MP_GESTURE_VC_NODNO_ITEM2","value":792},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_BUILDING","value":793},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_BUILDING","value":794},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_BUILDING","value":795},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_BUILDING","value":796},{"name":"ACT_MP_GESTURE_VC_NODYES_BUILDING","value":797},{"name":"ACT_MP_GESTURE_VC_NODNO_BUILDING","value":798},{"name":"ACT_MP_GESTURE_VC_HANDMOUTH_PDA","value":799},{"name":"ACT_MP_GESTURE_VC_FINGERPOINT_PDA","value":800},{"name":"ACT_MP_GESTURE_VC_FISTPUMP_PDA","value":801},{"name":"ACT_MP_GESTURE_VC_THUMBSUP_PDA","value":802},{"name":"ACT_MP_GESTURE_VC_NODYES_PDA","value":803},{"name":"ACT_MP_GESTURE_VC_NODNO_PDA","value":804},{"name":"ACT_VM_UNUSABLE","value":805},{"name":"ACT_VM_UNUSABLE_TO_USABLE","value":806},{"name":"ACT_VM_USABLE_TO_UNUSABLE","value":807},{"name":"ACT_PRIMARY_VM_DRAW","value":808},{"name":"ACT_PRIMARY_VM_HOLSTER","value":809},{"name":"ACT_PRIMARY_VM_IDLE","value":810},{"name":"ACT_PRIMARY_VM_PULLBACK","value":811},{"name":"ACT_PRIMARY_VM_PRIMARYATTACK","value":812},{"name":"ACT_PRIMARY_VM_SECONDARYATTACK","value":813},{"name":"ACT_PRIMARY_VM_RELOAD","value":814},{"name":"ACT_PRIMARY_VM_DRYFIRE","value":815},{"name":"ACT_PRIMARY_VM_IDLE_TO_LOWERED","value":816},{"name":"ACT_PRIMARY_VM_IDLE_LOWERED","value":817},{"name":"ACT_PRIMARY_VM_LOWERED_TO_IDLE","value":818},{"name":"ACT_SECONDARY_VM_DRAW","value":819},{"name":"ACT_SECONDARY_VM_HOLSTER","value":820},{"name":"ACT_SECONDARY_VM_IDLE","value":821},{"name":"ACT_SECONDARY_VM_PULLBACK","value":822},{"name":"ACT_SECONDARY_VM_PRIMARYATTACK","value":823},{"name":"ACT_SECONDARY_VM_SECONDARYATTACK","value":824},{"name":"ACT_SECONDARY_VM_RELOAD","value":825},{"name":"ACT_SECONDARY_VM_DRYFIRE","value":826},{"name":"ACT_SECONDARY_VM_IDLE_TO_LOWERED","value":827},{"name":"ACT_SECONDARY_VM_IDLE_LOWERED","value":828},{"name":"ACT_SECONDARY_VM_LOWERED_TO_IDLE","value":829},{"name":"ACT_MELEE_VM_DRAW","value":830},{"name":"ACT_MELEE_VM_HOLSTER","value":831},{"name":"ACT_MELEE_VM_IDLE","value":832},{"name":"ACT_MELEE_VM_PULLBACK","value":833},{"name":"ACT_MELEE_VM_PRIMARYATTACK","value":834},{"name":"ACT_MELEE_VM_SECONDARYATTACK","value":835},{"name":"ACT_MELEE_VM_RELOAD","value":836},{"name":"ACT_MELEE_VM_DRYFIRE","value":837},{"name":"ACT_MELEE_VM_IDLE_TO_LOWERED","value":838},{"name":"ACT_MELEE_VM_IDLE_LOWERED","value":839},{"name":"ACT_MELEE_VM_LOWERED_TO_IDLE","value":840},{"name":"ACT_PDA_VM_DRAW","value":841},{"name":"ACT_PDA_VM_HOLSTER","value":842},{"name":"ACT_PDA_VM_IDLE","value":843},{"name":"ACT_PDA_VM_PULLBACK","value":844},{"name":"ACT_PDA_VM_PRIMARYATTACK","value":845},{"name":"ACT_PDA_VM_SECONDARYATTACK","value":846},{"name":"ACT_PDA_VM_RELOAD","value":847},{"name":"ACT_PDA_VM_DRYFIRE","value":848},{"name":"ACT_PDA_VM_IDLE_TO_LOWERED","value":849},{"name":"ACT_PDA_VM_IDLE_LOWERED","value":850},{"name":"ACT_PDA_VM_LOWERED_TO_IDLE","value":851},{"name":"ACT_ITEM1_VM_DRAW","value":852},{"name":"ACT_ITEM1_VM_HOLSTER","value":853},{"name":"ACT_ITEM1_VM_IDLE","value":854},{"name":"ACT_ITEM1_VM_PULLBACK","value":855},{"name":"ACT_ITEM1_VM_PRIMARYATTACK","value":856},{"name":"ACT_ITEM1_VM_SECONDARYATTACK","value":857},{"name":"ACT_ITEM1_VM_RELOAD","value":858},{"name":"ACT_ITEM1_VM_DRYFIRE","value":859},{"name":"ACT_ITEM1_VM_IDLE_TO_LOWERED","value":860},{"name":"ACT_ITEM1_VM_IDLE_LOWERED","value":861},{"name":"ACT_ITEM1_VM_LOWERED_TO_IDLE","value":862},{"name":"ACT_ITEM2_VM_DRAW","value":863},{"name":"ACT_ITEM2_VM_HOLSTER","value":864},{"name":"ACT_ITEM2_VM_IDLE","value":865},{"name":"ACT_ITEM2_VM_PULLBACK","value":866},{"name":"ACT_ITEM2_VM_PRIMARYATTACK","value":867},{"name":"ACT_ITEM2_VM_SECONDARYATTACK","value":868},{"name":"ACT_ITEM2_VM_RELOAD","value":869},{"name":"ACT_ITEM2_VM_DRYFIRE","value":870},{"name":"ACT_ITEM2_VM_IDLE_TO_LOWERED","value":871},{"name":"ACT_ITEM2_VM_IDLE_LOWERED","value":872},{"name":"ACT_ITEM2_VM_LOWERED_TO_IDLE","value":873},{"name":"ACT_RELOAD_SUCCEED","value":874},{"name":"ACT_RELOAD_FAIL","value":875},{"name":"ACT_WALK_AIM_AUTOGUN","value":876},{"name":"ACT_RUN_AIM_AUTOGUN","value":877},{"name":"ACT_IDLE_AUTOGUN","value":878},{"name":"ACT_IDLE_AIM_AUTOGUN","value":879},{"name":"ACT_RELOAD_AUTOGUN","value":880},{"name":"ACT_CROUCH_IDLE_AUTOGUN","value":881},{"name":"ACT_RANGE_ATTACK_AUTOGUN","value":882},{"name":"ACT_JUMP_AUTOGUN","value":883},{"name":"ACT_IDLE_AIM_PISTOL","value":884},{"name":"ACT_WALK_AIM_DUAL","value":885},{"name":"ACT_RUN_AIM_DUAL","value":886},{"name":"ACT_IDLE_DUAL","value":887},{"name":"ACT_IDLE_AIM_DUAL","value":888},{"name":"ACT_RELOAD_DUAL","value":889},{"name":"ACT_CROUCH_IDLE_DUAL","value":890},{"name":"ACT_RANGE_ATTACK_DUAL","value":891},{"name":"ACT_JUMP_DUAL","value":892},{"name":"ACT_IDLE_AIM_SHOTGUN","value":893},{"name":"ACT_CROUCH_IDLE_SHOTGUN","value":894},{"name":"ACT_IDLE_AIM_RIFLE","value":895},{"name":"ACT_CROUCH_IDLE_RIFLE","value":896},{"name":"ACT_RANGE_ATTACK_RIFLE","value":897},{"name":"ACT_SLEEP","value":898},{"name":"ACT_WAKE","value":899},{"name":"ACT_FLICK_LEFT","value":900},{"name":"ACT_FLICK_LEFT_MIDDLE","value":901},{"name":"ACT_FLICK_RIGHT_MIDDLE","value":902},{"name":"ACT_FLICK_RIGHT","value":903},{"name":"ACT_SPINAROUND","value":904},{"name":"ACT_PREP_TO_FIRE","value":905},{"name":"ACT_FIRE","value":906},{"name":"ACT_FIRE_RECOVER","value":907},{"name":"ACT_SPRAY","value":908},{"name":"ACT_PREP_EXPLODE","value":909},{"name":"ACT_EXPLODE","value":910},{"name":"ACT_SCRIPT_CUSTOM_0","value":911},{"name":"ACT_SCRIPT_CUSTOM_1","value":912},{"name":"ACT_SCRIPT_CUSTOM_2","value":913},{"name":"ACT_SCRIPT_CUSTOM_3","value":914},{"name":"ACT_SCRIPT_CUSTOM_4","value":915},{"name":"ACT_SCRIPT_CUSTOM_5","value":916},{"name":"ACT_SCRIPT_CUSTOM_6","value":917},{"name":"ACT_SCRIPT_CUSTOM_7","value":918},{"name":"ACT_SCRIPT_CUSTOM_8","value":919},{"name":"ACT_SCRIPT_CUSTOM_9","value":920},{"name":"ACT_SCRIPT_CUSTOM_10","value":921},{"name":"ACT_SCRIPT_CUSTOM_11","value":922},{"name":"ACT_SCRIPT_CUSTOM_12","value":923},{"name":"ACT_SCRIPT_CUSTOM_13","value":924},{"name":"ACT_SCRIPT_CUSTOM_14","value":925},{"name":"ACT_SCRIPT_CUSTOM_15","value":926},{"name":"ACT_SCRIPT_CUSTOM_16","value":927},{"name":"ACT_SCRIPT_CUSTOM_17","value":928},{"name":"ACT_SCRIPT_CUSTOM_18","value":929},{"name":"ACT_SCRIPT_CUSTOM_19","value":930},{"name":"ACT_SCRIPT_CUSTOM_20","value":931},{"name":"ACT_SCRIPT_CUSTOM_21","value":932},{"name":"ACT_SCRIPT_CUSTOM_22","value":933},{"name":"ACT_SCRIPT_CUSTOM_23","value":934},{"name":"ACT_SCRIPT_CUSTOM_24","value":935},{"name":"ACT_SCRIPT_CUSTOM_25","value":936},{"name":"ACT_SCRIPT_CUSTOM_26","value":937},{"name":"ACT_SCRIPT_CUSTOM_27","value":938},{"name":"ACT_SCRIPT_CUSTOM_28","value":939},{"name":"ACT_SCRIPT_CUSTOM_29","value":940},{"name":"ACT_SCRIPT_CUSTOM_30","value":941},{"name":"ACT_SCRIPT_CUSTOM_31","value":942},{"name":"ACT_VR_PISTOL_LAST_SHOT","value":943},{"name":"ACT_VR_PISTOL_SLIDE_RELEASE","value":944},{"name":"ACT_VR_PISTOL_CLIP_OUT_CHAMBERED","value":945},{"name":"ACT_VR_PISTOL_CLIP_OUT_SLIDE_BACK","value":946},{"name":"ACT_VR_PISTOL_CLIP_IN_CHAMBERED","value":947},{"name":"ACT_VR_PISTOL_CLIP_IN_SLIDE_BACK","value":948},{"name":"ACT_VR_PISTOL_IDLE_SLIDE_BACK","value":949},{"name":"ACT_VR_PISTOL_IDLE_SLIDE_BACK_CLIP_READY","value":950},{"name":"ACT_RAGDOLL_RECOVERY_FRONT","value":951},{"name":"ACT_RAGDOLL_RECOVERY_BACK","value":952},{"name":"ACT_RAGDOLL_RECOVERY_LEFT","value":953},{"name":"ACT_RAGDOLL_RECOVERY_RIGHT","value":954},{"name":"ACT_GRABBITYGLOVES_GRAB","value":955},{"name":"ACT_GRABBITYGLOVES_RELEASE","value":956},{"name":"ACT_GRABBITYGLOVES_GRAB_IDLE","value":957},{"name":"ACT_GRABBITYGLOVES_ACTIVE","value":958},{"name":"ACT_GRABBITYGLOVES_ACTIVE_IDLE","value":959},{"name":"ACT_GRABBITYGLOVES_DEACTIVATE","value":960},{"name":"ACT_GRABBITYGLOVES_PULL","value":961},{"name":"ACT_HEADCRAB_SMOKE_BOMB","value":962},{"name":"ACT_HEADCRAB_SPIT","value":963},{"name":"ACT_ZOMBIE_TRIP","value":964},{"name":"ACT_ZOMBIE_LUNGE","value":965},{"name":"ACT_NEUTRAL_REF_POSE","value":966},{"name":"ACT_ANTLION_SCUTTLE_FORWARD","value":967},{"name":"ACT_ANTLION_SCUTTLE_BACK","value":968},{"name":"ACT_ANTLION_SCUTTLE_LEFT","value":969},{"name":"ACT_ANTLION_SCUTTLE_RIGHT","value":970},{"name":"ACT_VR_PISTOL_EMPTY_CLIP_IN_SLIDE_BACK","value":971},{"name":"ACT_VR_SHOTGUN_IDLE","value":972},{"name":"ACT_VR_SHOTGUN_OPEN_CHAMBER","value":973},{"name":"ACT_VR_SHOTGUN_RELOAD_1","value":974},{"name":"ACT_VR_SHOTGUN_RELOAD_2","value":975},{"name":"ACT_VR_SHOTGUN_RELOAD_3","value":976},{"name":"ACT_VR_SHOTGUN_CLOSE_CHAMBER","value":977},{"name":"ACT_VR_SHOTGUN_TRIGGER_SQUEEZE","value":978},{"name":"ACT_VR_SHOTGUN_SHOOT","value":979},{"name":"ACT_VR_SHOTGUN_SLIDE_BACK","value":980},{"name":"ACT_VR_SHOTGUN_SLIDE_FORWARD","value":981},{"name":"ACT_VR_PISTOL_LONG_CLIP_IN_CHAMBERED","value":982},{"name":"ACT_VR_PISTOL_LONG_CLIP_IN_SLIDE_BACK","value":983},{"name":"ACT_VR_PISTOL_BURST_TOGGLE","value":984},{"name":"ACT_VR_PISTOL_LOW_KICK","value":985},{"name":"ACT_VR_PISTOL_BURST_ATTACK","value":986},{"name":"ACT_VR_SHOTGUN_GRENADE_TWIST","value":987},{"name":"ACT_DIE_STAND","value":988},{"name":"ACT_DIE_STAND_HEADSHOT","value":989},{"name":"ACT_DIE_CROUCH","value":990},{"name":"ACT_DIE_CROUCH_HEADSHOT","value":991},{"name":"ACT_CSGO_NULL","value":992},{"name":"ACT_CSGO_DEFUSE","value":993},{"name":"ACT_CSGO_DEFUSE_WITH_KIT","value":994},{"name":"ACT_CSGO_FLASHBANG_REACTION","value":995},{"name":"ACT_CSGO_FIRE_PRIMARY","value":996},{"name":"ACT_CSGO_FIRE_PRIMARY_OPT_1","value":997},{"name":"ACT_CSGO_FIRE_PRIMARY_OPT_2","value":998},{"name":"ACT_CSGO_FIRE_SECONDARY","value":999},{"name":"ACT_CSGO_FIRE_SECONDARY_OPT_1","value":1000},{"name":"ACT_CSGO_FIRE_SECONDARY_OPT_2","value":1001},{"name":"ACT_CSGO_RELOAD","value":1002},{"name":"ACT_CSGO_RELOAD_START","value":1003},{"name":"ACT_CSGO_RELOAD_LOOP","value":1004},{"name":"ACT_CSGO_RELOAD_END","value":1005},{"name":"ACT_CSGO_OPERATE","value":1006},{"name":"ACT_CSGO_DEPLOY","value":1007},{"name":"ACT_CSGO_CATCH","value":1008},{"name":"ACT_CSGO_SILENCER_DETACH","value":1009},{"name":"ACT_CSGO_SILENCER_ATTACH","value":1010},{"name":"ACT_CSGO_TWITCH","value":1011},{"name":"ACT_CSGO_TWITCH_BUYZONE","value":1012},{"name":"ACT_CSGO_PLANT_BOMB","value":1013},{"name":"ACT_CSGO_IDLE_TURN_BALANCEADJUST","value":1014},{"name":"ACT_CSGO_IDLE_ADJUST_STOPPEDMOVING","value":1015},{"name":"ACT_CSGO_ALIVE_LOOP","value":1016},{"name":"ACT_CSGO_FLINCH","value":1017},{"name":"ACT_CSGO_FLINCH_HEAD","value":1018},{"name":"ACT_CSGO_FLINCH_MOLOTOV","value":1019},{"name":"ACT_CSGO_JUMP","value":1020},{"name":"ACT_CSGO_FALL","value":1021},{"name":"ACT_CSGO_CLIMB_LADDER","value":1022},{"name":"ACT_CSGO_LAND_LIGHT","value":1023},{"name":"ACT_CSGO_LAND_HEAVY","value":1024},{"name":"ACT_CSGO_EXIT_LADDER_TOP","value":1025},{"name":"ACT_CSGO_EXIT_LADDER_BOTTOM","value":1026},{"name":"ACT_CSGO_PARACHUTE","value":1027},{"name":"ACT_CSGO_TAUNT","value":1028},{"name":"ACT_DOTA_IDLE","value":1500},{"name":"ACT_DOTA_IDLE_RARE","value":1501},{"name":"ACT_DOTA_RUN","value":1502},{"name":"ACT_DOTA_ATTACK","value":1503},{"name":"ACT_DOTA_ATTACK2","value":1504},{"name":"ACT_DOTA_ATTACK_EVENT","value":1505},{"name":"ACT_DOTA_DIE","value":1506},{"name":"ACT_DOTA_FLINCH","value":1507},{"name":"ACT_DOTA_FLAIL","value":1508},{"name":"ACT_DOTA_DISABLED","value":1509},{"name":"ACT_DOTA_CAST_ABILITY_1","value":1510},{"name":"ACT_DOTA_CAST_ABILITY_2","value":1511},{"name":"ACT_DOTA_CAST_ABILITY_3","value":1512},{"name":"ACT_DOTA_CAST_ABILITY_4","value":1513},{"name":"ACT_DOTA_CAST_ABILITY_5","value":1514},{"name":"ACT_DOTA_CAST_ABILITY_6","value":1515},{"name":"ACT_DOTA_OVERRIDE_ABILITY_1","value":1516},{"name":"ACT_DOTA_OVERRIDE_ABILITY_2","value":1517},{"name":"ACT_DOTA_OVERRIDE_ABILITY_3","value":1518},{"name":"ACT_DOTA_OVERRIDE_ABILITY_4","value":1519},{"name":"ACT_DOTA_CHANNEL_ABILITY_1","value":1520},{"name":"ACT_DOTA_CHANNEL_ABILITY_2","value":1521},{"name":"ACT_DOTA_CHANNEL_ABILITY_3","value":1522},{"name":"ACT_DOTA_CHANNEL_ABILITY_4","value":1523},{"name":"ACT_DOTA_CHANNEL_ABILITY_5","value":1524},{"name":"ACT_DOTA_CHANNEL_ABILITY_6","value":1525},{"name":"ACT_DOTA_CHANNEL_END_ABILITY_1","value":1526},{"name":"ACT_DOTA_CHANNEL_END_ABILITY_2","value":1527},{"name":"ACT_DOTA_CHANNEL_END_ABILITY_3","value":1528},{"name":"ACT_DOTA_CHANNEL_END_ABILITY_4","value":1529},{"name":"ACT_DOTA_CHANNEL_END_ABILITY_5","value":1530},{"name":"ACT_DOTA_CHANNEL_END_ABILITY_6","value":1531},{"name":"ACT_DOTA_CONSTANT_LAYER","value":1532},{"name":"ACT_DOTA_CAPTURE","value":1533},{"name":"ACT_DOTA_SPAWN","value":1534},{"name":"ACT_DOTA_KILLTAUNT","value":1535},{"name":"ACT_DOTA_TAUNT","value":1536},{"name":"ACT_DOTA_THIRST","value":1537},{"name":"ACT_DOTA_CAST_DRAGONBREATH","value":1538},{"name":"ACT_DOTA_ECHO_SLAM","value":1539},{"name":"ACT_DOTA_CAST_ABILITY_1_END","value":1540},{"name":"ACT_DOTA_CAST_ABILITY_2_END","value":1541},{"name":"ACT_DOTA_CAST_ABILITY_3_END","value":1542},{"name":"ACT_DOTA_CAST_ABILITY_4_END","value":1543},{"name":"ACT_MIRANA_LEAP_END","value":1544},{"name":"ACT_WAVEFORM_START","value":1545},{"name":"ACT_WAVEFORM_END","value":1546},{"name":"ACT_DOTA_CAST_ABILITY_ROT","value":1547},{"name":"ACT_DOTA_DIE_SPECIAL","value":1548},{"name":"ACT_DOTA_RATTLETRAP_BATTERYASSAULT","value":1549},{"name":"ACT_DOTA_RATTLETRAP_POWERCOGS","value":1550},{"name":"ACT_DOTA_RATTLETRAP_HOOKSHOT_START","value":1551},{"name":"ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP","value":1552},{"name":"ACT_DOTA_RATTLETRAP_HOOKSHOT_END","value":1553},{"name":"ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE","value":1554},{"name":"ACT_DOTA_TINKER_REARM1","value":1555},{"name":"ACT_DOTA_TINKER_REARM2","value":1556},{"name":"ACT_DOTA_TINKER_REARM3","value":1557},{"name":"ACT_TINY_AVALANCHE","value":1558},{"name":"ACT_TINY_TOSS","value":1559},{"name":"ACT_TINY_GROWL","value":1560},{"name":"ACT_DOTA_WEAVERBUG_ATTACH","value":1561},{"name":"ACT_DOTA_CAST_WILD_AXES_END","value":1562},{"name":"ACT_DOTA_CAST_LIFE_BREAK_START","value":1563},{"name":"ACT_DOTA_CAST_LIFE_BREAK_END","value":1564},{"name":"ACT_DOTA_NIGHTSTALKER_TRANSITION","value":1565},{"name":"ACT_DOTA_LIFESTEALER_RAGE","value":1566},{"name":"ACT_DOTA_LIFESTEALER_OPEN_WOUNDS","value":1567},{"name":"ACT_DOTA_SAND_KING_BURROW_IN","value":1568},{"name":"ACT_DOTA_SAND_KING_BURROW_OUT","value":1569},{"name":"ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK","value":1570},{"name":"ACT_DOTA_WHEEL_LAYER","value":1571},{"name":"ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START","value":1572},{"name":"ACT_DOTA_ALCHEMIST_CONCOCTION","value":1573},{"name":"ACT_DOTA_JAKIRO_LIQUIDFIRE_START","value":1574},{"name":"ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP","value":1575},{"name":"ACT_DOTA_LIFESTEALER_INFEST","value":1576},{"name":"ACT_DOTA_LIFESTEALER_INFEST_END","value":1577},{"name":"ACT_DOTA_LASSO_LOOP","value":1578},{"name":"ACT_DOTA_ALCHEMIST_CONCOCTION_THROW","value":1579},{"name":"ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END","value":1580},{"name":"ACT_DOTA_CAST_COLD_SNAP","value":1581},{"name":"ACT_DOTA_CAST_GHOST_WALK","value":1582},{"name":"ACT_DOTA_CAST_TORNADO","value":1583},{"name":"ACT_DOTA_CAST_EMP","value":1584},{"name":"ACT_DOTA_CAST_ALACRITY","value":1585},{"name":"ACT_DOTA_CAST_CHAOS_METEOR","value":1586},{"name":"ACT_DOTA_CAST_SUN_STRIKE","value":1587},{"name":"ACT_DOTA_CAST_FORGE_SPIRIT","value":1588},{"name":"ACT_DOTA_CAST_ICE_WALL","value":1589},{"name":"ACT_DOTA_CAST_DEAFENING_BLAST","value":1590},{"name":"ACT_DOTA_VICTORY","value":1591},{"name":"ACT_DOTA_DEFEAT","value":1592},{"name":"ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE","value":1593},{"name":"ACT_DOTA_SPIRIT_BREAKER_CHARGE_END","value":1594},{"name":"ACT_DOTA_TELEPORT","value":1595},{"name":"ACT_DOTA_TELEPORT_END","value":1596},{"name":"ACT_DOTA_CAST_REFRACTION","value":1597},{"name":"ACT_DOTA_CAST_ABILITY_7","value":1598},{"name":"ACT_DOTA_CANCEL_SIREN_SONG","value":1599},{"name":"ACT_DOTA_CHANNEL_ABILITY_7","value":1600},{"name":"ACT_DOTA_LOADOUT","value":1601},{"name":"ACT_DOTA_FORCESTAFF_END","value":1602},{"name":"ACT_DOTA_POOF_END","value":1603},{"name":"ACT_DOTA_SLARK_POUNCE","value":1604},{"name":"ACT_DOTA_MAGNUS_SKEWER_START","value":1605},{"name":"ACT_DOTA_MAGNUS_SKEWER_END","value":1606},{"name":"ACT_DOTA_MEDUSA_STONE_GAZE","value":1607},{"name":"ACT_DOTA_RELAX_START","value":1608},{"name":"ACT_DOTA_RELAX_LOOP","value":1609},{"name":"ACT_DOTA_RELAX_END","value":1610},{"name":"ACT_DOTA_CENTAUR_STAMPEDE","value":1611},{"name":"ACT_DOTA_BELLYACHE_START","value":1612},{"name":"ACT_DOTA_BELLYACHE_LOOP","value":1613},{"name":"ACT_DOTA_BELLYACHE_END","value":1614},{"name":"ACT_DOTA_ROQUELAIRE_LAND","value":1615},{"name":"ACT_DOTA_ROQUELAIRE_LAND_IDLE","value":1616},{"name":"ACT_DOTA_GREEVIL_CAST","value":1617},{"name":"ACT_DOTA_GREEVIL_OVERRIDE_ABILITY","value":1618},{"name":"ACT_DOTA_GREEVIL_HOOK_START","value":1619},{"name":"ACT_DOTA_GREEVIL_HOOK_END","value":1620},{"name":"ACT_DOTA_GREEVIL_BLINK_BONE","value":1621},{"name":"ACT_DOTA_IDLE_SLEEPING","value":1622},{"name":"ACT_DOTA_INTRO","value":1623},{"name":"ACT_DOTA_GESTURE_POINT","value":1624},{"name":"ACT_DOTA_GESTURE_ACCENT","value":1625},{"name":"ACT_DOTA_SLEEPING_END","value":1626},{"name":"ACT_DOTA_AMBUSH","value":1627},{"name":"ACT_DOTA_ITEM_LOOK","value":1628},{"name":"ACT_DOTA_STARTLE","value":1629},{"name":"ACT_DOTA_FRUSTRATION","value":1630},{"name":"ACT_DOTA_TELEPORT_REACT","value":1631},{"name":"ACT_DOTA_TELEPORT_END_REACT","value":1632},{"name":"ACT_DOTA_SHRUG","value":1633},{"name":"ACT_DOTA_RELAX_LOOP_END","value":1634},{"name":"ACT_DOTA_PRESENT_ITEM","value":1635},{"name":"ACT_DOTA_IDLE_IMPATIENT","value":1636},{"name":"ACT_DOTA_SHARPEN_WEAPON","value":1637},{"name":"ACT_DOTA_SHARPEN_WEAPON_OUT","value":1638},{"name":"ACT_DOTA_IDLE_SLEEPING_END","value":1639},{"name":"ACT_DOTA_BRIDGE_DESTROY","value":1640},{"name":"ACT_DOTA_TAUNT_SNIPER","value":1641},{"name":"ACT_DOTA_DEATH_BY_SNIPER","value":1642},{"name":"ACT_DOTA_LOOK_AROUND","value":1643},{"name":"ACT_DOTA_CAGED_CREEP_RAGE","value":1644},{"name":"ACT_DOTA_CAGED_CREEP_RAGE_OUT","value":1645},{"name":"ACT_DOTA_CAGED_CREEP_SMASH","value":1646},{"name":"ACT_DOTA_CAGED_CREEP_SMASH_OUT","value":1647},{"name":"ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP","value":1648},{"name":"ACT_DOTA_INTRO_LOOP","value":1649},{"name":"ACT_DOTA_BRIDGE_THREAT","value":1650},{"name":"ACT_DOTA_DAGON","value":1651},{"name":"ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START","value":1652},{"name":"ACT_DOTA_CAST_ABILITY_2_ES_ROLL","value":1653},{"name":"ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END","value":1654},{"name":"ACT_DOTA_NIAN_PIN_START","value":1655},{"name":"ACT_DOTA_NIAN_PIN_LOOP","value":1656},{"name":"ACT_DOTA_NIAN_PIN_END","value":1657},{"name":"ACT_DOTA_LEAP_STUN","value":1658},{"name":"ACT_DOTA_LEAP_SWIPE","value":1659},{"name":"ACT_DOTA_NIAN_INTRO_LEAP","value":1660},{"name":"ACT_DOTA_AREA_DENY","value":1661},{"name":"ACT_DOTA_NIAN_PIN_TO_STUN","value":1662},{"name":"ACT_DOTA_RAZE_1","value":1663},{"name":"ACT_DOTA_RAZE_2","value":1664},{"name":"ACT_DOTA_RAZE_3","value":1665},{"name":"ACT_DOTA_UNDYING_DECAY","value":1666},{"name":"ACT_DOTA_UNDYING_SOUL_RIP","value":1667},{"name":"ACT_DOTA_UNDYING_TOMBSTONE","value":1668},{"name":"ACT_DOTA_WHIRLING_AXES_RANGED","value":1669},{"name":"ACT_DOTA_SHALLOW_GRAVE","value":1670},{"name":"ACT_DOTA_COLD_FEET","value":1671},{"name":"ACT_DOTA_ICE_VORTEX","value":1672},{"name":"ACT_DOTA_CHILLING_TOUCH","value":1673},{"name":"ACT_DOTA_ENFEEBLE","value":1674},{"name":"ACT_DOTA_FATAL_BONDS","value":1675},{"name":"ACT_DOTA_MIDNIGHT_PULSE","value":1676},{"name":"ACT_DOTA_ANCESTRAL_SPIRIT","value":1677},{"name":"ACT_DOTA_THUNDER_STRIKE","value":1678},{"name":"ACT_DOTA_KINETIC_FIELD","value":1679},{"name":"ACT_DOTA_STATIC_STORM","value":1680},{"name":"ACT_DOTA_MINI_TAUNT","value":1681},{"name":"ACT_DOTA_ARCTIC_BURN_END","value":1682},{"name":"ACT_DOTA_LOADOUT_RARE","value":1683},{"name":"ACT_DOTA_SWIM","value":1684},{"name":"ACT_DOTA_FLEE","value":1685},{"name":"ACT_DOTA_TROT","value":1686},{"name":"ACT_DOTA_SHAKE","value":1687},{"name":"ACT_DOTA_SWIM_IDLE","value":1688},{"name":"ACT_DOTA_WAIT_IDLE","value":1689},{"name":"ACT_DOTA_GREET","value":1690},{"name":"ACT_DOTA_TELEPORT_COOP_START","value":1691},{"name":"ACT_DOTA_TELEPORT_COOP_WAIT","value":1692},{"name":"ACT_DOTA_TELEPORT_COOP_END","value":1693},{"name":"ACT_DOTA_TELEPORT_COOP_EXIT","value":1694},{"name":"ACT_DOTA_SHOPKEEPER_PET_INTERACT","value":1695},{"name":"ACT_DOTA_ITEM_PICKUP","value":1696},{"name":"ACT_DOTA_ITEM_DROP","value":1697},{"name":"ACT_DOTA_CAPTURE_PET","value":1698},{"name":"ACT_DOTA_PET_WARD_OBSERVER","value":1699},{"name":"ACT_DOTA_PET_WARD_SENTRY","value":1700},{"name":"ACT_DOTA_PET_LEVEL","value":1701},{"name":"ACT_DOTA_CAST_BURROW_END","value":1702},{"name":"ACT_DOTA_LIFESTEALER_ASSIMILATE","value":1703},{"name":"ACT_DOTA_LIFESTEALER_EJECT","value":1704},{"name":"ACT_DOTA_ATTACK_EVENT_BASH","value":1705},{"name":"ACT_DOTA_CAPTURE_RARE","value":1706},{"name":"ACT_DOTA_AW_MAGNETIC_FIELD","value":1707},{"name":"ACT_DOTA_CAST_GHOST_SHIP","value":1708},{"name":"ACT_DOTA_FXANIM","value":1709},{"name":"ACT_DOTA_VICTORY_START","value":1710},{"name":"ACT_DOTA_DEFEAT_START","value":1711},{"name":"ACT_DOTA_DP_SPIRIT_SIPHON","value":1712},{"name":"ACT_DOTA_TRICKS_END","value":1713},{"name":"ACT_DOTA_ES_STONE_CALLER","value":1714},{"name":"ACT_DOTA_MK_STRIKE","value":1715},{"name":"ACT_DOTA_VERSUS","value":1716},{"name":"ACT_DOTA_CAPTURE_CARD","value":1717},{"name":"ACT_DOTA_MK_SPRING_SOAR","value":1718},{"name":"ACT_DOTA_MK_SPRING_END","value":1719},{"name":"ACT_DOTA_MK_TREE_SOAR","value":1720},{"name":"ACT_DOTA_MK_TREE_END","value":1721},{"name":"ACT_DOTA_MK_FUR_ARMY","value":1722},{"name":"ACT_DOTA_MK_SPRING_CAST","value":1723},{"name":"ACT_DOTA_NECRO_GHOST_SHROUD","value":1724},{"name":"ACT_DOTA_OVERRIDE_ARCANA","value":1725},{"name":"ACT_DOTA_SLIDE","value":1726},{"name":"ACT_DOTA_SLIDE_LOOP","value":1727},{"name":"ACT_DOTA_GENERIC_CHANNEL_1","value":1728},{"name":"ACT_DOTA_GS_SOUL_CHAIN","value":1729},{"name":"ACT_DOTA_GS_INK_CREATURE","value":1730},{"name":"ACT_DOTA_TRANSITION","value":1731},{"name":"ACT_DOTA_BLINK_DAGGER","value":1732},{"name":"ACT_DOTA_BLINK_DAGGER_END","value":1733},{"name":"ACT_DOTA_CUSTOM_TOWER_ATTACK","value":1734},{"name":"ACT_DOTA_CUSTOM_TOWER_IDLE","value":1735},{"name":"ACT_DOTA_CUSTOM_TOWER_DIE","value":1736},{"name":"ACT_DOTA_CAST_COLD_SNAP_ORB","value":1737},{"name":"ACT_DOTA_CAST_GHOST_WALK_ORB","value":1738},{"name":"ACT_DOTA_CAST_TORNADO_ORB","value":1739},{"name":"ACT_DOTA_CAST_EMP_ORB","value":1740},{"name":"ACT_DOTA_CAST_ALACRITY_ORB","value":1741},{"name":"ACT_DOTA_CAST_CHAOS_METEOR_ORB","value":1742},{"name":"ACT_DOTA_CAST_SUN_STRIKE_ORB","value":1743},{"name":"ACT_DOTA_CAST_FORGE_SPIRIT_ORB","value":1744},{"name":"ACT_DOTA_CAST_ICE_WALL_ORB","value":1745},{"name":"ACT_DOTA_CAST_DEAFENING_BLAST_ORB","value":1746},{"name":"ACT_DOTA_NOTICE","value":1747},{"name":"ACT_DOTA_CAST_ABILITY_2_ALLY","value":1748},{"name":"ACT_DOTA_SHUFFLE_L","value":1749},{"name":"ACT_DOTA_SHUFFLE_R","value":1750},{"name":"ACT_DOTA_OVERRIDE_LOADOUT","value":1751},{"name":"ACT_DOTA_TAUNT_SPECIAL","value":1752},{"name":"ACT_DOTA_TELEPORT_START","value":1753},{"name":"ACT_DOTA_GENERIC_CHANNEL_1_START","value":1754},{"name":"ACT_DOTA_CUSTOM_TOWER_IDLE_RARE","value":1755},{"name":"ACT_DOTA_CUSTOM_TOWER_TAUNT","value":1756},{"name":"ACT_DOTA_CUSTOM_TOWER_HIGH_FIVE","value":1757},{"name":"ACT_DOTA_ATTACK_SPECIAL","value":1758},{"name":"ACT_DOTA_TRANSITION_IDLE","value":1759},{"name":"ACT_DOTA_PIERCE_THE_VEIL","value":1760},{"name":"ACT_DOTA_ARCANA_VOTE","value":1762},{"name":"ACT_DOTA_SPIRIT_BREAKER_ULT_RUN","value":1763},{"name":"ACT_DOTA_PUNCH","value":1764},{"name":"ACT_DOTA_CAST_STATUE","value":1765},{"name":"ACT_DOTA_ATTACK_STATUE","value":1766},{"name":"ACT_DOTA_CAST3_STATUE","value":1767},{"name":"ACT_DOTA_CAST1_STATUE","value":1768},{"name":"ACT_DOTA_TELEPORT_STATUE","value":1769},{"name":"ACT_DOTA_VICTORY_STATUE","value":1770},{"name":"ACT_DOTA_TAUNT_STATUE","value":1771},{"name":"ACT_DOTA_STATUE_SEQUENCE","value":1772},{"name":"ACT_DOTA_RUN_STATUE","value":1773},{"name":"ACT_DOTA_IDLE_STATUE","value":1774},{"name":"ACT_DOTA_CAST4_STATUE","value":1775},{"name":"ACT_DOTA_FLAIL_STATUE","value":1776},{"name":"ACT_DOTA_STUN_STATUE","value":1777},{"name":"ACT_DOTA_TELEPORT_END_STATUE","value":1778},{"name":"ACT_DOTA_DISABLED_END","value":1779},{"name":"ACT_DOTA_RELAX_IN","value":1781},{"name":"ACT_DOTA_RELAX_OUT","value":1782},{"name":"ACT_DOTA_CAST_FENCE","value":1783},{"name":"ACT_DOTA_RADIANT_CREEP_HAMMER","value":1785},{"name":"ACT_DOTA_SPWN","value":1786},{"name":"ACT_DOTA_RUN_ALT","value":1787},{"name":"ACT_DOTA_VOODOO_REST","value":1788},{"name":"ACT_DOTA_CYCLONE","value":1789},{"name":"ACT_DOTA_IMPALE","value":1790}]},{"kind":"enum","name":"LuaModifierType","available":"both","members":[{"name":"LUA_MODIFIER_MOTION_NONE","value":0},{"name":"LUA_MODIFIER_MOTION_HORIZONTAL","value":1},{"name":"LUA_MODIFIER_MOTION_VERTICAL","value":2},{"name":"LUA_MODIFIER_MOTION_BOTH","value":3},{"name":"LUA_MODIFIER_INVALID","value":4}]},{"kind":"enum","name":"modifierfunction","available":"both","members":[{"name":"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE","description":"Method Name: `GetModifierPreAttack_BonusDamage`","value":0},{"name":"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET","description":"Method Name: `GetModifierPreAttack_BonusDamage_Target`","value":1},{"name":"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC","description":"Method Name: `GetModifierPreAttack_BonusDamage_Proc`","value":2},{"name":"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT","description":"Method Name: `GetModifierPreAttack_BonusDamagePostCrit`","value":3},{"name":"MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE","description":"Method Name: `GetModifierBaseAttack_BonusDamage`","value":4},{"name":"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL","description":"Method Name: `GetModifierProcAttack_BonusDamage_Physical`","value":5},{"name":"MODIFIER_PROPERTY_PROCATTACK_CONVERT_PHYSICAL_TO_MAGICAL","description":"Method Name: `GetModifierProcAttack_ConvertPhysicalToMagical`","value":6},{"name":"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL","description":"Method Name: `GetModifierProcAttack_BonusDamage_Magical`","value":7},{"name":"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE","description":"Method Name: `GetModifierProcAttack_BonusDamage_Pure`","value":8},{"name":"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL_TARGET","description":"Method Name: `GetModifierProcAttack_BonusDamage_Magical_Target`","value":9},{"name":"MODIFIER_PROPERTY_PROCATTACK_FEEDBACK","description":"Method Name: `GetModifierProcAttack_Feedback`","value":10},{"name":"MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE","description":"Method Name: `GetModifierOverrideAttackDamage`","value":11},{"name":"MODIFIER_PROPERTY_PRE_ATTACK","description":"Method Name: `GetModifierPreAttack`","value":12},{"name":"MODIFIER_PROPERTY_INVISIBILITY_LEVEL","description":"Method Name: `GetModifierInvisibilityLevel`","value":13},{"name":"MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION","description":"Method Name: `GetModifierInvisibilityAttackBehaviorException`","value":14},{"name":"MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY","description":"Method Name: `GetModifierPersistentInvisibility`","value":15},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT","description":"Method Name: `GetModifierMoveSpeedBonus_Constant`","value":16},{"name":"MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE","description":"Method Name: `GetModifierMoveSpeedOverride`","value":17},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE","description":"Method Name: `GetModifierMoveSpeedBonus_Percentage`","value":18},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE","description":"Method Name: `GetModifierMoveSpeedBonus_Percentage_Unique`","value":19},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE","description":"Method Name: `GetModifierMoveSpeedBonus_Special_Boots`","value":20},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2","description":"Method Name: `GetModifierMoveSpeedBonus_Special_Boots_2`","value":21},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE","description":"Method Name: `GetModifierMoveSpeedBonus_Constant_Unique`","value":22},{"name":"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2","description":"Method Name: `GetModifierMoveSpeedBonus_Constant_Unique_2`","value":23},{"name":"MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE","description":"Method Name: `GetModifierMoveSpeed_Absolute`","value":24},{"name":"MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN","description":"Method Name: `GetModifierMoveSpeed_AbsoluteMin`","value":25},{"name":"MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX","description":"Method Name: `GetModifierMoveSpeed_AbsoluteMax`","value":26},{"name":"MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT","description":"Method Name: `GetModifierIgnoreMovespeedLimit`","value":27},{"name":"MODIFIER_PROPERTY_MOVESPEED_LIMIT","description":"Method Name: `GetModifierMoveSpeed_Limit`","value":28},{"name":"MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE","description":"Method Name: `GetModifierAttackSpeedBaseOverride`","value":29},{"name":"MODIFIER_PROPERTY_FIXED_ATTACK_RATE","description":"Method Name: `GetModifierFixedAttackRate`","value":30},{"name":"MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT","description":"Method Name: `GetModifierAttackSpeedBonus_Constant`","value":31},{"name":"MODIFIER_PROPERTY_IGNORE_ATTACKSPEED_LIMIT","description":"Method Name: `GetModifierAttackSpeed_Limit`","value":32},{"name":"MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT","description":"Method Name: `GetModifierCooldownReduction_Constant`","value":33},{"name":"MODIFIER_PROPERTY_MANACOST_REDUCTION_CONSTANT","description":"Method Name: `GetModifierManacostReduction_Constant`","value":34},{"name":"MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT","description":"Method Name: `GetModifierBaseAttackTimeConstant`","value":35},{"name":"MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST","description":"Method Name: `GetModifierBaseAttackTimeConstant_Adjust`","value":36},{"name":"MODIFIER_PROPERTY_BASE_ATTACK_TIME_PERCENTAGE","description":"Method Name: `GetModifierBaseAttackTimePercentage`","value":37},{"name":"MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT","description":"Method Name: `GetModifierAttackPointConstant`","value":38},{"name":"MODIFIER_PROPERTY_BONUSDAMAGEOUTGOING_PERCENTAGE","description":"Method Name: `GetModifierBonusDamageOutgoing_Percentage`","value":39},{"name":"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE","description":"Method Name: `GetModifierDamageOutgoing_Percentage`","value":40},{"name":"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION","description":"Method Name: `GetModifierDamageOutgoing_Percentage_Illusion`","value":41},{"name":"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY","description":"Method Name: `GetModifierDamageOutgoing_Percentage_Illusion_Amplify`","value":42},{"name":"MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE","description":"Method Name: `GetModifierTotalDamageOutgoing_Percentage`","value":43},{"name":"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_CREEP","description":"Method Name: `GetModifierSpellAmplify_PercentageCreep`","value":44},{"name":"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE","description":"Method Name: `GetModifierSpellAmplify_Percentage`","value":45},{"name":"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE","description":"Method Name: `GetModifierSpellAmplify_PercentageUnique`","value":46},{"name":"MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE","description":"Method Name: `GetModifierHealAmplify_PercentageSource`","value":47},{"name":"MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET","description":"Method Name: `GetModifierHealAmplify_PercentageTarget`","value":48},{"name":"MODIFIER_PROPERTY_HP_REGEN_CAN_BE_NEGATIVE","description":"Method Name: `GetModifierHPRegen_CanBeNegative`","value":49},{"name":"MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE","description":"Method Name: `GetModifierHPRegenAmplify_Percentage`","value":50},{"name":"MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE","description":"Method Name: `GetModifierLifestealRegenAmplify_Percentage`","value":51},{"name":"MODIFIER_PROPERTY_SPELL_LIFESTEAL_AMPLIFY_PERCENTAGE","description":"Method Name: `GetModifierSpellLifestealRegenAmplify_Percentage`","value":52},{"name":"MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE","description":"Method Name: `GetModifierMPRegenAmplify_Percentage`","value":53},{"name":"MODIFIER_PROPERTY_MANA_DRAIN_AMPLIFY_PERCENTAGE","description":"Method Name: `GetModifierManaDrainAmplify_Percentage`","value":54},{"name":"MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE","description":"Total amplify value is clamped to 0.\\n\\nMethod Name: `GetModifierMPRestoreAmplify_Percentage`.","value":55},{"name":"MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE","description":"Method Name: `GetModifierBaseDamageOutgoing_Percentage`","value":56},{"name":"MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE","description":"Method Name: `GetModifierBaseDamageOutgoing_PercentageUnique`","value":57},{"name":"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE","description":"Method Name: `GetModifierIncomingDamage_Percentage`","value":58},{"name":"MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE","description":"Method Name: `GetModifierIncomingPhysicalDamage_Percentage`","value":59},{"name":"MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT","description":"Method Name: `GetModifierIncomingPhysicalDamageConstant`","value":60},{"name":"MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT","description":"Method Name: `GetModifierIncomingSpellDamageConstant`","value":61},{"name":"MODIFIER_PROPERTY_EVASION_CONSTANT","description":"Method Name: `GetModifierEvasion_Constant`","value":62},{"name":"MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT","description":"Method Name: `GetModifierNegativeEvasion_Constant`","value":63},{"name":"MODIFIER_PROPERTY_STATUS_RESISTANCE","description":"Method Name: `GetModifierStatusResistance`","value":64},{"name":"MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING","description":"Method Name: `GetModifierStatusResistanceStacking`","value":65},{"name":"MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER","description":"Method Name: `GetModifierStatusResistanceCaster`","value":66},{"name":"MODIFIER_PROPERTY_AVOID_DAMAGE","description":"Method Name: `GetModifierAvoidDamage`","value":67},{"name":"MODIFIER_PROPERTY_AVOID_SPELL","description":"Method Name: `GetModifierAvoidSpell`","value":68},{"name":"MODIFIER_PROPERTY_MISS_PERCENTAGE","description":"Method Name: `GetModifierMiss_Percentage`","value":69},{"name":"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE","description":"Values above 100% are ignored.\\n\\nMethod Name: `GetModifierPhysicalArmorBase_Percentage`.","value":70},{"name":"MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE","description":"Method Name: `GetModifierPhysicalArmorTotal_Percentage`","value":71},{"name":"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS","description":"Method Name: `GetModifierPhysicalArmorBonus`","value":72},{"name":"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE","description":"Method Name: `GetModifierPhysicalArmorBonusUnique`","value":73},{"name":"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE","description":"Method Name: `GetModifierPhysicalArmorBonusUniqueActive`","value":74},{"name":"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_POST","description":"Method Name: `GetModifierPhysicalArmorBonusPost`","value":75},{"name":"MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR","description":"Method Name: `GetModifierIgnorePhysicalArmor`","value":76},{"name":"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION","description":"Method Name: `GetModifierMagicalResistanceBaseReduction`","value":77},{"name":"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION","description":"Method Name: `GetModifierMagicalResistanceDirectModification`","value":78},{"name":"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS","description":"Method Name: `GetModifierMagicalResistanceBonus`","value":79},{"name":"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS","description":"Method Name: `GetModifierMagicalResistanceBonusIllusions`","value":80},{"name":"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE","description":"Method Name: `GetModifierMagicalResistanceDecrepifyUnique`","value":81},{"name":"MODIFIER_PROPERTY_BASE_MANA_REGEN","description":"Method Name: `GetModifierBaseRegen`","value":82},{"name":"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT","description":"Method Name: `GetModifierConstantManaRegen`","value":83},{"name":"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE","description":"Method Name: `GetModifierConstantManaRegenUnique`","value":84},{"name":"MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE","description":"Method Name: `GetModifierTotalPercentageManaRegen`","value":85},{"name":"MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT","description":"Method Name: `GetModifierConstantHealthRegen`","value":86},{"name":"MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE","description":"Method Name: `GetModifierHealthRegenPercentage`","value":87},{"name":"MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE","description":"Method Name: `GetModifierHealthRegenPercentageUnique`","value":88},{"name":"MODIFIER_PROPERTY_HEALTH_BONUS","description":"Method Name: `GetModifierHealthBonus`","value":89},{"name":"MODIFIER_PROPERTY_MANA_BONUS","description":"Method Name: `GetModifierManaBonus`","value":90},{"name":"MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS","description":"Method Name: `GetModifierExtraStrengthBonus`","value":91},{"name":"MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS","description":"Method Name: `GetModifierExtraHealthBonus`","value":92},{"name":"MODIFIER_PROPERTY_EXTRA_MANA_BONUS","description":"Method Name: `GetModifierExtraManaBonus`","value":93},{"name":"MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE","description":"Method Name: `GetModifierExtraHealthPercentage`","value":94},{"name":"MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE","description":"Method Name: `GetModifierExtraManaPercentage`","value":95},{"name":"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS","description":"Method Name: `GetModifierBonusStats_Strength`","value":96},{"name":"MODIFIER_PROPERTY_STATS_AGILITY_BONUS","description":"Method Name: `GetModifierBonusStats_Agility`","value":97},{"name":"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS","description":"Method Name: `GetModifierBonusStats_Intellect`","value":98},{"name":"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE","description":"Method Name: `GetModifierBonusStats_Strength_Percentage`","value":99},{"name":"MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE","description":"Method Name: `GetModifierBonusStats_Agility_Percentage`","value":100},{"name":"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE","description":"Method Name: `GetModifierBonusStats_Intellect_Percentage`","value":101},{"name":"MODIFIER_PROPERTY_CAST_RANGE_BONUS","description":"Method Name: `GetModifierCastRangeBonus`","value":102},{"name":"MODIFIER_PROPERTY_CAST_RANGE_BONUS_PERCENTAGE","description":"Method Name: `GetModifierCastRangeBonusPercentage`","value":103},{"name":"MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET","description":"Method Name: `GetModifierCastRangeBonusTarget`","value":104},{"name":"MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING","description":"Method Name: `GetModifierCastRangeBonusStacking`","value":105},{"name":"MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE","description":"Method Name: `GetModifierAttackRangeOverride`","value":106},{"name":"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS","description":"Method Name: `GetModifierAttackRangeBonus`","value":107},{"name":"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE","description":"Method Name: `GetModifierAttackRangeBonusUnique`","value":108},{"name":"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE","description":"Method Name: `GetModifierAttackRangeBonusPercentage`","value":109},{"name":"MODIFIER_PROPERTY_MAX_ATTACK_RANGE","description":"Method Name: `GetModifierMaxAttackRange`","value":110},{"name":"MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS","description":"Method Name: `GetModifierProjectileSpeedBonus`","value":111},{"name":"MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE","description":"Method Name: `GetModifierProjectileSpeedBonusPercentage`","value":112},{"name":"MODIFIER_PROPERTY_PROJECTILE_NAME","description":"Method Name: `GetModifierProjectileName`","value":113},{"name":"MODIFIER_PROPERTY_REINCARNATION","description":"Method Name: `ReincarnateTime`","value":114},{"name":"MODIFIER_PROPERTY_RESPAWNTIME","description":"Method Name: `GetModifierConstantRespawnTime`","value":115},{"name":"MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE","description":"Method Name: `GetModifierPercentageRespawnTime`","value":116},{"name":"MODIFIER_PROPERTY_RESPAWNTIME_STACKING","description":"Method Name: `GetModifierStackingRespawnTime`","value":117},{"name":"MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE","description":"Method Name: `GetModifierPercentageCooldown`","value":118},{"name":"MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING","description":"Method Name: `GetModifierPercentageCooldownOngoing`","value":119},{"name":"MODIFIER_PROPERTY_CASTTIME_PERCENTAGE","description":"Method Name: `GetModifierPercentageCasttime`","value":120},{"name":"MODIFIER_PROPERTY_ATTACK_ANIM_TIME_PERCENTAGE","description":"Method Name: `GetModifierPercentageAttackAnimTime`","value":121},{"name":"MODIFIER_PROPERTY_MANACOST_PERCENTAGE","description":"Method Name: `GetModifierPercentageManacost`","value":122},{"name":"MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING","description":"Method Name: `GetModifierPercentageManacostStacking`","value":123},{"name":"MODIFIER_PROPERTY_DEATHGOLDCOST","description":"Method Name: `GetModifierConstantDeathGoldCost`","value":124},{"name":"MODIFIER_PROPERTY_EXP_RATE_BOOST","description":"Method Name: `GetModifierPercentageExpRateBoost`","value":125},{"name":"MODIFIER_PROPERTY_GOLD_RATE_BOOST","description":"Method Name: `GetModifierPercentageGoldRateBoost`","value":126},{"name":"MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE","description":"Method Name: `GetModifierPreAttack_CriticalStrike`","value":127},{"name":"MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE","description":"Method Name: `GetModifierPreAttack_Target_CriticalStrike`","value":128},{"name":"MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK","description":"Method Name: `GetModifierMagical_ConstantBlock`","value":129},{"name":"MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK","description":"Method Name: `GetModifierPhysical_ConstantBlock`","value":130},{"name":"MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL","description":"Method Name: `GetModifierPhysical_ConstantBlockSpecial`","value":131},{"name":"MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR","description":"Method Name: `GetModifierPhysical_ConstantBlockUnavoidablePreArmor`","value":132},{"name":"MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK","description":"Method Name: `GetModifierTotal_ConstantBlock`","value":133},{"name":"MODIFIER_PROPERTY_OVERRIDE_ANIMATION","description":"Method Name: `GetOverrideAnimation`","value":134},{"name":"MODIFIER_PROPERTY_OVERRIDE_ANIMATION_WEIGHT","description":"Method Name: `GetOverrideAnimationWeight`","value":135},{"name":"MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE","description":"Method Name: `GetOverrideAnimationRate`","value":136},{"name":"MODIFIER_PROPERTY_ABSORB_SPELL","description":"Method Name: `GetAbsorbSpell`","value":137},{"name":"MODIFIER_PROPERTY_REFLECT_SPELL","description":"Method Name: `GetReflectSpell`","value":138},{"name":"MODIFIER_PROPERTY_DISABLE_AUTOATTACK","description":"Method Name: `GetDisableAutoAttack`","value":139},{"name":"MODIFIER_PROPERTY_BONUS_DAY_VISION","description":"Method Name: `GetBonusDayVision`","value":140},{"name":"MODIFIER_PROPERTY_BONUS_NIGHT_VISION","description":"Method Name: `GetBonusNightVision`","value":141},{"name":"MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE","description":"Method Name: `GetBonusNightVisionUnique`","value":142},{"name":"MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE","description":"Method Name: `GetBonusVisionPercentage`","value":143},{"name":"MODIFIER_PROPERTY_FIXED_DAY_VISION","description":"Method Name: `GetFixedDayVision`","value":144},{"name":"MODIFIER_PROPERTY_FIXED_NIGHT_VISION","description":"Method Name: `GetFixedNightVision`","value":145},{"name":"MODIFIER_PROPERTY_MIN_HEALTH","description":"Method Name: `GetMinHealth`","value":146},{"name":"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL","description":"Method Name: `GetAbsoluteNoDamagePhysical`","value":147},{"name":"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL","description":"Method Name: `GetAbsoluteNoDamageMagical`","value":148},{"name":"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE","description":"Method Name: `GetAbsoluteNoDamagePure`","value":149},{"name":"MODIFIER_PROPERTY_IS_ILLUSION","description":"Method Name: `GetIsIllusion`","value":150},{"name":"MODIFIER_PROPERTY_ILLUSION_LABEL","description":"Method Name: `GetModifierIllusionLabel`","value":151},{"name":"MODIFIER_PROPERTY_STRONG_ILLUSION","description":"Method Name: `GetModifierStrongIllusion`","value":152},{"name":"MODIFIER_PROPERTY_SUPER_ILLUSION","description":"Method Name: `GetModifierSuperIllusion`","value":153},{"name":"MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE","description":"Method Name: `GetModifierSuperIllusionWithUltimate`","value":154},{"name":"MODIFIER_PROPERTY_XP_DURING_DEATH","description":"Method Name: `GetModifierXPDuringDeath`","value":155},{"name":"MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE","description":"Method Name: `GetModifierTurnRate_Percentage`","value":156},{"name":"MODIFIER_PROPERTY_TURN_RATE_OVERRIDE","description":"Method Name: `GetModifierTurnRate_Override`","value":157},{"name":"MODIFIER_PROPERTY_DISABLE_HEALING","description":"Method Name: `GetDisableHealing`","value":158},{"name":"MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK","description":"Method Name: `GetAlwaysAllowAttack`","value":159},{"name":"MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK","description":"Method Name: `GetAllowEtherealAttack`","value":160},{"name":"MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL","description":"Method Name: `GetOverrideAttackMagical`","value":161},{"name":"MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH","description":"Method Name: `GetModifierUnitStatsNeedsRefresh`","value":162},{"name":"MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER","value":163},{"name":"MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER","value":164},{"name":"MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING","description":"Method Name: `GetModifierUnitDisllowUpgrading`","value":165},{"name":"MODIFIER_PROPERTY_DODGE_PROJECTILE","description":"Method Name: `GetModifierDodgeProjectile`","value":166},{"name":"MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK","description":"Method Name: `GetTriggerCosmeticAndEndAttack`","value":167},{"name":"MODIFIER_PROPERTY_MAX_DEBUFF_DURATION","description":"Method Name: `GetModifierMaxDebuffDuration`","value":168},{"name":"MODIFIER_PROPERTY_PRIMARY_STAT_DAMAGE_MULTIPLIER","description":"Method Name: `GetPrimaryStatDamageMultiplier`","value":169},{"name":"MODIFIER_PROPERTY_PREATTACK_DEADLY_BLOW","description":"Method Name: `GetModifierPreAttack_DeadlyBlow`","value":170},{"name":"MODIFIER_PROPERTY_ALWAYS_AUTOATTACK_WHILE_HOLD_POSITION","description":"Method Name: `GetAlwaysAutoAttackWhileHoldPosition`","value":171},{"name":"MODIFIER_EVENT_ON_SPELL_TARGET_READY","description":"Method Name: `OnSpellTargetReady`","value":172},{"name":"MODIFIER_EVENT_ON_ATTACK_RECORD","description":"Method Name: `OnAttackRecord`","value":173},{"name":"MODIFIER_EVENT_ON_ATTACK_START","description":"Method Name: `OnAttackStart`","value":174},{"name":"MODIFIER_EVENT_ON_ATTACK","description":"Method Name: `OnAttack`","value":175},{"name":"MODIFIER_EVENT_ON_ATTACK_LANDED","description":"Method Name: `OnAttackLanded`","value":176},{"name":"MODIFIER_EVENT_ON_ATTACK_FAIL","description":"Method Name: `OnAttackFail`","value":177},{"name":"MODIFIER_EVENT_ON_ATTACK_ALLIED","description":"Happens even if attack can\'t be issued.\\n\\nMethod Name: `OnAttackAllied`.","value":178},{"name":"MODIFIER_EVENT_ON_PROJECTILE_DODGE","description":"Method Name: `OnProjectileDodge`","value":179},{"name":"MODIFIER_EVENT_ON_ORDER","description":"Method Name: `OnOrder`","value":180},{"name":"MODIFIER_EVENT_ON_UNIT_MOVED","description":"Method Name: `OnUnitMoved`","value":181},{"name":"MODIFIER_EVENT_ON_ABILITY_START","description":"Method Name: `OnAbilityStart`","value":182},{"name":"MODIFIER_EVENT_ON_ABILITY_EXECUTED","description":"Method Name: `OnAbilityExecuted`","value":183},{"name":"MODIFIER_EVENT_ON_ABILITY_FULLY_CAST","description":"Method Name: `OnAbilityFullyCast`","value":184},{"name":"MODIFIER_EVENT_ON_BREAK_INVISIBILITY","description":"Method Name: `OnBreakInvisibility`","value":185},{"name":"MODIFIER_EVENT_ON_ABILITY_END_CHANNEL","description":"Method Name: `OnAbilityEndChannel`","value":186},{"name":"MODIFIER_EVENT_ON_PROCESS_UPGRADE","value":187},{"name":"MODIFIER_EVENT_ON_REFRESH","value":188},{"name":"MODIFIER_EVENT_ON_TAKEDAMAGE","description":"Method Name: `OnTakeDamage`","value":189},{"name":"MODIFIER_EVENT_ON_DEATH_PREVENTED","description":"Method Name: `OnDamagePrevented`","value":190},{"name":"MODIFIER_EVENT_ON_STATE_CHANGED","description":"Method Name: `OnStateChanged`","value":191},{"name":"MODIFIER_EVENT_ON_ORB_EFFECT","value":192},{"name":"MODIFIER_EVENT_ON_PROCESS_CLEAVE","description":"Method Name: `OnProcessCleave`","value":193},{"name":"MODIFIER_EVENT_ON_DAMAGE_CALCULATED","description":"Method Name: `OnDamageCalculated`","value":194},{"name":"MODIFIER_EVENT_ON_MAGIC_DAMAGE_CALCULATED","description":"Method Name: `OnMagicDamageCalculated`","value":195},{"name":"MODIFIER_EVENT_ON_ATTACKED","description":"Method Name: `OnAttacked`","value":196},{"name":"MODIFIER_EVENT_ON_DEATH","description":"Method Name: `OnDeath`","value":197},{"name":"MODIFIER_EVENT_ON_RESPAWN","description":"Method Name: `OnRespawn`","value":198},{"name":"MODIFIER_EVENT_ON_SPENT_MANA","description":"Method Name: `OnSpentMana`","value":199},{"name":"MODIFIER_EVENT_ON_TELEPORTING","description":"Method Name: `OnTeleporting`","value":200},{"name":"MODIFIER_EVENT_ON_TELEPORTED","description":"Method Name: `OnTeleported`","value":201},{"name":"MODIFIER_EVENT_ON_SET_LOCATION","description":"Method Name: `OnSetLocation`","value":202},{"name":"MODIFIER_EVENT_ON_HEALTH_GAINED","description":"Method Name: `OnHealthGained`","value":203},{"name":"MODIFIER_EVENT_ON_MANA_GAINED","description":"Method Name: `OnManaGained`","value":204},{"name":"MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT","description":"Method Name: `OnTakeDamageKillCredit`","value":205},{"name":"MODIFIER_EVENT_ON_HERO_KILLED","description":"Method Name: `OnHeroKilled`","value":206},{"name":"MODIFIER_EVENT_ON_HEAL_RECEIVED","description":"Method Name: `OnHealReceived`","value":207},{"name":"MODIFIER_EVENT_ON_BUILDING_KILLED","description":"Method Name: `OnBuildingKilled`","value":208},{"name":"MODIFIER_EVENT_ON_MODEL_CHANGED","description":"Method Name: `OnModelChanged`","value":209},{"name":"MODIFIER_EVENT_ON_MODIFIER_ADDED","description":"Method Name: `OnModifierAdded`","value":210},{"name":"MODIFIER_PROPERTY_TOOLTIP","description":"Method Name: `OnTooltip`","value":211},{"name":"MODIFIER_PROPERTY_MODEL_CHANGE","description":"Method Name: `GetModifierModelChange`","value":212},{"name":"MODIFIER_PROPERTY_MODEL_SCALE","description":"Method Name: `GetModifierModelScale`","value":213},{"name":"MODIFIER_PROPERTY_IS_SCEPTER","description":"Always applies scepter when this property is active\\n\\nMethod Name: `GetModifierScepter`.","value":214},{"name":"MODIFIER_PROPERTY_IS_SHARD","description":"Method Name: `GetModifierShard`","value":215},{"name":"MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION","description":"Method Name: `GetModifierRadarCooldownReduction`","value":216},{"name":"MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS","description":"Method Name: `GetActivityTranslationModifiers`","value":217},{"name":"MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND","description":"Method Name: `GetAttackSound`","value":218},{"name":"MODIFIER_PROPERTY_LIFETIME_FRACTION","description":"Method Name: `GetUnitLifetimeFraction`","value":219},{"name":"MODIFIER_PROPERTY_PROVIDES_FOW_POSITION","description":"Method Name: `GetModifierProvidesFOWVision`","value":220},{"name":"MODIFIER_PROPERTY_SPELLS_REQUIRE_HP","description":"Method Name: `GetModifierSpellsRequireHP`","value":221},{"name":"MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP","description":"Method Name: `GetForceDrawOnMinimap`","value":222},{"name":"MODIFIER_PROPERTY_DISABLE_TURNING","description":"Method Name: `GetModifierDisableTurning`","value":223},{"name":"MODIFIER_PROPERTY_IGNORE_CAST_ANGLE","description":"Method Name: `GetModifierIgnoreCastAngle`","value":224},{"name":"MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE","description":"Method Name: `GetModifierChangeAbilityValue`","value":225},{"name":"MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL","description":"Method Name: `GetModifierOverrideAbilitySpecial`","value":226},{"name":"MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL_VALUE","description":"Method Name: `GetModifierOverrideAbilitySpecialValue`","value":227},{"name":"MODIFIER_PROPERTY_ABILITY_LAYOUT","description":"Method Name: `GetModifierAbilityLayout`","value":228},{"name":"MODIFIER_EVENT_ON_DOMINATED","description":"Method Name: `OnDominated`","value":229},{"name":"MODIFIER_EVENT_ON_KILL","description":"Method Name: `OnKill`","value":230},{"name":"MODIFIER_EVENT_ON_ASSIST","description":"Method Name: `OnAssist`","value":231},{"name":"MODIFIER_PROPERTY_TEMPEST_DOUBLE","description":"Method Name: `GetModifierTempestDouble`","value":232},{"name":"MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE","description":"Method Name: `PreserveParticlesOnModelChanged`","value":233},{"name":"MODIFIER_EVENT_ON_ATTACK_FINISHED","description":"Method Name: `OnAttackFinished`","value":234},{"name":"MODIFIER_PROPERTY_IGNORE_COOLDOWN","description":"Method Name: `GetModifierIgnoreCooldown`","value":235},{"name":"MODIFIER_PROPERTY_CAN_ATTACK_TREES","description":"Method Name: `GetModifierCanAttackTrees`","value":236},{"name":"MODIFIER_PROPERTY_VISUAL_Z_DELTA","description":"Method Name: `GetVisualZDelta`","value":237},{"name":"MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION","value":238},{"name":"MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER","description":"Method Name: `GetModifierNoVisionOfAttacker`","value":239},{"name":"MODIFIER_PROPERTY_TOOLTIP2","description":"Method Name: `OnTooltip2`","value":240},{"name":"MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY","description":"Method Name: `OnAttackRecordDestroy`","value":241},{"name":"MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT","description":"Method Name: `OnProjectileObstructionHit`","value":242},{"name":"MODIFIER_PROPERTY_SUPPRESS_TELEPORT","description":"Method Name: `GetSuppressTeleport`","value":243},{"name":"MODIFIER_EVENT_ON_ATTACK_CANCELLED","description":"Method Name: `OnAttackCancelled`","value":244},{"name":"MODIFIER_PROPERTY_SUPPRESS_CLEAVE","description":"Method Name: `GetSuppressCleave`","value":245},{"name":"MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS","description":"Method Name: `BotAttackScoreBonus`","value":246},{"name":"MODIFIER_PROPERTY_ATTACKSPEED_REDUCTION_PERCENTAGE","description":"Method Name: `GetModifierAttackSpeedReductionPercentage`","value":247},{"name":"MODIFIER_PROPERTY_MOVESPEED_REDUCTION_PERCENTAGE","description":"Method Name: `GetModifierMoveSpeedReductionPercentage`","value":248},{"name":"MODIFIER_PROPERTY_ATTACK_WHILE_MOVING_TARGET","value":249},{"name":"MODIFIER_PROPERTY_ATTACKSPEED_PERCENTAGE","description":"Method Name: `GetModifierAttackSpeedPercentage`","value":250},{"name":"MODIFIER_EVENT_ON_ATTEMPT_PROJECTILE_DODGE","description":"Method Name: `OnAttemptProjectileDodge`","value":251},{"name":"MODIFIER_EVENT_ON_PREDEBUFF_APPLIED","description":"Method Name: `OnPreDebuffApplied`","value":252},{"name":"MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_STACKING","description":"Method Name: `GetModifierPercentageCooldownStacking`","value":253},{"name":"MODIFIER_FUNCTION_LAST","value":254},{"name":"MODIFIER_FUNCTION_INVALID","value":255}]},{"kind":"enum","name":"modifierpriority","available":"both","members":[{"name":"MODIFIER_PRIORITY_LOW","value":0},{"name":"MODIFIER_PRIORITY_NORMAL","value":1},{"name":"MODIFIER_PRIORITY_HIGH","value":2},{"name":"MODIFIER_PRIORITY_ULTRA","value":3},{"name":"MODIFIER_PRIORITY_SUPER_ULTRA","value":4}]},{"kind":"enum","name":"modifierremove","available":"both","members":[{"name":"DOTA_BUFF_REMOVE_ALL","value":0},{"name":"DOTA_BUFF_REMOVE_ENEMY","value":1},{"name":"DOTA_BUFF_REMOVE_ALLY","value":2}]},{"kind":"enum","name":"modifierstate","available":"both","members":[{"name":"MODIFIER_STATE_ROOTED","value":0},{"name":"MODIFIER_STATE_DISARMED","value":1},{"name":"MODIFIER_STATE_ATTACK_IMMUNE","value":2},{"name":"MODIFIER_STATE_SILENCED","value":3},{"name":"MODIFIER_STATE_MUTED","value":4},{"name":"MODIFIER_STATE_STUNNED","value":5},{"name":"MODIFIER_STATE_HEXED","value":6},{"name":"MODIFIER_STATE_INVISIBLE","value":7},{"name":"MODIFIER_STATE_INVULNERABLE","value":8},{"name":"MODIFIER_STATE_MAGIC_IMMUNE","value":9},{"name":"MODIFIER_STATE_PROVIDES_VISION","value":10},{"name":"MODIFIER_STATE_NIGHTMARED","value":11},{"name":"MODIFIER_STATE_BLOCK_DISABLED","value":12},{"name":"MODIFIER_STATE_EVADE_DISABLED","value":13},{"name":"MODIFIER_STATE_UNSELECTABLE","value":14},{"name":"MODIFIER_STATE_CANNOT_TARGET_ENEMIES","value":15},{"name":"MODIFIER_STATE_CANNOT_MISS","value":16},{"name":"MODIFIER_STATE_SPECIALLY_DENIABLE","value":17},{"name":"MODIFIER_STATE_FROZEN","value":18},{"name":"MODIFIER_STATE_COMMAND_RESTRICTED","value":19},{"name":"MODIFIER_STATE_NOT_ON_MINIMAP","value":20},{"name":"MODIFIER_STATE_LOW_ATTACK_PRIORITY","value":21},{"name":"MODIFIER_STATE_NO_HEALTH_BAR","value":22},{"name":"MODIFIER_STATE_NO_HEALTH_BAR_FOR_ENEMIES","value":23},{"name":"MODIFIER_STATE_FLYING","value":24},{"name":"MODIFIER_STATE_NO_UNIT_COLLISION","value":25},{"name":"MODIFIER_STATE_NO_TEAM_MOVE_TO","value":26},{"name":"MODIFIER_STATE_NO_TEAM_SELECT","value":27},{"name":"MODIFIER_STATE_PASSIVES_DISABLED","value":28},{"name":"MODIFIER_STATE_DOMINATED","value":29},{"name":"MODIFIER_STATE_BLIND","value":30},{"name":"MODIFIER_STATE_OUT_OF_GAME","value":31},{"name":"MODIFIER_STATE_FAKE_ALLY","value":32},{"name":"MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY","value":33},{"name":"MODIFIER_STATE_TRUESIGHT_IMMUNE","value":34},{"name":"MODIFIER_STATE_UNTARGETABLE","value":35},{"name":"MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS","value":36},{"name":"MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES","value":37},{"name":"MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES","value":38},{"name":"MODIFIER_STATE_UNSLOWABLE","value":39},{"name":"MODIFIER_STATE_TETHERED","value":40},{"name":"MODIFIER_STATE_IGNORING_STOP_ORDERS","value":41},{"name":"MODIFIER_STATE_FEARED","value":42},{"name":"MODIFIER_STATE_TAUNTED","value":43},{"name":"MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED","value":44},{"name":"MODIFIER_STATE_FORCED_FLYING_VISION","value":45},{"name":"MODIFIER_STATE_ATTACK_ALLIES","value":46},{"name":"MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS","value":47},{"name":"MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE","value":48},{"name":"MODIFIER_STATE_SPECIALLY_UNDENIABLE","value":49},{"name":"MODIFIER_STATE_LAST","value":50}]},{"kind":"enum","name":"ParticleAttachment_t","available":"both","members":[{"name":"PATTACH_INVALID","value":-1},{"name":"PATTACH_ABSORIGIN","value":0},{"name":"PATTACH_ABSORIGIN_FOLLOW","value":1},{"name":"PATTACH_CUSTOMORIGIN","value":2},{"name":"PATTACH_CUSTOMORIGIN_FOLLOW","value":3},{"name":"PATTACH_POINT","value":4},{"name":"PATTACH_POINT_FOLLOW","value":5},{"name":"PATTACH_EYES_FOLLOW","value":6},{"name":"PATTACH_OVERHEAD_FOLLOW","value":7},{"name":"PATTACH_WORLDORIGIN","value":8},{"name":"PATTACH_ROOTBONE_FOLLOW","value":9},{"name":"PATTACH_RENDERORIGIN_FOLLOW","value":10},{"name":"PATTACH_MAIN_VIEW","value":11},{"name":"PATTACH_WATERWAKE","value":12},{"name":"PATTACH_CENTER_FOLLOW","value":13},{"name":"PATTACH_CUSTOM_GAME_STATE_1","value":14},{"name":"PATTACH_HEALTHBAR","value":15},{"name":"MAX_PATTACH_TYPES","value":16}]},{"kind":"enum","name":"PseudoRandom","available":"server","members":[{"name":"DOTA_PSEUDO_RANDOM_NONE","value":0},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_1","value":77},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_2","value":78},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_3","value":79},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_4","value":80},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_5","value":81},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_6","value":82},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_7","value":83},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_8","value":84},{"name":"DOTA_PSEUDO_RANDOM_CUSTOM_GAME_9","value":85}]},{"kind":"enum","name":"quest_text_replace_values_t","available":"server","members":[{"name":"QUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE","value":0},{"name":"QUEST_TEXT_REPLACE_VALUE_TARGET_VALUE","value":1},{"name":"QUEST_TEXT_REPLACE_VALUE_ROUND","value":2},{"name":"QUEST_TEXT_REPLACE_VALUE_REWARD","value":3},{"name":"QUEST_NUM_TEXT_REPLACE_VALUES","value":4}]},{"kind":"enum","name":"ShowGenericPopupType","available":"server","members":[{"name":"DOTA_SHOWGENERICPOPUP_TINT_SCREEN","value":1},{"name":"DOTA_SHOWGENERICPOPUP_SHOW_NO_OTHER_DIALOGS","value":2}]},{"kind":"enum","name":"SourceEngineAnimationEvent","available":"both","members":[{"name":"AE_EMPTY","value":0},{"name":"AE_CL_PLAYSOUND","value":1},{"name":"AE_CL_PLAYSOUND_ATTACHMENT","value":2},{"name":"AE_CL_PLAYSOUND_POSITION","value":3},{"name":"AE_SV_PLAYSOUND","value":4},{"name":"AE_CL_STOPSOUND","value":5},{"name":"AE_CL_PLAYSOUND_LOOPING","value":6},{"name":"AE_CLIENT_EFFECT_ATTACH","value":7},{"name":"AE_CL_CREATE_PARTICLE_EFFECT","value":8},{"name":"AE_CL_STOP_PARTICLE_EFFECT","value":9},{"name":"AE_CL_ADD_PARTICLE_EFFECT_CP","value":10},{"name":"AE_CL_CREATE_PARTICLE_EFFECT_CFG","value":11},{"name":"AE_CL_SUPPRESS_EVENTS_WITH_TAG","value":12},{"name":"AE_START_SCRIPTED_EFFECT","value":13},{"name":"AE_STOP_SCRIPTED_EFFECT","value":14},{"name":"AE_MUZZLEFLASH","value":15},{"name":"AE_SV_CREATE_PARTICLE_EFFECT_CFG","value":16},{"name":"AE_SV_STOP_PARTICLE_EFFECT","value":17},{"name":"AE_CL_HIDE_PARTICLE_EFFECT","value":18},{"name":"AE_CL_SHOW_PARTICLE_EFFECT","value":19},{"name":"AE_FOOTSTEP","value":20},{"name":"AE_CL_FOOTSTEP_LEFT","value":21},{"name":"AE_CL_FOOTSTEP_RIGHT","value":22},{"name":"AE_CL_MFOOTSTEP_LEFT","value":23},{"name":"AE_CL_MFOOTSTEP_RIGHT","value":24},{"name":"AE_CL_MFOOTSTEP_LEFT_LOUD","value":25},{"name":"AE_CL_MFOOTSTEP_RIGHT_LOUD","value":26},{"name":"AE_RAGDOLL","value":27},{"name":"AE_CL_ENABLE_BODYGROUP","value":28},{"name":"AE_CL_DISABLE_BODYGROUP","value":29},{"name":"AE_CL_BODYGROUP_SET_VALUE","value":30},{"name":"AE_SV_BODYGROUP_SET_VALUE","value":31},{"name":"AE_CL_BODYGROUP_SET_VALUE_CMODEL_WPN","value":32},{"name":"AE_WPN_PRIMARYATTACK","value":33},{"name":"AE_WPN_PLAYWPNSOUND","value":34},{"name":"AE_WPN_SECONDARYATTACK","value":35},{"name":"AE_CL_SPEECH","value":36},{"name":"AE_FIRE_INPUT","value":37},{"name":"AE_IK_SET_LOCK_ROTATION_ALPHA","value":38},{"name":"AE_IK_ALLOW_PLANE_TILT_NORMAL_UPDATES","value":39},{"name":"AE_IK_SET_MASTER_BLEND_AMOUNT","value":40},{"name":"AE_IK_SET_CHAIN_BLEND_AMOUNT","value":41},{"name":"AE_CL_CLOTH_ATTR","value":42},{"name":"AE_CL_CLOTH_GROUND_OFFSET","value":43},{"name":"AE_CL_CLOTH_STIFFEN","value":44},{"name":"AE_CL_CLOTH_EFFECT","value":45},{"name":"AE_CL_CREATE_ANIM_SCOPE_PROP","value":46},{"name":"AE_HAPTIC_PULSE","value":47},{"name":"AE_CL_DOTA_PLAY_STATUS_EFFECT","value":48},{"name":"AE_CL_DOTA_STOP_STATUS_EFFECT","value":49},{"name":"AE_CL_DOTA_NPC_CREATE_PARTICLE_EFFECT","value":50},{"name":"AE_CL_DOTA_RUBICK_ARCANA_CREATE_PARTICLE_EFFECT","value":51},{"name":"AE_DOTA_PET_ITEM_PICKUP","value":52},{"name":"AE_DOTA_PET_ITEM_DROP","value":53},{"name":"AE_DOTA_SUPPRESS_CONSTANT_LAYER","value":54},{"name":"AE_DOTA_PLAY_SOUND_ATTACK_SPECIAL","value":55},{"name":"AE_DOTA_CREATE_CLINKZ_ATTACK","value":56},{"name":"AE_DOTA_PLAY_SOUND_ATTACK_BACKSTAB","value":57},{"name":"AE_DOTA_DIE_PHANTOM_DEATH_PARTICLES","value":58},{"name":"AE_DOTA_SWITCH_ATTACK_COMBO","value":59}],"description":"https://developer.valvesoftware.com/wiki/Animation_Events#Server_events"},{"kind":"enum","name":"SourceEngineDamageTypes","available":"both","members":[{"name":"DMG_GENERIC","description":"Generic damage.","value":0},{"name":"DMG_CRUSH","description":"Caused by physics interaction. Ignored by airboat drivers.","value":1},{"name":"DMG_BULLET","description":"Bullet damage.","value":2},{"name":"DMG_SLASH","description":"Sharp objects, such as Manhacks or other NPCs attacks.","value":4},{"name":"DMG_BURN","description":"Damage from fire.","value":8},{"name":"DMG_VEHICLE","description":"Hit by a vehicle. This will need to be set for passengers of some vehicle to receive damage.","value":16},{"name":"DMG_FALL","description":"Fall damage.","value":32},{"name":"DMG_BLAST","description":"Explosion damage. Will be ignored by most vehicle passengers.","value":64},{"name":"DMG_CLUB","description":"Crowbar damage.","value":128},{"name":"DMG_SHOCK","description":"Electrical damage, shows smoke at the damage position.","value":256},{"name":"DMG_SONIC","description":"Sonic damage,used by the Gargantua and Houndeye NPCs.","value":512},{"name":"DMG_ENERGYBEAM","description":"Laser.","value":1024},{"name":"DMG_PREVENT_PHYSICS_FORCE","description":"Prevent a physics force.","value":2048},{"name":"DMG_NEVERGIB","description":"Never creates gibs. Used by the crossbow.","value":4096},{"name":"DMG_ALWAYSGIB","description":"Always create gibs.","value":8192},{"name":"DMG_DROWN","description":"Drown damage.","value":16384},{"name":"DMG_PARALYZE","description":"Same as DMG_POISON.","value":32768},{"name":"DMG_NERVEGAS","description":"Neurotoxin damage.","value":65536},{"name":"DMG_POISON","description":"Poison damage.","value":131072},{"name":"DMG_RADIATION","description":"Radiation. Will be ignored by most vehicle passengers.","value":262144},{"name":"DMG_DROWNRECOVER","description":"Damage applied to the player to restore health after drowning.","value":524288},{"name":"DMG_ACID","description":"Toxic chemicals or acid burns.","value":1048576},{"name":"DMG_SLOWBURN","description":"In an oven.","value":2097152},{"name":"DMG_REMOVENORAGDOLL","description":"Don\'t create a ragdoll on death.","value":4194304},{"name":"DMG_PHYSGUN","description":"Damage done by the gravity gun.","value":8388608},{"name":"DMG_PLASMA","description":"Plasma.","value":16777216}],"description":"https://developer.valvesoftware.com/wiki/Damage_types"},{"kind":"enum","name":"SourceEngineSoundData","available":"both","members":[{"name":"EMPTY","value":0},{"name":"SINGLE_SHOT","value":1},{"name":"DOUBLE_SHOT","value":2},{"name":"RELOAD","value":3},{"name":"MELEE_MISS","value":4},{"name":"MELEE_HIT","value":5},{"name":"MELEE_HIT_WORLD","value":6},{"name":"SPECIAL1","value":8},{"name":"SPECIAL2","value":9},{"name":"SPECIAL3","value":10}],"description":"https://developer.valvesoftware.com/wiki/Weapon_script#SoundData"},{"kind":"enum","name":"subquest_text_replace_values_t","available":"server","members":[{"name":"SUBQUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE","value":0},{"name":"SUBQUEST_TEXT_REPLACE_VALUE_TARGET_VALUE","value":1},{"name":"SUBQUEST_NUM_TEXT_REPLACE_VALUES","value":2}]},{"kind":"enum","name":"UnitFilterResult","available":"both","members":[{"name":"UF_SUCCESS","value":0},{"name":"UF_FAIL_FRIENDLY","value":1},{"name":"UF_FAIL_ENEMY","value":2},{"name":"UF_FAIL_HERO","value":3},{"name":"UF_FAIL_CONSIDERED_HERO","value":4},{"name":"UF_FAIL_CREEP","value":5},{"name":"UF_FAIL_BUILDING","value":6},{"name":"UF_FAIL_COURIER","value":7},{"name":"UF_FAIL_OTHER","value":8},{"name":"UF_FAIL_ANCIENT","value":9},{"name":"UF_FAIL_ILLUSION","value":10},{"name":"UF_FAIL_SUMMONED","value":11},{"name":"UF_FAIL_DOMINATED","value":12},{"name":"UF_FAIL_MELEE","value":13},{"name":"UF_FAIL_RANGED","value":14},{"name":"UF_FAIL_DEAD","value":15},{"name":"UF_FAIL_MAGIC_IMMUNE_ALLY","value":16},{"name":"UF_FAIL_MAGIC_IMMUNE_ENEMY","value":17},{"name":"UF_FAIL_INVULNERABLE","value":18},{"name":"UF_FAIL_IN_FOW","value":19},{"name":"UF_FAIL_INVISIBLE","value":20},{"name":"UF_FAIL_NOT_PLAYER_CONTROLLED","value":21},{"name":"UF_FAIL_ATTACK_IMMUNE","value":22},{"name":"UF_FAIL_CUSTOM","value":23},{"name":"UF_FAIL_INVALID_LOCATION","value":24},{"name":"UF_FAIL_DISABLE_HELP","value":25},{"name":"UF_FAIL_OUT_OF_WORLD","value":26},{"name":"UF_FAIL_NIGHTMARED","value":27},{"name":"UF_FAIL_OBSTRUCTED","value":28}]}]')},bkJV:(e,a,n)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.getDeepTypes=a.getFuncDeepTypes=a.findTypeByName=a.allData=a.enums=a.api=void 0;const t=n("mrSG"),i=t.__importDefault(n("CBiV"));a.api=i.default;const r=t.__importDefault(n("yNYU")),s=t.__importDefault(n("KEF9"));a.enums=s.default;const l=n("dSGb");a.allData=[...i.default,...s.default];const o=[...a.allData,...r.default];function u(e){const n=new Set;return e.forEach((function e(t){"string"==typeof t?n.add(t):"literal"===t.kind||("table"===t.kind?(t.key.forEach(e),t.value.forEach(e)):"array"===t.kind?t.types.forEach(e):"function"===t.kind?a.getFuncDeepTypes(t).forEach((e=>n.add(e))):l.assertNever(t))})),[...n]}a.findTypeByName=e=>o.find((a=>a.name===e)),a.getFuncDeepTypes=e=>u([...e.args.flatMap((e=>e.types)),...e.returns]),a.getDeepTypes=u},dSGb:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.assertNever=void 0,a.assertNever=function(e){throw new Error(`Unexpected value: ${e}`)}},yxil:(e,a,n)=>{"use strict";n.d(a,{qj:()=>se,Z8:()=>me,t1:()=>ce,aV:()=>Re});var t=n("lwsE"),i=n.n(t),r=n("W8MJ"),s=n.n(r),l=n("a1gu"),o=n.n(l),u=n("Nsbk"),m=n.n(u),c=n("PJYZ"),d=n.n(c),_=n("7W2i"),v=n.n(_),p=n("lSNA"),T=n.n(p),A=n("q1tI");function f(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=e&&this.setState(e)}function h(e){this.setState(function(a){var n=this.constructor.getDerivedStateFromProps(e,a);return null!=n?n:null}.bind(this))}function g(e,a){try{var n=this.props,t=this.state;this.props=e,this.state=a,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,t)}finally{this.props=n,this.state=t}}function b(e){var a=e.prototype;if(!a||!a.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof e.getDerivedStateFromProps&&"function"!=typeof a.getSnapshotBeforeUpdate)return e;var n=null,t=null,i=null;if("function"==typeof a.componentWillMount?n="componentWillMount":"function"==typeof a.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"==typeof a.componentWillReceiveProps?t="componentWillReceiveProps":"function"==typeof a.UNSAFE_componentWillReceiveProps&&(t="UNSAFE_componentWillReceiveProps"),"function"==typeof a.componentWillUpdate?i="componentWillUpdate":"function"==typeof a.UNSAFE_componentWillUpdate&&(i="UNSAFE_componentWillUpdate"),null!==n||null!==t||null!==i){var r=e.displayName||e.name,s="function"==typeof e.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+r+" uses "+s+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==t?"\n  "+t:"")+(null!==i?"\n  "+i:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof e.getDerivedStateFromProps&&(a.componentWillMount=f,a.componentWillReceiveProps=h),"function"==typeof a.getSnapshotBeforeUpdate){if("function"!=typeof a.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");a.componentWillUpdate=g;var l=a.componentDidUpdate;a.componentDidUpdate=function(e,a,n){var t=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;l.call(this,e,a,t)}}return e}f.__suppressDeprecationWarning=!0,h.__suppressDeprecationWarning=!0,g.__suppressDeprecationWarning=!0;var y=n("pVnL"),E=n.n(y);function C(e){var a,n,t="";if("string"==typeof e||"number"==typeof e)t+=e;else if("object"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(n=C(e[a]))&&(t&&(t+=" "),t+=n);else for(a in e)e[a]&&(t&&(t+=" "),t+=a);return t}function O(){for(var e,a,n=0,t="";n<arguments.length;)(e=arguments[n++])&&(a=C(e))&&(t&&(t+=" "),t+=a);return t}function I(e){var a=e.cellCount,n=e.cellSize,t=e.computeMetadataCallback,i=e.computeMetadataCallbackProps,r=e.nextCellsCount,s=e.nextCellSize,l=e.nextScrollToIndex,o=e.scrollToIndex,u=e.updateScrollOffsetForScrollToIndex;a===r&&("number"!=typeof n&&"number"!=typeof s||n===s)||(t(i),o>=0&&o===l&&u())}var S=n("QILm"),R=n.n(S),D=(n("17x9"),function(){function e(a){var n=a.cellCount,t=a.cellSizeGetter,r=a.estimatedCellSize;i()(this,e),T()(this,"_cellSizeAndPositionData",{}),T()(this,"_lastMeasuredIndex",-1),T()(this,"_lastBatchedIndex",-1),T()(this,"_cellCount",void 0),T()(this,"_cellSizeGetter",void 0),T()(this,"_estimatedCellSize",void 0),this._cellSizeGetter=t,this._cellCount=n,this._estimatedCellSize=r}return s()(e,[{key:"areOffsetsAdjusted",value:function(){return!1}},{key:"configure",value:function(e){var a=e.cellCount,n=e.estimatedCellSize,t=e.cellSizeGetter;this._cellCount=a,this._estimatedCellSize=n,this._cellSizeGetter=t}},{key:"getCellCount",value:function(){return this._cellCount}},{key:"getEstimatedCellSize",value:function(){return this._estimatedCellSize}},{key:"getLastMeasuredIndex",value:function(){return this._lastMeasuredIndex}},{key:"getOffsetAdjustment",value:function(){return 0}},{key:"getSizeAndPositionOfCell",value:function(e){if(e<0||e>=this._cellCount)throw Error("Requested index ".concat(e," is outside of range 0..").concat(this._cellCount));if(e>this._lastMeasuredIndex)for(var a=this.getSizeAndPositionOfLastMeasuredCell(),n=a.offset+a.size,t=this._lastMeasuredIndex+1;t<=e;t++){var i=this._cellSizeGetter({index:t});if(void 0===i||isNaN(i))throw Error("Invalid size returned for cell ".concat(t," of value ").concat(i));null===i?(this._cellSizeAndPositionData[t]={offset:n,size:0},this._lastBatchedIndex=e):(this._cellSizeAndPositionData[t]={offset:n,size:i},n+=i,this._lastMeasuredIndex=e)}return this._cellSizeAndPositionData[e]}},{key:"getSizeAndPositionOfLastMeasuredCell",value:function(){return this._lastMeasuredIndex>=0?this._cellSizeAndPositionData[this._lastMeasuredIndex]:{offset:0,size:0}}},{key:"getTotalSize",value:function(){var e=this.getSizeAndPositionOfLastMeasuredCell();return e.offset+e.size+(this._cellCount-this._lastMeasuredIndex-1)*this._estimatedCellSize}},{key:"getUpdatedOffsetForIndex",value:function(e){var a=e.align,n=void 0===a?"auto":a,t=e.containerSize,i=e.currentOffset,r=e.targetIndex;if(t<=0)return 0;var s,l=this.getSizeAndPositionOfCell(r),o=l.offset,u=o-t+l.size;switch(n){case"start":s=o;break;case"end":s=u;break;case"center":s=o-(t-l.size)/2;break;default:s=Math.max(u,Math.min(o,i))}var m=this.getTotalSize();return Math.max(0,Math.min(m-t,s))}},{key:"getVisibleCellRange",value:function(e){var a=e.containerSize,n=e.offset;if(0===this.getTotalSize())return{};var t=n+a,i=this._findNearestCell(n),r=this.getSizeAndPositionOfCell(i);n=r.offset+r.size;for(var s=i;n<t&&s<this._cellCount-1;)s++,n+=this.getSizeAndPositionOfCell(s).size;return{start:i,stop:s}}},{key:"resetCell",value:function(e){this._lastMeasuredIndex=Math.min(this._lastMeasuredIndex,e-1)}},{key:"_binarySearch",value:function(e,a,n){for(;a<=e;){var t=a+Math.floor((e-a)/2),i=this.getSizeAndPositionOfCell(t).offset;if(i===n)return t;i<n?a=t+1:i>n&&(e=t-1)}return a>0?a-1:0}},{key:"_exponentialSearch",value:function(e,a){for(var n=1;e<this._cellCount&&this.getSizeAndPositionOfCell(e).offset<a;)e+=n,n*=2;return this._binarySearch(Math.min(e,this._cellCount-1),Math.floor(e/2),a)}},{key:"_findNearestCell",value:function(e){if(isNaN(e))throw Error("Invalid offset ".concat(e," specified"));e=Math.max(0,e);var a=this.getSizeAndPositionOfLastMeasuredCell(),n=Math.max(0,this._lastMeasuredIndex);return a.offset>=e?this._binarySearch(n,0,e):this._exponentialSearch(n,e)}}]),e}()),k=function(){function e(a){var n=a.maxScrollSize,t=void 0===n?"undefined"!=typeof window&&window.chrome?16777100:15e5:n,r=R()(a,["maxScrollSize"]);i()(this,e),T()(this,"_cellSizeAndPositionManager",void 0),T()(this,"_maxScrollSize",void 0),this._cellSizeAndPositionManager=new D(r),this._maxScrollSize=t}return s()(e,[{key:"areOffsetsAdjusted",value:function(){return this._cellSizeAndPositionManager.getTotalSize()>this._maxScrollSize}},{key:"configure",value:function(e){this._cellSizeAndPositionManager.configure(e)}},{key:"getCellCount",value:function(){return this._cellSizeAndPositionManager.getCellCount()}},{key:"getEstimatedCellSize",value:function(){return this._cellSizeAndPositionManager.getEstimatedCellSize()}},{key:"getLastMeasuredIndex",value:function(){return this._cellSizeAndPositionManager.getLastMeasuredIndex()}},{key:"getOffsetAdjustment",value:function(e){var a=e.containerSize,n=e.offset,t=this._cellSizeAndPositionManager.getTotalSize(),i=this.getTotalSize(),r=this._getOffsetPercentage({containerSize:a,offset:n,totalSize:i});return Math.round(r*(i-t))}},{key:"getSizeAndPositionOfCell",value:function(e){return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(e)}},{key:"getSizeAndPositionOfLastMeasuredCell",value:function(){return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell()}},{key:"getTotalSize",value:function(){return Math.min(this._maxScrollSize,this._cellSizeAndPositionManager.getTotalSize())}},{key:"getUpdatedOffsetForIndex",value:function(e){var a=e.align,n=void 0===a?"auto":a,t=e.containerSize,i=e.currentOffset,r=e.targetIndex;i=this._safeOffsetToOffset({containerSize:t,offset:i});var s=this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({align:n,containerSize:t,currentOffset:i,targetIndex:r});return this._offsetToSafeOffset({containerSize:t,offset:s})}},{key:"getVisibleCellRange",value:function(e){var a=e.containerSize,n=e.offset;return n=this._safeOffsetToOffset({containerSize:a,offset:n}),this._cellSizeAndPositionManager.getVisibleCellRange({containerSize:a,offset:n})}},{key:"resetCell",value:function(e){this._cellSizeAndPositionManager.resetCell(e)}},{key:"_getOffsetPercentage",value:function(e){var a=e.containerSize,n=e.offset,t=e.totalSize;return t<=a?0:n/(t-a)}},{key:"_offsetToSafeOffset",value:function(e){var a=e.containerSize,n=e.offset,t=this._cellSizeAndPositionManager.getTotalSize(),i=this.getTotalSize();if(t===i)return n;var r=this._getOffsetPercentage({containerSize:a,offset:n,totalSize:t});return Math.round(r*(i-a))}},{key:"_safeOffsetToOffset",value:function(e){var a=e.containerSize,n=e.offset,t=this._cellSizeAndPositionManager.getTotalSize(),i=this.getTotalSize();if(t===i)return n;var r=this._getOffsetPercentage({containerSize:a,offset:n,totalSize:i});return Math.round(r*(t-a))}}]),e}();function P(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],a={};return function(n){var t=n.callback,i=n.indices,r=Object.keys(i),s=!e||r.every((function(e){var a=i[e];return Array.isArray(a)?a.length>0:a>=0})),l=r.length!==Object.keys(a).length||r.some((function(e){var n=a[e],t=i[e];return Array.isArray(t)?n.join(",")!==t.join(","):n!==t}));a=i,s&&l&&t(i)}}function M(e){var a=e.cellSize,n=e.cellSizeAndPositionManager,t=e.previousCellsCount,i=e.previousCellSize,r=e.previousScrollToAlignment,s=e.previousScrollToIndex,l=e.previousSize,o=e.scrollOffset,u=e.scrollToAlignment,m=e.scrollToIndex,c=e.size,d=e.sizeJustIncreasedFromZero,_=e.updateScrollIndexCallback,v=n.getCellCount(),p=m>=0&&m<v;p&&(c!==l||d||!i||"number"==typeof a&&a!==i||u!==r||m!==s)?_(m):!p&&v>0&&(c<l||v<t)&&o>n.getTotalSize()-c&&_(v-1)}const N=!("undefined"==typeof window||!window.document||!window.document.createElement);var G,L;function w(e){if((!G&&0!==G||e)&&N){var a=document.createElement("div");a.style.position="absolute",a.style.top="-9999px",a.style.width="50px",a.style.height="50px",a.style.overflow="scroll",document.body.appendChild(a),G=a.offsetWidth-a.clientWidth,document.body.removeChild(a)}return G}var U,B,H=(L="undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).requestAnimationFrame||L.webkitRequestAnimationFrame||L.mozRequestAnimationFrame||L.oRequestAnimationFrame||L.msRequestAnimationFrame||function(e){return L.setTimeout(e,1e3/60)},F=L.cancelAnimationFrame||L.webkitCancelAnimationFrame||L.mozCancelAnimationFrame||L.oCancelAnimationFrame||L.msCancelAnimationFrame||function(e){L.clearTimeout(e)},V=H,x=F,Y=function(e){return x(e.id)},W=function(e,a){var n;Promise.resolve().then((function(){n=Date.now()}));var t={id:V((function i(){Date.now()-n>=a?e.call():t.id=V(i)}))};return t};function K(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function z(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?K(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):K(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var j="requested",q=(B=U=function(e){function a(e){var n;i()(this,a),n=o()(this,m()(a).call(this,e)),T()(d()(n),"_onGridRenderedMemoizer",P()),T()(d()(n),"_onScrollMemoizer",P(!1)),T()(d()(n),"_deferredInvalidateColumnIndex",null),T()(d()(n),"_deferredInvalidateRowIndex",null),T()(d()(n),"_recomputeScrollLeftFlag",!1),T()(d()(n),"_recomputeScrollTopFlag",!1),T()(d()(n),"_horizontalScrollBarSize",0),T()(d()(n),"_verticalScrollBarSize",0),T()(d()(n),"_scrollbarPresenceChanged",!1),T()(d()(n),"_scrollingContainer",void 0),T()(d()(n),"_childrenToDisplay",void 0),T()(d()(n),"_columnStartIndex",void 0),T()(d()(n),"_columnStopIndex",void 0),T()(d()(n),"_rowStartIndex",void 0),T()(d()(n),"_rowStopIndex",void 0),T()(d()(n),"_renderedColumnStartIndex",0),T()(d()(n),"_renderedColumnStopIndex",0),T()(d()(n),"_renderedRowStartIndex",0),T()(d()(n),"_renderedRowStopIndex",0),T()(d()(n),"_initialScrollTop",void 0),T()(d()(n),"_initialScrollLeft",void 0),T()(d()(n),"_disablePointerEventsTimeoutId",void 0),T()(d()(n),"_styleCache",{}),T()(d()(n),"_cellCache",{}),T()(d()(n),"_debounceScrollEndedCallback",(function(){n._disablePointerEventsTimeoutId=null,n.setState({isScrolling:!1,needToResetStyleCache:!1})})),T()(d()(n),"_invokeOnGridRenderedHelper",(function(){var e=n.props.onSectionRendered;n._onGridRenderedMemoizer({callback:e,indices:{columnOverscanStartIndex:n._columnStartIndex,columnOverscanStopIndex:n._columnStopIndex,columnStartIndex:n._renderedColumnStartIndex,columnStopIndex:n._renderedColumnStopIndex,rowOverscanStartIndex:n._rowStartIndex,rowOverscanStopIndex:n._rowStopIndex,rowStartIndex:n._renderedRowStartIndex,rowStopIndex:n._renderedRowStopIndex}})})),T()(d()(n),"_setScrollingContainerRef",(function(e){n._scrollingContainer=e})),T()(d()(n),"_onScroll",(function(e){e.target===n._scrollingContainer&&n.handleScrollEvent(e.target)}));var t=new k({cellCount:e.columnCount,cellSizeGetter:function(n){return a._wrapSizeGetter(e.columnWidth)(n)},estimatedCellSize:a._getEstimatedColumnSize(e)}),r=new k({cellCount:e.rowCount,cellSizeGetter:function(n){return a._wrapSizeGetter(e.rowHeight)(n)},estimatedCellSize:a._getEstimatedRowSize(e)});return n.state={instanceProps:{columnSizeAndPositionManager:t,rowSizeAndPositionManager:r,prevColumnWidth:e.columnWidth,prevRowHeight:e.rowHeight,prevColumnCount:e.columnCount,prevRowCount:e.rowCount,prevIsScrolling:!0===e.isScrolling,prevScrollToColumn:e.scrollToColumn,prevScrollToRow:e.scrollToRow,scrollbarSize:0,scrollbarSizeMeasured:!1},isScrolling:!1,scrollDirectionHorizontal:1,scrollDirectionVertical:1,scrollLeft:0,scrollTop:0,scrollPositionChangeReason:null,needToResetStyleCache:!1},e.scrollToRow>0&&(n._initialScrollTop=n._getCalculatedScrollTop(e,n.state)),e.scrollToColumn>0&&(n._initialScrollLeft=n._getCalculatedScrollLeft(e,n.state)),n}return v()(a,e),s()(a,[{key:"getOffsetForCell",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.alignment,n=void 0===a?this.props.scrollToAlignment:a,t=e.columnIndex,i=void 0===t?this.props.scrollToColumn:t,r=e.rowIndex,s=void 0===r?this.props.scrollToRow:r,l=z({},this.props,{scrollToAlignment:n,scrollToColumn:i,scrollToRow:s});return{scrollLeft:this._getCalculatedScrollLeft(l),scrollTop:this._getCalculatedScrollTop(l)}}},{key:"getTotalRowsHeight",value:function(){return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize()}},{key:"getTotalColumnsWidth",value:function(){return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize()}},{key:"handleScrollEvent",value:function(e){var a=e.scrollLeft,n=void 0===a?0:a,t=e.scrollTop,i=void 0===t?0:t;if(!(i<0)){this._debounceScrollEnded();var r=this.props,s=r.autoHeight,l=r.autoWidth,o=r.height,u=r.width,m=this.state.instanceProps,c=m.scrollbarSize,d=m.rowSizeAndPositionManager.getTotalSize(),_=m.columnSizeAndPositionManager.getTotalSize(),v=Math.min(Math.max(0,_-u+c),n),p=Math.min(Math.max(0,d-o+c),i);if(this.state.scrollLeft!==v||this.state.scrollTop!==p){var T={isScrolling:!0,scrollDirectionHorizontal:v!==this.state.scrollLeft?v>this.state.scrollLeft?1:-1:this.state.scrollDirectionHorizontal,scrollDirectionVertical:p!==this.state.scrollTop?p>this.state.scrollTop?1:-1:this.state.scrollDirectionVertical,scrollPositionChangeReason:"observed"};s||(T.scrollTop=p),l||(T.scrollLeft=v),T.needToResetStyleCache=!1,this.setState(T)}this._invokeOnScrollMemoizer({scrollLeft:v,scrollTop:p,totalColumnsWidth:_,totalRowsHeight:d})}}},{key:"invalidateCellSizeAfterRender",value:function(e){var a=e.columnIndex,n=e.rowIndex;this._deferredInvalidateColumnIndex="number"==typeof this._deferredInvalidateColumnIndex?Math.min(this._deferredInvalidateColumnIndex,a):a,this._deferredInvalidateRowIndex="number"==typeof this._deferredInvalidateRowIndex?Math.min(this._deferredInvalidateRowIndex,n):n}},{key:"measureAllCells",value:function(){var e=this.props,a=e.columnCount,n=e.rowCount,t=this.state.instanceProps;t.columnSizeAndPositionManager.getSizeAndPositionOfCell(a-1),t.rowSizeAndPositionManager.getSizeAndPositionOfCell(n-1)}},{key:"recomputeGridSize",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.columnIndex,n=void 0===a?0:a,t=e.rowIndex,i=void 0===t?0:t,r=this.props,s=r.scrollToColumn,l=r.scrollToRow,o=this.state.instanceProps;o.columnSizeAndPositionManager.resetCell(n),o.rowSizeAndPositionManager.resetCell(i),this._recomputeScrollLeftFlag=s>=0&&(1===this.state.scrollDirectionHorizontal?n<=s:n>=s),this._recomputeScrollTopFlag=l>=0&&(1===this.state.scrollDirectionVertical?i<=l:i>=l),this._styleCache={},this._cellCache={},this.forceUpdate()}},{key:"scrollToCell",value:function(e){var a=e.columnIndex,n=e.rowIndex,t=this.props.columnCount,i=this.props;t>1&&void 0!==a&&this._updateScrollLeftForScrollToColumn(z({},i,{scrollToColumn:a})),void 0!==n&&this._updateScrollTopForScrollToRow(z({},i,{scrollToRow:n}))}},{key:"componentDidMount",value:function(){var e=this.props,n=e.getScrollbarSize,t=e.height,i=e.scrollLeft,r=e.scrollToColumn,s=e.scrollTop,l=e.scrollToRow,o=e.width,u=this.state.instanceProps;if(this._initialScrollTop=0,this._initialScrollLeft=0,this._handleInvalidatedGridSize(),u.scrollbarSizeMeasured||this.setState((function(e){var a=z({},e,{needToResetStyleCache:!1});return a.instanceProps.scrollbarSize=n(),a.instanceProps.scrollbarSizeMeasured=!0,a})),"number"==typeof i&&i>=0||"number"==typeof s&&s>=0){var m=a._getScrollToPositionStateUpdate({prevState:this.state,scrollLeft:i,scrollTop:s});m&&(m.needToResetStyleCache=!1,this.setState(m))}this._scrollingContainer&&(this._scrollingContainer.scrollLeft!==this.state.scrollLeft&&(this._scrollingContainer.scrollLeft=this.state.scrollLeft),this._scrollingContainer.scrollTop!==this.state.scrollTop&&(this._scrollingContainer.scrollTop=this.state.scrollTop));var c=t>0&&o>0;r>=0&&c&&this._updateScrollLeftForScrollToColumn(),l>=0&&c&&this._updateScrollTopForScrollToRow(),this._invokeOnGridRenderedHelper(),this._invokeOnScrollMemoizer({scrollLeft:i||0,scrollTop:s||0,totalColumnsWidth:u.columnSizeAndPositionManager.getTotalSize(),totalRowsHeight:u.rowSizeAndPositionManager.getTotalSize()}),this._maybeCallOnScrollbarPresenceChange()}},{key:"componentDidUpdate",value:function(e,a){var n=this,t=this.props,i=t.autoHeight,r=t.autoWidth,s=t.columnCount,l=t.height,o=t.rowCount,u=t.scrollToAlignment,m=t.scrollToColumn,c=t.scrollToRow,d=t.width,_=this.state,v=_.scrollLeft,p=_.scrollPositionChangeReason,T=_.scrollTop,A=_.instanceProps;this._handleInvalidatedGridSize();var f=s>0&&0===e.columnCount||o>0&&0===e.rowCount;p===j&&(!r&&v>=0&&(v!==this._scrollingContainer.scrollLeft||f)&&(this._scrollingContainer.scrollLeft=v),!i&&T>=0&&(T!==this._scrollingContainer.scrollTop||f)&&(this._scrollingContainer.scrollTop=T));var h=(0===e.width||0===e.height)&&l>0&&d>0;if(this._recomputeScrollLeftFlag?(this._recomputeScrollLeftFlag=!1,this._updateScrollLeftForScrollToColumn(this.props)):M({cellSizeAndPositionManager:A.columnSizeAndPositionManager,previousCellsCount:e.columnCount,previousCellSize:e.columnWidth,previousScrollToAlignment:e.scrollToAlignment,previousScrollToIndex:e.scrollToColumn,previousSize:e.width,scrollOffset:v,scrollToAlignment:u,scrollToIndex:m,size:d,sizeJustIncreasedFromZero:h,updateScrollIndexCallback:function(){return n._updateScrollLeftForScrollToColumn(n.props)}}),this._recomputeScrollTopFlag?(this._recomputeScrollTopFlag=!1,this._updateScrollTopForScrollToRow(this.props)):M({cellSizeAndPositionManager:A.rowSizeAndPositionManager,previousCellsCount:e.rowCount,previousCellSize:e.rowHeight,previousScrollToAlignment:e.scrollToAlignment,previousScrollToIndex:e.scrollToRow,previousSize:e.height,scrollOffset:T,scrollToAlignment:u,scrollToIndex:c,size:l,sizeJustIncreasedFromZero:h,updateScrollIndexCallback:function(){return n._updateScrollTopForScrollToRow(n.props)}}),this._invokeOnGridRenderedHelper(),v!==a.scrollLeft||T!==a.scrollTop){var g=A.rowSizeAndPositionManager.getTotalSize(),b=A.columnSizeAndPositionManager.getTotalSize();this._invokeOnScrollMemoizer({scrollLeft:v,scrollTop:T,totalColumnsWidth:b,totalRowsHeight:g})}this._maybeCallOnScrollbarPresenceChange()}},{key:"componentWillUnmount",value:function(){this._disablePointerEventsTimeoutId&&Y(this._disablePointerEventsTimeoutId)}},{key:"render",value:function(){var e=this.props,a=e.autoContainerWidth,n=e.autoHeight,t=e.autoWidth,i=e.className,r=e.containerProps,s=e.containerRole,l=e.containerStyle,o=e.height,u=e.id,m=e.noContentRenderer,c=e.role,d=e.style,_=e.tabIndex,v=e.width,p=this.state,T=p.instanceProps,f=p.needToResetStyleCache,h=this._isScrolling(),g={boxSizing:"border-box",direction:"ltr",height:n?"auto":o,position:"relative",width:t?"auto":v,WebkitOverflowScrolling:"touch",willChange:"transform"};f&&(this._styleCache={}),this.state.isScrolling||this._resetStyleCache(),this._calculateChildrenToRender(this.props,this.state);var b=T.columnSizeAndPositionManager.getTotalSize(),y=T.rowSizeAndPositionManager.getTotalSize(),C=y>o?T.scrollbarSize:0,I=b>v?T.scrollbarSize:0;I===this._horizontalScrollBarSize&&C===this._verticalScrollBarSize||(this._horizontalScrollBarSize=I,this._verticalScrollBarSize=C,this._scrollbarPresenceChanged=!0),g.overflowX=b+C<=v?"hidden":"auto",g.overflowY=y+I<=o?"hidden":"auto";var S=this._childrenToDisplay,R=0===S.length&&o>0&&v>0;return A.createElement("div",E()({ref:this._setScrollingContainerRef},r,{"aria-label":this.props["aria-label"],"aria-readonly":this.props["aria-readonly"],className:O("ReactVirtualized__Grid",i),id:u,onScroll:this._onScroll,role:c,style:z({},g,{},d),tabIndex:_}),S.length>0&&A.createElement("div",{className:"ReactVirtualized__Grid__innerScrollContainer",role:s,style:z({width:a?"auto":b,height:y,maxWidth:b,maxHeight:y,overflow:"hidden",pointerEvents:h?"none":"",position:"relative"},l)},S),R&&m())}},{key:"_calculateChildrenToRender",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state,n=e.cellRenderer,t=e.cellRangeRenderer,i=e.columnCount,r=e.deferredMeasurementCache,s=e.height,l=e.overscanColumnCount,o=e.overscanIndicesGetter,u=e.overscanRowCount,m=e.rowCount,c=e.width,d=e.isScrollingOptOut,_=a.scrollDirectionHorizontal,v=a.scrollDirectionVertical,p=a.instanceProps,T=this._initialScrollTop>0?this._initialScrollTop:a.scrollTop,A=this._initialScrollLeft>0?this._initialScrollLeft:a.scrollLeft,f=this._isScrolling(e,a);if(this._childrenToDisplay=[],s>0&&c>0){var h=p.columnSizeAndPositionManager.getVisibleCellRange({containerSize:c,offset:A}),g=p.rowSizeAndPositionManager.getVisibleCellRange({containerSize:s,offset:T}),b=p.columnSizeAndPositionManager.getOffsetAdjustment({containerSize:c,offset:A}),y=p.rowSizeAndPositionManager.getOffsetAdjustment({containerSize:s,offset:T});this._renderedColumnStartIndex=h.start,this._renderedColumnStopIndex=h.stop,this._renderedRowStartIndex=g.start,this._renderedRowStopIndex=g.stop;var E=o({direction:"horizontal",cellCount:i,overscanCellsCount:l,scrollDirection:_,startIndex:"number"==typeof h.start?h.start:0,stopIndex:"number"==typeof h.stop?h.stop:-1}),C=o({direction:"vertical",cellCount:m,overscanCellsCount:u,scrollDirection:v,startIndex:"number"==typeof g.start?g.start:0,stopIndex:"number"==typeof g.stop?g.stop:-1}),O=E.overscanStartIndex,I=E.overscanStopIndex,S=C.overscanStartIndex,R=C.overscanStopIndex;if(r){if(!r.hasFixedHeight())for(var D=S;D<=R;D++)if(!r.has(D,0)){O=0,I=i-1;break}if(!r.hasFixedWidth())for(var k=O;k<=I;k++)if(!r.has(0,k)){S=0,R=m-1;break}}this._childrenToDisplay=t({cellCache:this._cellCache,cellRenderer:n,columnSizeAndPositionManager:p.columnSizeAndPositionManager,columnStartIndex:O,columnStopIndex:I,deferredMeasurementCache:r,horizontalOffsetAdjustment:b,isScrolling:f,isScrollingOptOut:d,parent:this,rowSizeAndPositionManager:p.rowSizeAndPositionManager,rowStartIndex:S,rowStopIndex:R,scrollLeft:A,scrollTop:T,styleCache:this._styleCache,verticalOffsetAdjustment:y,visibleColumnIndices:h,visibleRowIndices:g}),this._columnStartIndex=O,this._columnStopIndex=I,this._rowStartIndex=S,this._rowStopIndex=R}}},{key:"_debounceScrollEnded",value:function(){var e=this.props.scrollingResetTimeInterval;this._disablePointerEventsTimeoutId&&Y(this._disablePointerEventsTimeoutId),this._disablePointerEventsTimeoutId=W(this._debounceScrollEndedCallback,e)}},{key:"_handleInvalidatedGridSize",value:function(){if("number"==typeof this._deferredInvalidateColumnIndex&&"number"==typeof this._deferredInvalidateRowIndex){var e=this._deferredInvalidateColumnIndex,a=this._deferredInvalidateRowIndex;this._deferredInvalidateColumnIndex=null,this._deferredInvalidateRowIndex=null,this.recomputeGridSize({columnIndex:e,rowIndex:a})}}},{key:"_invokeOnScrollMemoizer",value:function(e){var a=this,n=e.scrollLeft,t=e.scrollTop,i=e.totalColumnsWidth,r=e.totalRowsHeight;this._onScrollMemoizer({callback:function(e){var n=e.scrollLeft,t=e.scrollTop,s=a.props,l=s.height;(0,s.onScroll)({clientHeight:l,clientWidth:s.width,scrollHeight:r,scrollLeft:n,scrollTop:t,scrollWidth:i})},indices:{scrollLeft:n,scrollTop:t}})}},{key:"_isScrolling",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state;return Object.hasOwnProperty.call(e,"isScrolling")?Boolean(e.isScrolling):Boolean(a.isScrolling)}},{key:"_maybeCallOnScrollbarPresenceChange",value:function(){if(this._scrollbarPresenceChanged){var e=this.props.onScrollbarPresenceChange;this._scrollbarPresenceChanged=!1,e({horizontal:this._horizontalScrollBarSize>0,size:this.state.instanceProps.scrollbarSize,vertical:this._verticalScrollBarSize>0})}}},{key:"scrollToPosition",value:function(e){var n=e.scrollLeft,t=e.scrollTop,i=a._getScrollToPositionStateUpdate({prevState:this.state,scrollLeft:n,scrollTop:t});i&&(i.needToResetStyleCache=!1,this.setState(i))}},{key:"_getCalculatedScrollLeft",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state;return a._getCalculatedScrollLeft(e,n)}},{key:"_updateScrollLeftForScrollToColumn",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state,t=a._getScrollLeftForScrollToColumnStateUpdate(e,n);t&&(t.needToResetStyleCache=!1,this.setState(t))}},{key:"_getCalculatedScrollTop",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state;return a._getCalculatedScrollTop(e,n)}},{key:"_resetStyleCache",value:function(){var e=this._styleCache,a=this._cellCache,n=this.props.isScrollingOptOut;this._cellCache={},this._styleCache={};for(var t=this._rowStartIndex;t<=this._rowStopIndex;t++)for(var i=this._columnStartIndex;i<=this._columnStopIndex;i++){var r="".concat(t,"-").concat(i);this._styleCache[r]=e[r],n&&(this._cellCache[r]=a[r])}}},{key:"_updateScrollTopForScrollToRow",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state,t=a._getScrollTopForScrollToRowStateUpdate(e,n);t&&(t.needToResetStyleCache=!1,this.setState(t))}}],[{key:"getDerivedStateFromProps",value:function(e,n){var t={};0===e.columnCount&&0!==n.scrollLeft||0===e.rowCount&&0!==n.scrollTop?(t.scrollLeft=0,t.scrollTop=0):(e.scrollLeft!==n.scrollLeft&&e.scrollToColumn<0||e.scrollTop!==n.scrollTop&&e.scrollToRow<0)&&Object.assign(t,a._getScrollToPositionStateUpdate({prevState:n,scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}));var i,r,s=n.instanceProps;return t.needToResetStyleCache=!1,e.columnWidth===s.prevColumnWidth&&e.rowHeight===s.prevRowHeight||(t.needToResetStyleCache=!0),s.columnSizeAndPositionManager.configure({cellCount:e.columnCount,estimatedCellSize:a._getEstimatedColumnSize(e),cellSizeGetter:a._wrapSizeGetter(e.columnWidth)}),s.rowSizeAndPositionManager.configure({cellCount:e.rowCount,estimatedCellSize:a._getEstimatedRowSize(e),cellSizeGetter:a._wrapSizeGetter(e.rowHeight)}),0!==s.prevColumnCount&&0!==s.prevRowCount||(s.prevColumnCount=0,s.prevRowCount=0),e.autoHeight&&!1===e.isScrolling&&!0===s.prevIsScrolling&&Object.assign(t,{isScrolling:!1}),I({cellCount:s.prevColumnCount,cellSize:"number"==typeof s.prevColumnWidth?s.prevColumnWidth:null,computeMetadataCallback:function(){return s.columnSizeAndPositionManager.resetCell(0)},computeMetadataCallbackProps:e,nextCellsCount:e.columnCount,nextCellSize:"number"==typeof e.columnWidth?e.columnWidth:null,nextScrollToIndex:e.scrollToColumn,scrollToIndex:s.prevScrollToColumn,updateScrollOffsetForScrollToIndex:function(){i=a._getScrollLeftForScrollToColumnStateUpdate(e,n)}}),I({cellCount:s.prevRowCount,cellSize:"number"==typeof s.prevRowHeight?s.prevRowHeight:null,computeMetadataCallback:function(){return s.rowSizeAndPositionManager.resetCell(0)},computeMetadataCallbackProps:e,nextCellsCount:e.rowCount,nextCellSize:"number"==typeof e.rowHeight?e.rowHeight:null,nextScrollToIndex:e.scrollToRow,scrollToIndex:s.prevScrollToRow,updateScrollOffsetForScrollToIndex:function(){r=a._getScrollTopForScrollToRowStateUpdate(e,n)}}),s.prevColumnCount=e.columnCount,s.prevColumnWidth=e.columnWidth,s.prevIsScrolling=!0===e.isScrolling,s.prevRowCount=e.rowCount,s.prevRowHeight=e.rowHeight,s.prevScrollToColumn=e.scrollToColumn,s.prevScrollToRow=e.scrollToRow,s.scrollbarSize=e.getScrollbarSize(),void 0===s.scrollbarSize?(s.scrollbarSizeMeasured=!1,s.scrollbarSize=0):s.scrollbarSizeMeasured=!0,t.instanceProps=s,z({},t,{},i,{},r)}},{key:"_getEstimatedColumnSize",value:function(e){return"number"==typeof e.columnWidth?e.columnWidth:e.estimatedColumnSize}},{key:"_getEstimatedRowSize",value:function(e){return"number"==typeof e.rowHeight?e.rowHeight:e.estimatedRowSize}},{key:"_getScrollToPositionStateUpdate",value:function(e){var a=e.prevState,n=e.scrollLeft,t=e.scrollTop,i={scrollPositionChangeReason:j};return"number"==typeof n&&n>=0&&(i.scrollDirectionHorizontal=n>a.scrollLeft?1:-1,i.scrollLeft=n),"number"==typeof t&&t>=0&&(i.scrollDirectionVertical=t>a.scrollTop?1:-1,i.scrollTop=t),"number"==typeof n&&n>=0&&n!==a.scrollLeft||"number"==typeof t&&t>=0&&t!==a.scrollTop?i:{}}},{key:"_wrapSizeGetter",value:function(e){return"function"==typeof e?e:function(){return e}}},{key:"_getCalculatedScrollLeft",value:function(e,a){var n=e.columnCount,t=e.height,i=e.scrollToAlignment,r=e.scrollToColumn,s=e.width,l=a.scrollLeft,o=a.instanceProps;if(n>0){var u=n-1,m=r<0?u:Math.min(u,r),c=o.rowSizeAndPositionManager.getTotalSize(),d=o.scrollbarSizeMeasured&&c>t?o.scrollbarSize:0;return o.columnSizeAndPositionManager.getUpdatedOffsetForIndex({align:i,containerSize:s-d,currentOffset:l,targetIndex:m})}return 0}},{key:"_getScrollLeftForScrollToColumnStateUpdate",value:function(e,n){var t=n.scrollLeft,i=a._getCalculatedScrollLeft(e,n);return"number"==typeof i&&i>=0&&t!==i?a._getScrollToPositionStateUpdate({prevState:n,scrollLeft:i,scrollTop:-1}):{}}},{key:"_getCalculatedScrollTop",value:function(e,a){var n=e.height,t=e.rowCount,i=e.scrollToAlignment,r=e.scrollToRow,s=e.width,l=a.scrollTop,o=a.instanceProps;if(t>0){var u=t-1,m=r<0?u:Math.min(u,r),c=o.columnSizeAndPositionManager.getTotalSize(),d=o.scrollbarSizeMeasured&&c>s?o.scrollbarSize:0;return o.rowSizeAndPositionManager.getUpdatedOffsetForIndex({align:i,containerSize:n-d,currentOffset:l,targetIndex:m})}return 0}},{key:"_getScrollTopForScrollToRowStateUpdate",value:function(e,n){var t=n.scrollTop,i=a._getCalculatedScrollTop(e,n);return"number"==typeof i&&i>=0&&t!==i?a._getScrollToPositionStateUpdate({prevState:n,scrollLeft:-1,scrollTop:i}):{}}}]),a}(A.PureComponent),T()(U,"propTypes",null),B);T()(q,"defaultProps",{"aria-label":"grid","aria-readonly":!0,autoContainerWidth:!1,autoHeight:!1,autoWidth:!1,cellRangeRenderer:function(e){for(var a=e.cellCache,n=e.cellRenderer,t=e.columnSizeAndPositionManager,i=e.columnStartIndex,r=e.columnStopIndex,s=e.deferredMeasurementCache,l=e.horizontalOffsetAdjustment,o=e.isScrolling,u=e.isScrollingOptOut,m=e.parent,c=e.rowSizeAndPositionManager,d=e.rowStartIndex,_=e.rowStopIndex,v=e.styleCache,p=e.verticalOffsetAdjustment,T=e.visibleColumnIndices,A=e.visibleRowIndices,f=[],h=t.areOffsetsAdjusted()||c.areOffsetsAdjusted(),g=!o&&!h,b=d;b<=_;b++)for(var y=c.getSizeAndPositionOfCell(b),E=i;E<=r;E++){var C=t.getSizeAndPositionOfCell(E),O=E>=T.start&&E<=T.stop&&b>=A.start&&b<=A.stop,I="".concat(b,"-").concat(E),S=void 0;g&&v[I]?S=v[I]:s&&!s.has(b,E)?S={height:"auto",left:0,position:"absolute",top:0,width:"auto"}:(S={height:y.size,left:C.offset+l,position:"absolute",top:y.offset+p,width:C.size},v[I]=S);var R={columnIndex:E,isScrolling:o,isVisible:O,key:I,parent:m,rowIndex:b,style:S},D=void 0;!u&&!o||l||p?D=n(R):(a[I]||(a[I]=n(R)),D=a[I]),null!=D&&!1!==D&&f.push(D)}return f},containerRole:"rowgroup",containerStyle:{},estimatedColumnSize:100,estimatedRowSize:30,getScrollbarSize:w,noContentRenderer:function(){return null},onScroll:function(){},onScrollbarPresenceChange:function(){},onSectionRendered:function(){},overscanColumnCount:0,overscanIndicesGetter:function(e){var a=e.cellCount,n=e.overscanCellsCount,t=e.scrollDirection,i=e.startIndex,r=e.stopIndex;return 1===t?{overscanStartIndex:Math.max(0,i),overscanStopIndex:Math.min(a-1,r+n)}:{overscanStartIndex:Math.max(0,i-n),overscanStopIndex:Math.min(a-1,r)}},overscanRowCount:10,role:"grid",scrollingResetTimeInterval:150,scrollToAlignment:"auto",scrollToColumn:-1,scrollToRow:-1,style:{},tabIndex:0,isScrollingOptOut:!1}),b(q);const X=q;function Q(e){var a=e.cellCount,n=e.overscanCellsCount,t=e.scrollDirection,i=e.startIndex,r=e.stopIndex;return n=Math.max(1,n),1===t?{overscanStartIndex:Math.max(0,i-1),overscanStopIndex:Math.min(a-1,r+n)}:{overscanStartIndex:Math.max(0,i-n),overscanStopIndex:Math.min(a-1,r+1)}}var J,Z;function $(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}var ee,ae,ne=(Z=J=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"state",{scrollToColumn:0,scrollToRow:0,instanceProps:{prevScrollToColumn:0,prevScrollToRow:0}}),T()(d()(n),"_columnStartIndex",0),T()(d()(n),"_columnStopIndex",0),T()(d()(n),"_rowStartIndex",0),T()(d()(n),"_rowStopIndex",0),T()(d()(n),"_onKeyDown",(function(e){var a=n.props,t=a.columnCount,i=a.disabled,r=a.mode,s=a.rowCount;if(!i){var l=n._getScrollState(),o=l.scrollToColumn,u=l.scrollToRow,m=n._getScrollState(),c=m.scrollToColumn,d=m.scrollToRow;switch(e.key){case"ArrowDown":d="cells"===r?Math.min(d+1,s-1):Math.min(n._rowStopIndex+1,s-1);break;case"ArrowLeft":c="cells"===r?Math.max(c-1,0):Math.max(n._columnStartIndex-1,0);break;case"ArrowRight":c="cells"===r?Math.min(c+1,t-1):Math.min(n._columnStopIndex+1,t-1);break;case"ArrowUp":d="cells"===r?Math.max(d-1,0):Math.max(n._rowStartIndex-1,0)}c===o&&d===u||(e.preventDefault(),n._updateScrollState({scrollToColumn:c,scrollToRow:d}))}})),T()(d()(n),"_onSectionRendered",(function(e){var a=e.columnStartIndex,t=e.columnStopIndex,i=e.rowStartIndex,r=e.rowStopIndex;n._columnStartIndex=a,n._columnStopIndex=t,n._rowStartIndex=i,n._rowStopIndex=r})),n}return v()(a,e),s()(a,[{key:"setScrollIndexes",value:function(e){var a=e.scrollToColumn,n=e.scrollToRow;this.setState({scrollToRow:n,scrollToColumn:a})}},{key:"render",value:function(){var e=this.props,a=e.className,n=e.children,t=this._getScrollState(),i=t.scrollToColumn,r=t.scrollToRow;return A.createElement("div",{className:a,onKeyDown:this._onKeyDown},n({onSectionRendered:this._onSectionRendered,scrollToColumn:i,scrollToRow:r}))}},{key:"_getScrollState",value:function(){return this.props.isControlled?this.props:this.state}},{key:"_updateScrollState",value:function(e){var a=e.scrollToColumn,n=e.scrollToRow,t=this.props,i=t.isControlled,r=t.onScrollToChange;"function"==typeof r&&r({scrollToColumn:a,scrollToRow:n}),i||this.setState({scrollToColumn:a,scrollToRow:n})}}],[{key:"getDerivedStateFromProps",value:function(e,a){return e.isControlled?{}:e.scrollToColumn!==a.instanceProps.prevScrollToColumn||e.scrollToRow!==a.instanceProps.prevScrollToRow?function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?$(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({},a,{scrollToColumn:e.scrollToColumn,scrollToRow:e.scrollToRow,instanceProps:{prevScrollToColumn:e.scrollToColumn,prevScrollToRow:e.scrollToRow}}):{}}}]),a}(A.PureComponent),T()(J,"propTypes",null),Z);function te(e,a){var t,i=void 0!==(t=void 0!==a?a:"undefined"!=typeof window?window:"undefined"!=typeof self?self:n.g).document&&t.document.attachEvent;if(!i){var r=function(){var e=t.requestAnimationFrame||t.mozRequestAnimationFrame||t.webkitRequestAnimationFrame||function(e){return t.setTimeout(e,20)};return function(a){return e(a)}}(),s=function(){var e=t.cancelAnimationFrame||t.mozCancelAnimationFrame||t.webkitCancelAnimationFrame||t.clearTimeout;return function(a){return e(a)}}(),l=function(e){var a=e.__resizeTriggers__,n=a.firstElementChild,t=a.lastElementChild,i=n.firstElementChild;t.scrollLeft=t.scrollWidth,t.scrollTop=t.scrollHeight,i.style.width=n.offsetWidth+1+"px",i.style.height=n.offsetHeight+1+"px",n.scrollLeft=n.scrollWidth,n.scrollTop=n.scrollHeight},o=function(e){if(!(e.target.className&&"function"==typeof e.target.className.indexOf&&e.target.className.indexOf("contract-trigger")<0&&e.target.className.indexOf("expand-trigger")<0)){var a=this;l(this),this.__resizeRAF__&&s(this.__resizeRAF__),this.__resizeRAF__=r((function(){(function(e){return e.offsetWidth!=e.__resizeLast__.width||e.offsetHeight!=e.__resizeLast__.height})(a)&&(a.__resizeLast__.width=a.offsetWidth,a.__resizeLast__.height=a.offsetHeight,a.__resizeListeners__.forEach((function(n){n.call(a,e)})))}))}},u=!1,m="",c="animationstart",d="Webkit Moz O ms".split(" "),_="webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),v=t.document.createElement("fakeelement");if(void 0!==v.style.animationName&&(u=!0),!1===u)for(var p=0;p<d.length;p++)if(void 0!==v.style[d[p]+"AnimationName"]){m="-"+d[p].toLowerCase()+"-",c=_[p],u=!0;break}var T="resizeanim",A="@"+m+"keyframes "+T+" { from { opacity: 0; } to { opacity: 0; } } ",f=m+"animation: 1ms "+T+"; "}return{addResizeListener:function(a,n){if(i)a.attachEvent("onresize",n);else{if(!a.__resizeTriggers__){var r=a.ownerDocument,s=t.getComputedStyle(a);s&&"static"==s.position&&(a.style.position="relative"),function(a){if(!a.getElementById("detectElementResize")){var n=(A||"")+".resize-triggers { "+(f||"")+'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',t=a.head||a.getElementsByTagName("head")[0],i=a.createElement("style");i.id="detectElementResize",i.type="text/css",null!=e&&i.setAttribute("nonce",e),i.styleSheet?i.styleSheet.cssText=n:i.appendChild(a.createTextNode(n)),t.appendChild(i)}}(r),a.__resizeLast__={},a.__resizeListeners__=[],(a.__resizeTriggers__=r.createElement("div")).className="resize-triggers";var u='<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>';if(window.trustedTypes){var m=trustedTypes.createPolicy("react-virtualized-auto-sizer",{createHTML:function(){return u}});a.__resizeTriggers__.innerHTML=m.createHTML("")}else a.__resizeTriggers__.innerHTML=u;a.appendChild(a.__resizeTriggers__),l(a),a.addEventListener("scroll",o,!0),c&&(a.__resizeTriggers__.__animationListener__=function(e){e.animationName==T&&l(a)},a.__resizeTriggers__.addEventListener(c,a.__resizeTriggers__.__animationListener__))}a.__resizeListeners__.push(n)}},removeResizeListener:function(e,a){if(i)e.detachEvent("onresize",a);else if(e.__resizeListeners__.splice(e.__resizeListeners__.indexOf(a),1),!e.__resizeListeners__.length){e.removeEventListener("scroll",o,!0),e.__resizeTriggers__.__animationListener__&&(e.__resizeTriggers__.removeEventListener(c,e.__resizeTriggers__.__animationListener__),e.__resizeTriggers__.__animationListener__=null);try{e.__resizeTriggers__=!e.removeChild(e.__resizeTriggers__)}catch(e){}}}}}function ie(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function re(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?ie(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ie(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}T()(ne,"defaultProps",{disabled:!1,isControlled:!1,mode:"edges",scrollToColumn:0,scrollToRow:0}),b(ne);var se=(ae=ee=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"state",{height:n.props.defaultHeight||0,width:n.props.defaultWidth||0}),T()(d()(n),"_parentNode",void 0),T()(d()(n),"_autoSizer",void 0),T()(d()(n),"_window",void 0),T()(d()(n),"_detectElementResize",void 0),T()(d()(n),"_onResize",(function(){var e=n.props,a=e.disableHeight,t=e.disableWidth,i=e.onResize;if(n._parentNode){var r=n._parentNode.offsetHeight||0,s=n._parentNode.offsetWidth||0,l=(n._window||window).getComputedStyle(n._parentNode)||{},o=parseInt(l.paddingLeft,10)||0,u=parseInt(l.paddingRight,10)||0,m=parseInt(l.paddingTop,10)||0,c=parseInt(l.paddingBottom,10)||0,d=r-m-c,_=s-o-u;(!a&&n.state.height!==d||!t&&n.state.width!==_)&&(n.setState({height:r-m-c,width:s-o-u}),i({height:r,width:s}))}})),T()(d()(n),"_setRef",(function(e){n._autoSizer=e})),n}return v()(a,e),s()(a,[{key:"componentDidMount",value:function(){var e=this.props.nonce;this._autoSizer&&this._autoSizer.parentNode&&this._autoSizer.parentNode.ownerDocument&&this._autoSizer.parentNode.ownerDocument.defaultView&&this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement&&(this._parentNode=this._autoSizer.parentNode,this._window=this._autoSizer.parentNode.ownerDocument.defaultView,this._detectElementResize=te(e,this._window),this._detectElementResize.addResizeListener(this._parentNode,this._onResize),this._onResize())}},{key:"componentWillUnmount",value:function(){this._detectElementResize&&this._parentNode&&this._detectElementResize.removeResizeListener(this._parentNode,this._onResize)}},{key:"render",value:function(){var e=this.props,a=e.children,n=e.className,t=e.disableHeight,i=e.disableWidth,r=e.style,s=this.state,l=s.height,o=s.width,u={overflow:"visible"},m={};return t||(u.height=0,m.height=l),i||(u.width=0,m.width=o),A.createElement("div",{className:n,ref:this._setRef,style:re({},u,{},r)},a(m))}}]),a}(A.Component),T()(ee,"propTypes",null),ae);T()(se,"defaultProps",{onResize:function(){},disableHeight:!1,disableWidth:!1,style:{}});var le,oe,ue=n("i8i4"),me=(oe=le=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"_child",void 0),T()(d()(n),"_measure",(function(){var e=n.props,a=e.cache,t=e.columnIndex,i=void 0===t?0:t,r=e.parent,s=e.rowIndex,l=void 0===s?n.props.index||0:s,o=n._getCellMeasurements(),u=o.height,m=o.width;u===a.getHeight(l,i)&&m===a.getWidth(l,i)||(a.set(l,i,m,u),r&&"function"==typeof r.recomputeGridSize&&r.recomputeGridSize({columnIndex:i,rowIndex:l}))})),T()(d()(n),"_registerChild",(function(e){!e||e instanceof Element||console.warn("CellMeasurer registerChild expects to be passed Element or null"),n._child=e,e&&n._maybeMeasureCell()})),n}return v()(a,e),s()(a,[{key:"componentDidMount",value:function(){this._maybeMeasureCell()}},{key:"componentDidUpdate",value:function(){this._maybeMeasureCell()}},{key:"render",value:function(){var e=this.props.children;return"function"==typeof e?e({measure:this._measure,registerChild:this._registerChild}):e}},{key:"_getCellMeasurements",value:function(){var e=this.props.cache,a=this._child||(0,ue.findDOMNode)(this);if(a&&a.ownerDocument&&a.ownerDocument.defaultView&&a instanceof a.ownerDocument.defaultView.HTMLElement){var n=a.style.width,t=a.style.height;e.hasFixedWidth()||(a.style.width="auto"),e.hasFixedHeight()||(a.style.height="auto");var i=Math.ceil(a.offsetHeight),r=Math.ceil(a.offsetWidth);return n&&(a.style.width=n),t&&(a.style.height=t),{height:i,width:r}}return{height:0,width:0}}},{key:"_maybeMeasureCell",value:function(){var e=this.props,a=e.cache,n=e.columnIndex,t=void 0===n?0:n,i=e.parent,r=e.rowIndex,s=void 0===r?this.props.index||0:r;if(!a.has(s,t)){var l=this._getCellMeasurements(),o=l.height,u=l.width;a.set(s,t,u,o),i&&"function"==typeof i.invalidateCellSizeAfterRender&&i.invalidateCellSizeAfterRender({columnIndex:t,rowIndex:s})}}}]),a}(A.PureComponent),T()(le,"propTypes",null),oe);T()(me,"__internalCellMeasurerFlag",!1);var ce=function(){function e(){var a=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i()(this,e),T()(this,"_cellHeightCache",{}),T()(this,"_cellWidthCache",{}),T()(this,"_columnWidthCache",{}),T()(this,"_rowHeightCache",{}),T()(this,"_defaultHeight",void 0),T()(this,"_defaultWidth",void 0),T()(this,"_minHeight",void 0),T()(this,"_minWidth",void 0),T()(this,"_keyMapper",void 0),T()(this,"_hasFixedHeight",void 0),T()(this,"_hasFixedWidth",void 0),T()(this,"_columnCount",0),T()(this,"_rowCount",0),T()(this,"columnWidth",(function(e){var n=e.index,t=a._keyMapper(0,n);return void 0!==a._columnWidthCache[t]?a._columnWidthCache[t]:a._defaultWidth})),T()(this,"rowHeight",(function(e){var n=e.index,t=a._keyMapper(n,0);return void 0!==a._rowHeightCache[t]?a._rowHeightCache[t]:a._defaultHeight}));var t=n.defaultHeight,r=n.defaultWidth,s=n.fixedHeight,l=n.fixedWidth,o=n.keyMapper,u=n.minHeight,m=n.minWidth;this._hasFixedHeight=!0===s,this._hasFixedWidth=!0===l,this._minHeight=u||0,this._minWidth=m||0,this._keyMapper=o||de,this._defaultHeight=Math.max(this._minHeight,"number"==typeof t?t:30),this._defaultWidth=Math.max(this._minWidth,"number"==typeof r?r:100)}return s()(e,[{key:"clear",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this._keyMapper(e,a);delete this._cellHeightCache[n],delete this._cellWidthCache[n],this._updateCachedColumnAndRowSizes(e,a)}},{key:"clearAll",value:function(){this._cellHeightCache={},this._cellWidthCache={},this._columnWidthCache={},this._rowHeightCache={},this._rowCount=0,this._columnCount=0}},{key:"hasFixedHeight",value:function(){return this._hasFixedHeight}},{key:"hasFixedWidth",value:function(){return this._hasFixedWidth}},{key:"getHeight",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(this._hasFixedHeight)return this._defaultHeight;var n=this._keyMapper(e,a);return void 0!==this._cellHeightCache[n]?Math.max(this._minHeight,this._cellHeightCache[n]):this._defaultHeight}},{key:"getWidth",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(this._hasFixedWidth)return this._defaultWidth;var n=this._keyMapper(e,a);return void 0!==this._cellWidthCache[n]?Math.max(this._minWidth,this._cellWidthCache[n]):this._defaultWidth}},{key:"has",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this._keyMapper(e,a);return void 0!==this._cellHeightCache[n]}},{key:"set",value:function(e,a,n,t){var i=this._keyMapper(e,a);a>=this._columnCount&&(this._columnCount=a+1),e>=this._rowCount&&(this._rowCount=e+1),this._cellHeightCache[i]=t,this._cellWidthCache[i]=n,this._updateCachedColumnAndRowSizes(e,a)}},{key:"_updateCachedColumnAndRowSizes",value:function(e,a){if(!this._hasFixedWidth){for(var n=0,t=0;t<this._rowCount;t++)n=Math.max(n,this.getWidth(t,a));var i=this._keyMapper(0,a);this._columnWidthCache[i]=n}if(!this._hasFixedHeight){for(var r=0,s=0;s<this._columnCount;s++)r=Math.max(r,this.getHeight(e,s));var l=this._keyMapper(e,0);this._rowHeightCache[l]=r}}},{key:"defaultHeight",get:function(){return this._defaultHeight}},{key:"defaultWidth",get:function(){return this._defaultWidth}}]),e}();function de(e,a){return"".concat(e,"-").concat(a)}function _e(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function ve(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?_e(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):_e(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var pe="observed",Te="requested",Ae=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"state",{isScrolling:!1,scrollLeft:0,scrollTop:0}),T()(d()(n),"_calculateSizeAndPositionDataOnNextUpdate",!1),T()(d()(n),"_onSectionRenderedMemoizer",P()),T()(d()(n),"_onScrollMemoizer",P(!1)),T()(d()(n),"_invokeOnSectionRenderedHelper",(function(){var e=n.props,a=e.cellLayoutManager,t=e.onSectionRendered;n._onSectionRenderedMemoizer({callback:t,indices:{indices:a.getLastRenderedIndices()}})})),T()(d()(n),"_setScrollingContainerRef",(function(e){n._scrollingContainer=e})),T()(d()(n),"_updateScrollPositionForScrollToCell",(function(){var e=n.props,a=e.cellLayoutManager,t=e.height,i=e.scrollToAlignment,r=e.scrollToCell,s=e.width,l=n.state,o=l.scrollLeft,u=l.scrollTop;if(r>=0){var m=a.getScrollPositionForCell({align:i,cellIndex:r,height:t,scrollLeft:o,scrollTop:u,width:s});m.scrollLeft===o&&m.scrollTop===u||n._setScrollPosition(m)}})),T()(d()(n),"_onScroll",(function(e){if(e.target===n._scrollingContainer){n._enablePointerEventsAfterDelay();var a=n.props,t=a.cellLayoutManager,i=a.height,r=a.isScrollingChange,s=a.width,l=n._scrollbarSize,o=t.getTotalSize(),u=o.height,m=o.width,c=Math.max(0,Math.min(m-s+l,e.target.scrollLeft)),d=Math.max(0,Math.min(u-i+l,e.target.scrollTop));if(n.state.scrollLeft!==c||n.state.scrollTop!==d){var _=e.cancelable?pe:Te;n.state.isScrolling||r(!0),n.setState({isScrolling:!0,scrollLeft:c,scrollPositionChangeReason:_,scrollTop:d})}n._invokeOnScrollMemoizer({scrollLeft:c,scrollTop:d,totalWidth:m,totalHeight:u})}})),n._scrollbarSize=w(),void 0===n._scrollbarSize?(n._scrollbarSizeMeasured=!1,n._scrollbarSize=0):n._scrollbarSizeMeasured=!0,n}return v()(a,e),s()(a,[{key:"recomputeCellSizesAndPositions",value:function(){this._calculateSizeAndPositionDataOnNextUpdate=!0,this.forceUpdate()}},{key:"componentDidMount",value:function(){var e=this.props,a=e.cellLayoutManager,n=e.scrollLeft,t=e.scrollToCell,i=e.scrollTop;this._scrollbarSizeMeasured||(this._scrollbarSize=w(),this._scrollbarSizeMeasured=!0,this.setState({})),t>=0?this._updateScrollPositionForScrollToCell():(n>=0||i>=0)&&this._setScrollPosition({scrollLeft:n,scrollTop:i}),this._invokeOnSectionRenderedHelper();var r=a.getTotalSize(),s=r.height,l=r.width;this._invokeOnScrollMemoizer({scrollLeft:n||0,scrollTop:i||0,totalHeight:s,totalWidth:l})}},{key:"componentDidUpdate",value:function(e,a){var n=this.props,t=n.height,i=n.scrollToAlignment,r=n.scrollToCell,s=n.width,l=this.state,o=l.scrollLeft,u=l.scrollPositionChangeReason,m=l.scrollTop;u===Te&&(o>=0&&o!==a.scrollLeft&&o!==this._scrollingContainer.scrollLeft&&(this._scrollingContainer.scrollLeft=o),m>=0&&m!==a.scrollTop&&m!==this._scrollingContainer.scrollTop&&(this._scrollingContainer.scrollTop=m)),t===e.height&&i===e.scrollToAlignment&&r===e.scrollToCell&&s===e.width||this._updateScrollPositionForScrollToCell(),this._invokeOnSectionRenderedHelper()}},{key:"componentWillUnmount",value:function(){this._disablePointerEventsTimeoutId&&clearTimeout(this._disablePointerEventsTimeoutId)}},{key:"render",value:function(){var e=this.props,a=e.autoHeight,n=e.cellCount,t=e.cellLayoutManager,i=e.className,r=e.height,s=e.horizontalOverscanSize,l=e.id,o=e.noContentRenderer,u=e.style,m=e.verticalOverscanSize,c=e.width,d=this.state,_=d.isScrolling,v=d.scrollLeft,p=d.scrollTop;(this._lastRenderedCellCount!==n||this._lastRenderedCellLayoutManager!==t||this._calculateSizeAndPositionDataOnNextUpdate)&&(this._lastRenderedCellCount=n,this._lastRenderedCellLayoutManager=t,this._calculateSizeAndPositionDataOnNextUpdate=!1,t.calculateSizeAndPositionData());var T=t.getTotalSize(),f=T.height,h=T.width,g=Math.max(0,v-s),b=Math.max(0,p-m),y=Math.min(h,v+c+s),E=Math.min(f,p+r+m),C=r>0&&c>0?t.cellRenderers({height:E-b,isScrolling:_,width:y-g,x:g,y:b}):[],I={boxSizing:"border-box",direction:"ltr",height:a?"auto":r,position:"relative",WebkitOverflowScrolling:"touch",width:c,willChange:"transform"},S=f>r?this._scrollbarSize:0,R=h>c?this._scrollbarSize:0;return I.overflowX=h+S<=c?"hidden":"auto",I.overflowY=f+R<=r?"hidden":"auto",A.createElement("div",{ref:this._setScrollingContainerRef,"aria-label":this.props["aria-label"],className:O("ReactVirtualized__Collection",i),id:l,onScroll:this._onScroll,role:"grid",style:ve({},I,{},u),tabIndex:0},n>0&&A.createElement("div",{className:"ReactVirtualized__Collection__innerScrollContainer",style:{height:f,maxHeight:f,maxWidth:h,overflow:"hidden",pointerEvents:_?"none":"",width:h}},C),0===n&&o())}},{key:"_enablePointerEventsAfterDelay",value:function(){var e=this;this._disablePointerEventsTimeoutId&&clearTimeout(this._disablePointerEventsTimeoutId),this._disablePointerEventsTimeoutId=setTimeout((function(){(0,e.props.isScrollingChange)(!1),e._disablePointerEventsTimeoutId=null,e.setState({isScrolling:!1})}),150)}},{key:"_invokeOnScrollMemoizer",value:function(e){var a=this,n=e.scrollLeft,t=e.scrollTop,i=e.totalHeight,r=e.totalWidth;this._onScrollMemoizer({callback:function(e){var n=e.scrollLeft,t=e.scrollTop,s=a.props,l=s.height;(0,s.onScroll)({clientHeight:l,clientWidth:s.width,scrollHeight:i,scrollLeft:n,scrollTop:t,scrollWidth:r})},indices:{scrollLeft:n,scrollTop:t}})}},{key:"_setScrollPosition",value:function(e){var a=e.scrollLeft,n=e.scrollTop,t={scrollPositionChangeReason:Te};a>=0&&(t.scrollLeft=a),n>=0&&(t.scrollTop=n),(a>=0&&a!==this.state.scrollLeft||n>=0&&n!==this.state.scrollTop)&&this.setState(t)}}],[{key:"getDerivedStateFromProps",value:function(e,a){return 0!==e.cellCount||0===a.scrollLeft&&0===a.scrollTop?e.scrollLeft!==a.scrollLeft||e.scrollTop!==a.scrollTop?{scrollLeft:null!=e.scrollLeft?e.scrollLeft:a.scrollLeft,scrollTop:null!=e.scrollTop?e.scrollTop:a.scrollTop,scrollPositionChangeReason:Te}:null:{scrollLeft:0,scrollTop:0,scrollPositionChangeReason:Te}}}]),a}(A.PureComponent);T()(Ae,"defaultProps",{"aria-label":"grid",horizontalOverscanSize:0,noContentRenderer:function(){return null},onScroll:function(){return null},onSectionRendered:function(){return null},scrollToAlignment:"auto",scrollToCell:-1,style:{},verticalOverscanSize:0}),Ae.propTypes={},b(Ae);const fe=Ae;var he=function(){function e(a){var n=a.height,t=a.width,r=a.x,s=a.y;i()(this,e),this.height=n,this.width=t,this.x=r,this.y=s,this._indexMap={},this._indices=[]}return s()(e,[{key:"addCellIndex",value:function(e){var a=e.index;this._indexMap[a]||(this._indexMap[a]=!0,this._indices.push(a))}},{key:"getCellIndices",value:function(){return this._indices}},{key:"toString",value:function(){return"".concat(this.x,",").concat(this.y," ").concat(this.width,"x").concat(this.height)}}]),e}(),ge=function(){function e(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;i()(this,e),this._sectionSize=a,this._cellMetadata=[],this._sections={}}return s()(e,[{key:"getCellIndices",value:function(e){var a=e.height,n=e.width,t=e.x,i=e.y,r={};return this.getSections({height:a,width:n,x:t,y:i}).forEach((function(e){return e.getCellIndices().forEach((function(e){r[e]=e}))})),Object.keys(r).map((function(e){return r[e]}))}},{key:"getCellMetadata",value:function(e){var a=e.index;return this._cellMetadata[a]}},{key:"getSections",value:function(e){for(var a=e.height,n=e.width,t=e.x,i=e.y,r=Math.floor(t/this._sectionSize),s=Math.floor((t+n-1)/this._sectionSize),l=Math.floor(i/this._sectionSize),o=Math.floor((i+a-1)/this._sectionSize),u=[],m=r;m<=s;m++)for(var c=l;c<=o;c++){var d="".concat(m,".").concat(c);this._sections[d]||(this._sections[d]=new he({height:this._sectionSize,width:this._sectionSize,x:m*this._sectionSize,y:c*this._sectionSize})),u.push(this._sections[d])}return u}},{key:"getTotalSectionCount",value:function(){return Object.keys(this._sections).length}},{key:"toString",value:function(){var e=this;return Object.keys(this._sections).map((function(a){return e._sections[a].toString()}))}},{key:"registerCell",value:function(e){var a=e.cellMetadatum,n=e.index;this._cellMetadata[n]=a,this.getSections(a).forEach((function(e){return e.addCellIndex({index:n})}))}}]),e}();function be(e){var a=e.align,n=void 0===a?"auto":a,t=e.cellOffset,i=e.cellSize,r=e.containerSize,s=e.currentOffset,l=t,o=l-r+i;switch(n){case"start":return l;case"end":return o;case"center":return l-(r-i)/2;default:return Math.max(o,Math.min(l,s))}}var ye=function(e){function a(e,n){var t;return i()(this,a),(t=o()(this,m()(a).call(this,e,n)))._cellMetadata=[],t._lastRenderedCellIndices=[],t._cellCache=[],t._isScrollingChange=t._isScrollingChange.bind(d()(t)),t._setCollectionViewRef=t._setCollectionViewRef.bind(d()(t)),t}return v()(a,e),s()(a,[{key:"forceUpdate",value:function(){void 0!==this._collectionView&&this._collectionView.forceUpdate()}},{key:"recomputeCellSizesAndPositions",value:function(){this._cellCache=[],this._collectionView.recomputeCellSizesAndPositions()}},{key:"render",value:function(){var e=E()({},this.props);return A.createElement(fe,E()({cellLayoutManager:this,isScrollingChange:this._isScrollingChange,ref:this._setCollectionViewRef},e))}},{key:"calculateSizeAndPositionData",value:function(){var e=this.props,a=function(e){for(var a=e.cellCount,n=e.cellSizeAndPositionGetter,t=[],i=new ge(e.sectionSize),r=0,s=0,l=0;l<a;l++){var o=n({index:l});if(null==o.height||isNaN(o.height)||null==o.width||isNaN(o.width)||null==o.x||isNaN(o.x)||null==o.y||isNaN(o.y))throw Error("Invalid metadata returned for cell ".concat(l,":\n        x:").concat(o.x,", y:").concat(o.y,", width:").concat(o.width,", height:").concat(o.height));r=Math.max(r,o.y+o.height),s=Math.max(s,o.x+o.width),t[l]=o,i.registerCell({cellMetadatum:o,index:l})}return{cellMetadata:t,height:r,sectionManager:i,width:s}}({cellCount:e.cellCount,cellSizeAndPositionGetter:e.cellSizeAndPositionGetter,sectionSize:e.sectionSize});this._cellMetadata=a.cellMetadata,this._sectionManager=a.sectionManager,this._height=a.height,this._width=a.width}},{key:"getLastRenderedIndices",value:function(){return this._lastRenderedCellIndices}},{key:"getScrollPositionForCell",value:function(e){var a=e.align,n=e.cellIndex,t=e.height,i=e.scrollLeft,r=e.scrollTop,s=e.width,l=this.props.cellCount;if(n>=0&&n<l){var o=this._cellMetadata[n];i=be({align:a,cellOffset:o.x,cellSize:o.width,containerSize:s,currentOffset:i,targetIndex:n}),r=be({align:a,cellOffset:o.y,cellSize:o.height,containerSize:t,currentOffset:r,targetIndex:n})}return{scrollLeft:i,scrollTop:r}}},{key:"getTotalSize",value:function(){return{height:this._height,width:this._width}}},{key:"cellRenderers",value:function(e){var a=this,n=e.height,t=e.isScrolling,i=e.width,r=e.x,s=e.y,l=this.props,o=l.cellGroupRenderer,u=l.cellRenderer;return this._lastRenderedCellIndices=this._sectionManager.getCellIndices({height:n,width:i,x:r,y:s}),o({cellCache:this._cellCache,cellRenderer:u,cellSizeAndPositionGetter:function(e){var n=e.index;return a._sectionManager.getCellMetadata({index:n})},indices:this._lastRenderedCellIndices,isScrolling:t})}},{key:"_isScrollingChange",value:function(e){e||(this._cellCache=[])}},{key:"_setCollectionViewRef",value:function(e){this._collectionView=e}}]),a}(A.PureComponent);T()(ye,"defaultProps",{"aria-label":"grid",cellGroupRenderer:function(e){var a=e.cellCache,n=e.cellRenderer,t=e.cellSizeAndPositionGetter,i=e.indices,r=e.isScrolling;return i.map((function(e){var i=t({index:e}),s={index:e,isScrolling:r,key:e,style:{height:i.height,left:i.x,position:"absolute",top:i.y,width:i.width}};return r?(e in a||(a[e]=n(s)),a[e]):n(s)})).filter((function(e){return!!e}))}}),ye.propTypes={},(function(e){function a(e,n){var t;return i()(this,a),(t=o()(this,m()(a).call(this,e,n)))._registerChild=t._registerChild.bind(d()(t)),t}return v()(a,e),s()(a,[{key:"componentDidUpdate",value:function(e){var a=this.props,n=a.columnMaxWidth,t=a.columnMinWidth,i=a.columnCount,r=a.width;n===e.columnMaxWidth&&t===e.columnMinWidth&&i===e.columnCount&&r===e.width||this._registeredChild&&this._registeredChild.recomputeGridSize()}},{key:"render",value:function(){var e=this.props,a=e.children,n=e.columnMaxWidth,t=e.columnMinWidth,i=e.columnCount,r=e.width,s=t||1,l=n?Math.min(n,r):r,o=r/i;return o=Math.max(s,o),o=Math.min(l,o),o=Math.floor(o),a({adjustedWidth:Math.min(r,o*i),columnWidth:o,getColumnWidth:function(){return o},registerChild:this._registerChild})}},{key:"_registerChild",value:function(e){if(e&&"function"!=typeof e.recomputeGridSize)throw Error("Unexpected child type registered; only Grid/MultiGrid children are supported.");this._registeredChild=e,this._registeredChild&&this._registeredChild.recomputeGridSize()}}]),a}(A.PureComponent)).propTypes={};var Ee=n("RIqP"),Ce=n.n(Ee),Oe=function(e){function a(e,n){var t;return i()(this,a),(t=o()(this,m()(a).call(this,e,n)))._loadMoreRowsMemoizer=P(),t._onRowsRendered=t._onRowsRendered.bind(d()(t)),t._registerChild=t._registerChild.bind(d()(t)),t}return v()(a,e),s()(a,[{key:"resetLoadMoreRowsCache",value:function(e){this._loadMoreRowsMemoizer=P(),e&&this._doStuff(this._lastRenderedStartIndex,this._lastRenderedStopIndex)}},{key:"render",value:function(){return(0,this.props.children)({onRowsRendered:this._onRowsRendered,registerChild:this._registerChild})}},{key:"_loadUnloadedRanges",value:function(e){var a=this,n=this.props.loadMoreRows;e.forEach((function(e){var t=n(e);t&&t.then((function(){var n;(n={lastRenderedStartIndex:a._lastRenderedStartIndex,lastRenderedStopIndex:a._lastRenderedStopIndex,startIndex:e.startIndex,stopIndex:e.stopIndex}).startIndex>n.lastRenderedStopIndex||n.stopIndex<n.lastRenderedStartIndex||a._registeredChild&&function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n="function"==typeof e.recomputeGridSize?e.recomputeGridSize:e.recomputeRowHeights;n?n.call(e,a):e.forceUpdate()}(a._registeredChild,a._lastRenderedStartIndex)}))}))}},{key:"_onRowsRendered",value:function(e){var a=e.startIndex,n=e.stopIndex;this._lastRenderedStartIndex=a,this._lastRenderedStopIndex=n,this._doStuff(a,n)}},{key:"_doStuff",value:function(e,a){var n,t=this,i=this.props,r=i.isRowLoaded,s=i.minimumBatchSize,l=i.rowCount,o=i.threshold,u=function(e){for(var a=e.isRowLoaded,n=e.minimumBatchSize,t=e.rowCount,i=e.stopIndex,r=[],s=null,l=null,o=e.startIndex;o<=i;o++)a({index:o})?null!==l&&(r.push({startIndex:s,stopIndex:l}),s=l=null):(l=o,null===s&&(s=o));if(null!==l){for(var u=Math.min(Math.max(l,s+n-1),t-1),m=l+1;m<=u&&!a({index:m});m++)l=m;r.push({startIndex:s,stopIndex:l})}if(r.length)for(var c=r[0];c.stopIndex-c.startIndex+1<n&&c.startIndex>0;){var d=c.startIndex-1;if(a({index:d}))break;c.startIndex=d}return r}({isRowLoaded:r,minimumBatchSize:s,rowCount:l,startIndex:Math.max(0,e-o),stopIndex:Math.min(l-1,a+o)}),m=(n=[]).concat.apply(n,Ce()(u.map((function(e){return[e.startIndex,e.stopIndex]}))));this._loadMoreRowsMemoizer({callback:function(){t._loadUnloadedRanges(u)},indices:{squashedUnloadedRanges:m}})}},{key:"_registerChild",value:function(e){this._registeredChild=e}}]),a}(A.PureComponent);T()(Oe,"defaultProps",{minimumBatchSize:10,rowCount:0,threshold:15}),Oe.propTypes={};var Ie,Se,Re=(Se=Ie=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"Grid",void 0),T()(d()(n),"_cellRenderer",(function(e){var a=e.parent,t=e.rowIndex,i=e.style,r=e.isScrolling,s=e.isVisible,l=e.key,o=n.props.rowRenderer,u=Object.getOwnPropertyDescriptor(i,"width");return u&&u.writable&&(i.width="100%"),o({index:t,style:i,isScrolling:r,isVisible:s,key:l,parent:a})})),T()(d()(n),"_setRef",(function(e){n.Grid=e})),T()(d()(n),"_onScroll",(function(e){var a=e.clientHeight,t=e.scrollHeight,i=e.scrollTop;(0,n.props.onScroll)({clientHeight:a,scrollHeight:t,scrollTop:i})})),T()(d()(n),"_onSectionRendered",(function(e){var a=e.rowOverscanStartIndex,t=e.rowOverscanStopIndex,i=e.rowStartIndex,r=e.rowStopIndex;(0,n.props.onRowsRendered)({overscanStartIndex:a,overscanStopIndex:t,startIndex:i,stopIndex:r})})),n}return v()(a,e),s()(a,[{key:"forceUpdateGrid",value:function(){this.Grid&&this.Grid.forceUpdate()}},{key:"getOffsetForRow",value:function(e){var a=e.alignment,n=e.index;return this.Grid?this.Grid.getOffsetForCell({alignment:a,rowIndex:n,columnIndex:0}).scrollTop:0}},{key:"invalidateCellSizeAfterRender",value:function(e){var a=e.columnIndex,n=e.rowIndex;this.Grid&&this.Grid.invalidateCellSizeAfterRender({rowIndex:n,columnIndex:a})}},{key:"measureAllRows",value:function(){this.Grid&&this.Grid.measureAllCells()}},{key:"recomputeGridSize",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.columnIndex,n=void 0===a?0:a,t=e.rowIndex,i=void 0===t?0:t;this.Grid&&this.Grid.recomputeGridSize({rowIndex:i,columnIndex:n})}},{key:"recomputeRowHeights",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.Grid&&this.Grid.recomputeGridSize({rowIndex:e,columnIndex:0})}},{key:"scrollToPosition",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.Grid&&this.Grid.scrollToPosition({scrollTop:e})}},{key:"scrollToRow",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.Grid&&this.Grid.scrollToCell({columnIndex:0,rowIndex:e})}},{key:"render",value:function(){var e=this.props,a=e.className,n=e.noRowsRenderer,t=e.scrollToIndex,i=e.width,r=O("ReactVirtualized__List",a);return A.createElement(X,E()({},this.props,{autoContainerWidth:!0,cellRenderer:this._cellRenderer,className:r,columnWidth:i,columnCount:1,noContentRenderer:n,onScroll:this._onScroll,onSectionRendered:this._onSectionRendered,ref:this._setRef,scrollToRow:t}))}}]),a}(A.PureComponent),T()(Ie,"propTypes",null),Se);T()(Re,"defaultProps",{autoHeight:!1,estimatedRowSize:30,onScroll:function(){},noRowsRenderer:function(){return null},onRowsRendered:function(){},overscanIndicesGetter:Q,overscanRowCount:10,scrollToAlignment:"auto",scrollToIndex:-1,style:{}});var De=n("J4zp"),ke=n.n(De);const Pe=function(e,a,n,t,i){return"function"==typeof n?function(e,a,n,t,i){for(var r=n+1;a<=n;){var s=a+n>>>1;i(e[s],t)>=0?(r=s,n=s-1):a=s+1}return r}(e,void 0===t?0:0|t,void 0===i?e.length-1:0|i,a,n):function(e,a,n,t){for(var i=n+1;a<=n;){var r=a+n>>>1;e[r]>=t?(i=r,n=r-1):a=r+1}return i}(e,void 0===n?0:0|n,void 0===t?e.length-1:0|t,a)};function Me(e,a,n,t,i){this.mid=e,this.left=a,this.right=n,this.leftPoints=t,this.rightPoints=i,this.count=(a?a.count:0)+(n?n.count:0)+t.length}var Ne=Me.prototype;function Ge(e,a){e.mid=a.mid,e.left=a.left,e.right=a.right,e.leftPoints=a.leftPoints,e.rightPoints=a.rightPoints,e.count=a.count}function Le(e,a){var n=We(a);e.mid=n.mid,e.left=n.left,e.right=n.right,e.leftPoints=n.leftPoints,e.rightPoints=n.rightPoints,e.count=n.count}function we(e,a){var n=e.intervals([]);n.push(a),Le(e,n)}function Ue(e,a){var n=e.intervals([]),t=n.indexOf(a);return t<0?0:(n.splice(t,1),Le(e,n),1)}function Be(e,a,n){for(var t=0;t<e.length&&e[t][0]<=a;++t){var i=n(e[t]);if(i)return i}}function He(e,a,n){for(var t=e.length-1;t>=0&&e[t][1]>=a;--t){var i=n(e[t]);if(i)return i}}function Fe(e,a){for(var n=0;n<e.length;++n){var t=a(e[n]);if(t)return t}}function Ve(e,a){return e-a}function xe(e,a){return e[0]-a[0]||e[1]-a[1]}function Ye(e,a){return e[1]-a[1]||e[0]-a[0]}function We(e){if(0===e.length)return null;for(var a=[],n=0;n<e.length;++n)a.push(e[n][0],e[n][1]);a.sort(Ve);var t=a[a.length>>1],i=[],r=[],s=[];for(n=0;n<e.length;++n){var l=e[n];l[1]<t?i.push(l):t<l[0]?r.push(l):s.push(l)}var o=s,u=s.slice();return o.sort(xe),u.sort(Ye),new Me(t,We(i),We(r),o,u)}function Ke(e){this.root=e}Ne.intervals=function(e){return e.push.apply(e,this.leftPoints),this.left&&this.left.intervals(e),this.right&&this.right.intervals(e),e},Ne.insert=function(e){var a=this.count-this.leftPoints.length;if(this.count+=1,e[1]<this.mid)this.left?4*(this.left.count+1)>3*(a+1)?we(this,e):this.left.insert(e):this.left=We([e]);else if(e[0]>this.mid)this.right?4*(this.right.count+1)>3*(a+1)?we(this,e):this.right.insert(e):this.right=We([e]);else{var n=Pe(this.leftPoints,e,xe),t=Pe(this.rightPoints,e,Ye);this.leftPoints.splice(n,0,e),this.rightPoints.splice(t,0,e)}},Ne.remove=function(e){var a=this.count-this.leftPoints;if(e[1]<this.mid)return this.left?4*(this.right?this.right.count:0)>3*(a-1)?Ue(this,e):2===(r=this.left.remove(e))?(this.left=null,this.count-=1,1):(1===r&&(this.count-=1),r):0;if(e[0]>this.mid)return this.right?4*(this.left?this.left.count:0)>3*(a-1)?Ue(this,e):2===(r=this.right.remove(e))?(this.right=null,this.count-=1,1):(1===r&&(this.count-=1),r):0;if(1===this.count)return this.leftPoints[0]===e?2:0;if(1===this.leftPoints.length&&this.leftPoints[0]===e){if(this.left&&this.right){for(var n=this,t=this.left;t.right;)n=t,t=t.right;if(n===this)t.right=this.right;else{var i=this.left,r=this.right;n.count-=t.count,n.right=t.left,t.left=i,t.right=r}Ge(this,t),this.count=(this.left?this.left.count:0)+(this.right?this.right.count:0)+this.leftPoints.length}else this.left?Ge(this,this.left):Ge(this,this.right);return 1}for(i=Pe(this.leftPoints,e,xe);i<this.leftPoints.length&&this.leftPoints[i][0]===e[0];++i)if(this.leftPoints[i]===e)for(this.count-=1,this.leftPoints.splice(i,1),r=Pe(this.rightPoints,e,Ye);r<this.rightPoints.length&&this.rightPoints[r][1]===e[1];++r)if(this.rightPoints[r]===e)return this.rightPoints.splice(r,1),1;return 0},Ne.queryPoint=function(e,a){return e<this.mid?this.left&&(n=this.left.queryPoint(e,a))?n:Be(this.leftPoints,e,a):e>this.mid?this.right&&(n=this.right.queryPoint(e,a))?n:He(this.rightPoints,e,a):Fe(this.leftPoints,a);var n},Ne.queryInterval=function(e,a,n){var t;return e<this.mid&&this.left&&(t=this.left.queryInterval(e,a,n))||a>this.mid&&this.right&&(t=this.right.queryInterval(e,a,n))?t:a<this.mid?Be(this.leftPoints,a,n):e>this.mid?He(this.rightPoints,e,n):Fe(this.leftPoints,n)};var ze=Ke.prototype;ze.insert=function(e){this.root?this.root.insert(e):this.root=new Me(e[0],null,null,[e],[e])},ze.remove=function(e){if(this.root){var a=this.root.remove(e);return 2===a&&(this.root=null),0!==a}return!1},ze.queryPoint=function(e,a){if(this.root)return this.root.queryPoint(e,a)},ze.queryInterval=function(e,a,n){if(e<=a&&this.root)return this.root.queryInterval(e,a,n)},Object.defineProperty(ze,"count",{get:function(){return this.root?this.root.count:0}}),Object.defineProperty(ze,"intervals",{get:function(){return this.root?this.root.intervals([]):[]}});var je,qe,Xe=function(){function e(){i()(this,e),T()(this,"_columnSizeMap",{}),T()(this,"_intervalTree",new Ke(null)),T()(this,"_leftMap",{})}return s()(e,[{key:"estimateTotalHeight",value:function(e,a,n){var t=e-this.count;return this.tallestColumnSize+Math.ceil(t/a)*n}},{key:"range",value:function(e,a,n){var t=this;this._intervalTree.queryInterval(e,e+a,(function(e){var a=ke()(e,3),i=a[0],r=(a[1],a[2]);return n(r,t._leftMap[r],i)}))}},{key:"setPosition",value:function(e,a,n,t){this._intervalTree.insert([n,n+t,e]),this._leftMap[e]=a;var i=this._columnSizeMap,r=i[a];i[a]=void 0===r?n+t:Math.max(r,n+t)}},{key:"count",get:function(){return this._intervalTree.count}},{key:"shortestColumnSize",get:function(){var e=this._columnSizeMap,a=0;for(var n in e){var t=e[n];a=0===a?t:Math.min(a,t)}return a}},{key:"tallestColumnSize",get:function(){var e=this._columnSizeMap,a=0;for(var n in e){var t=e[n];a=Math.max(a,t)}return a}}]),e}();function Qe(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function Je(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?Qe(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Qe(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var Ze=(qe=je=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"state",{isScrolling:!1,scrollTop:0}),T()(d()(n),"_debounceResetIsScrollingId",void 0),T()(d()(n),"_invalidateOnUpdateStartIndex",null),T()(d()(n),"_invalidateOnUpdateStopIndex",null),T()(d()(n),"_positionCache",new Xe),T()(d()(n),"_startIndex",null),T()(d()(n),"_startIndexMemoized",null),T()(d()(n),"_stopIndex",null),T()(d()(n),"_stopIndexMemoized",null),T()(d()(n),"_debounceResetIsScrollingCallback",(function(){n.setState({isScrolling:!1})})),T()(d()(n),"_setScrollingContainerRef",(function(e){n._scrollingContainer=e})),T()(d()(n),"_onScroll",(function(e){var a=n.props.height,t=e.currentTarget.scrollTop,i=Math.min(Math.max(0,n._getEstimatedTotalHeight()-a),t);t===i&&(n._debounceResetIsScrolling(),n.state.scrollTop!==i&&n.setState({isScrolling:!0,scrollTop:i}))})),n}return v()(a,e),s()(a,[{key:"clearCellPositions",value:function(){this._positionCache=new Xe,this.forceUpdate()}},{key:"invalidateCellSizeAfterRender",value:function(e){var a=e.rowIndex;null===this._invalidateOnUpdateStartIndex?(this._invalidateOnUpdateStartIndex=a,this._invalidateOnUpdateStopIndex=a):(this._invalidateOnUpdateStartIndex=Math.min(this._invalidateOnUpdateStartIndex,a),this._invalidateOnUpdateStopIndex=Math.max(this._invalidateOnUpdateStopIndex,a))}},{key:"recomputeCellPositions",value:function(){var e=this._positionCache.count-1;this._positionCache=new Xe,this._populatePositionCache(0,e),this.forceUpdate()}},{key:"componentDidMount",value:function(){this._checkInvalidateOnUpdate(),this._invokeOnScrollCallback(),this._invokeOnCellsRenderedCallback()}},{key:"componentDidUpdate",value:function(e,a){this._checkInvalidateOnUpdate(),this._invokeOnScrollCallback(),this._invokeOnCellsRenderedCallback(),this.props.scrollTop!==e.scrollTop&&this._debounceResetIsScrolling()}},{key:"componentWillUnmount",value:function(){this._debounceResetIsScrollingId&&Y(this._debounceResetIsScrollingId)}},{key:"render",value:function(){var e,a=this,n=this.props,t=n.autoHeight,i=n.cellCount,r=n.cellMeasurerCache,s=n.cellRenderer,l=n.className,o=n.height,u=n.id,m=n.keyMapper,c=n.overscanByPixels,d=n.role,_=n.style,v=n.tabIndex,p=n.width,f=n.rowDirection,h=this.state,g=h.isScrolling,b=h.scrollTop,y=[],E=this._getEstimatedTotalHeight(),C=this._positionCache.shortestColumnSize,I=this._positionCache.count,S=0;if(this._positionCache.range(Math.max(0,b-c),o+2*c,(function(n,t,i){var l;void 0===e?(S=n,e=n):(S=Math.min(S,n),e=Math.max(e,n)),y.push(s({index:n,isScrolling:g,key:m(n),parent:a,style:(l={height:r.getHeight(n)},T()(l,"ltr"===f?"left":"right",t),T()(l,"position","absolute"),T()(l,"top",i),T()(l,"width",r.getWidth(n)),l)}))})),C<b+o+c&&I<i)for(var R=Math.min(i-I,Math.ceil((b+o+c-C)/r.defaultHeight*p/r.defaultWidth)),D=I;D<I+R;D++)e=D,y.push(s({index:D,isScrolling:g,key:m(D),parent:this,style:{width:r.getWidth(D)}}));return this._startIndex=S,this._stopIndex=e,A.createElement("div",{ref:this._setScrollingContainerRef,"aria-label":this.props["aria-label"],className:O("ReactVirtualized__Masonry",l),id:u,onScroll:this._onScroll,role:d,style:Je({boxSizing:"border-box",direction:"ltr",height:t?"auto":o,overflowX:"hidden",overflowY:E<o?"hidden":"auto",position:"relative",width:p,WebkitOverflowScrolling:"touch",willChange:"transform"},_),tabIndex:v},A.createElement("div",{className:"ReactVirtualized__Masonry__innerScrollContainer",style:{width:"100%",height:E,maxWidth:"100%",maxHeight:E,overflow:"hidden",pointerEvents:g?"none":"",position:"relative"}},y))}},{key:"_checkInvalidateOnUpdate",value:function(){if("number"==typeof this._invalidateOnUpdateStartIndex){var e=this._invalidateOnUpdateStartIndex,a=this._invalidateOnUpdateStopIndex;this._invalidateOnUpdateStartIndex=null,this._invalidateOnUpdateStopIndex=null,this._populatePositionCache(e,a),this.forceUpdate()}}},{key:"_debounceResetIsScrolling",value:function(){var e=this.props.scrollingResetTimeInterval;this._debounceResetIsScrollingId&&Y(this._debounceResetIsScrollingId),this._debounceResetIsScrollingId=W(this._debounceResetIsScrollingCallback,e)}},{key:"_getEstimatedTotalHeight",value:function(){var e=this.props,a=e.cellCount,n=e.cellMeasurerCache,t=e.width,i=Math.max(1,Math.floor(t/n.defaultWidth));return this._positionCache.estimateTotalHeight(a,i,n.defaultHeight)}},{key:"_invokeOnScrollCallback",value:function(){var e=this.props,a=e.height,n=e.onScroll,t=this.state.scrollTop;this._onScrollMemoized!==t&&(n({clientHeight:a,scrollHeight:this._getEstimatedTotalHeight(),scrollTop:t}),this._onScrollMemoized=t)}},{key:"_invokeOnCellsRenderedCallback",value:function(){this._startIndexMemoized===this._startIndex&&this._stopIndexMemoized===this._stopIndex||((0,this.props.onCellsRendered)({startIndex:this._startIndex,stopIndex:this._stopIndex}),this._startIndexMemoized=this._startIndex,this._stopIndexMemoized=this._stopIndex)}},{key:"_populatePositionCache",value:function(e,a){for(var n=this.props,t=n.cellMeasurerCache,i=n.cellPositioner,r=e;r<=a;r++){var s=i(r),l=s.left,o=s.top;this._positionCache.setPosition(r,l,o,t.getHeight(r))}}}],[{key:"getDerivedStateFromProps",value:function(e,a){return void 0!==e.scrollTop&&a.scrollTop!==e.scrollTop?{isScrolling:!0,scrollTop:e.scrollTop}:null}}]),a}(A.PureComponent),T()(je,"propTypes",null),qe);function $e(){}T()(Ze,"defaultProps",{autoHeight:!1,keyMapper:function(e){return e},onCellsRendered:$e,onScroll:$e,overscanByPixels:20,role:"grid",scrollingResetTimeInterval:150,style:{},tabIndex:0,rowDirection:"ltr"}),b(Ze);var ea=function(){function e(){var a=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i()(this,e),T()(this,"_cellMeasurerCache",void 0),T()(this,"_columnIndexOffset",void 0),T()(this,"_rowIndexOffset",void 0),T()(this,"columnWidth",(function(e){var n=e.index;a._cellMeasurerCache.columnWidth({index:n+a._columnIndexOffset})})),T()(this,"rowHeight",(function(e){var n=e.index;a._cellMeasurerCache.rowHeight({index:n+a._rowIndexOffset})}));var t=n.cellMeasurerCache,r=n.columnIndexOffset,s=void 0===r?0:r,l=n.rowIndexOffset,o=void 0===l?0:l;this._cellMeasurerCache=t,this._columnIndexOffset=s,this._rowIndexOffset=o}return s()(e,[{key:"clear",value:function(e,a){this._cellMeasurerCache.clear(e+this._rowIndexOffset,a+this._columnIndexOffset)}},{key:"clearAll",value:function(){this._cellMeasurerCache.clearAll()}},{key:"hasFixedHeight",value:function(){return this._cellMeasurerCache.hasFixedHeight()}},{key:"hasFixedWidth",value:function(){return this._cellMeasurerCache.hasFixedWidth()}},{key:"getHeight",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._cellMeasurerCache.getHeight(e+this._rowIndexOffset,a+this._columnIndexOffset)}},{key:"getWidth",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._cellMeasurerCache.getWidth(e+this._rowIndexOffset,a+this._columnIndexOffset)}},{key:"has",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._cellMeasurerCache.has(e+this._rowIndexOffset,a+this._columnIndexOffset)}},{key:"set",value:function(e,a,n,t){this._cellMeasurerCache.set(e+this._rowIndexOffset,a+this._columnIndexOffset,n,t)}},{key:"defaultHeight",get:function(){return this._cellMeasurerCache.defaultHeight}},{key:"defaultWidth",get:function(){return this._cellMeasurerCache.defaultWidth}}]),e}();function aa(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function na(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?aa(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):aa(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var ta=function(e){function a(e,n){var t;i()(this,a),t=o()(this,m()(a).call(this,e,n)),T()(d()(t),"state",{scrollLeft:0,scrollTop:0,scrollbarSize:0,showHorizontalScrollbar:!1,showVerticalScrollbar:!1}),T()(d()(t),"_deferredInvalidateColumnIndex",null),T()(d()(t),"_deferredInvalidateRowIndex",null),T()(d()(t),"_bottomLeftGridRef",(function(e){t._bottomLeftGrid=e})),T()(d()(t),"_bottomRightGridRef",(function(e){t._bottomRightGrid=e})),T()(d()(t),"_cellRendererBottomLeftGrid",(function(e){var a=e.rowIndex,n=R()(e,["rowIndex"]),i=t.props,r=i.cellRenderer,s=i.fixedRowCount;return a===i.rowCount-s?A.createElement("div",{key:n.key,style:na({},n.style,{height:20})}):r(na({},n,{parent:d()(t),rowIndex:a+s}))})),T()(d()(t),"_cellRendererBottomRightGrid",(function(e){var a=e.columnIndex,n=e.rowIndex,i=R()(e,["columnIndex","rowIndex"]),r=t.props,s=r.cellRenderer,l=r.fixedColumnCount,o=r.fixedRowCount;return s(na({},i,{columnIndex:a+l,parent:d()(t),rowIndex:n+o}))})),T()(d()(t),"_cellRendererTopRightGrid",(function(e){var a=e.columnIndex,n=R()(e,["columnIndex"]),i=t.props,r=i.cellRenderer,s=i.columnCount,l=i.fixedColumnCount;return a===s-l?A.createElement("div",{key:n.key,style:na({},n.style,{width:20})}):r(na({},n,{columnIndex:a+l,parent:d()(t)}))})),T()(d()(t),"_columnWidthRightGrid",(function(e){var a=e.index,n=t.props,i=n.columnCount,r=n.fixedColumnCount,s=n.columnWidth,l=t.state,o=l.scrollbarSize;return l.showHorizontalScrollbar&&a===i-r?o:"function"==typeof s?s({index:a+r}):s})),T()(d()(t),"_onScroll",(function(e){var a=e.scrollLeft,n=e.scrollTop;t.setState({scrollLeft:a,scrollTop:n});var i=t.props.onScroll;i&&i(e)})),T()(d()(t),"_onScrollbarPresenceChange",(function(e){var a=e.horizontal,n=e.size,i=e.vertical,r=t.state,s=r.showHorizontalScrollbar,l=r.showVerticalScrollbar;if(a!==s||i!==l){t.setState({scrollbarSize:n,showHorizontalScrollbar:a,showVerticalScrollbar:i});var o=t.props.onScrollbarPresenceChange;"function"==typeof o&&o({horizontal:a,size:n,vertical:i})}})),T()(d()(t),"_onScrollLeft",(function(e){var a=e.scrollLeft;t._onScroll({scrollLeft:a,scrollTop:t.state.scrollTop})})),T()(d()(t),"_onScrollTop",(function(e){var a=e.scrollTop;t._onScroll({scrollTop:a,scrollLeft:t.state.scrollLeft})})),T()(d()(t),"_rowHeightBottomGrid",(function(e){var a=e.index,n=t.props,i=n.fixedRowCount,r=n.rowCount,s=n.rowHeight,l=t.state,o=l.scrollbarSize;return l.showVerticalScrollbar&&a===r-i?o:"function"==typeof s?s({index:a+i}):s})),T()(d()(t),"_topLeftGridRef",(function(e){t._topLeftGrid=e})),T()(d()(t),"_topRightGridRef",(function(e){t._topRightGrid=e}));var r=e.deferredMeasurementCache,s=e.fixedColumnCount,l=e.fixedRowCount;return t._maybeCalculateCachedStyles(!0),r&&(t._deferredMeasurementCacheBottomLeftGrid=l>0?new ea({cellMeasurerCache:r,columnIndexOffset:0,rowIndexOffset:l}):r,t._deferredMeasurementCacheBottomRightGrid=s>0||l>0?new ea({cellMeasurerCache:r,columnIndexOffset:s,rowIndexOffset:l}):r,t._deferredMeasurementCacheTopRightGrid=s>0?new ea({cellMeasurerCache:r,columnIndexOffset:s,rowIndexOffset:0}):r),t}return v()(a,e),s()(a,[{key:"forceUpdateGrids",value:function(){this._bottomLeftGrid&&this._bottomLeftGrid.forceUpdate(),this._bottomRightGrid&&this._bottomRightGrid.forceUpdate(),this._topLeftGrid&&this._topLeftGrid.forceUpdate(),this._topRightGrid&&this._topRightGrid.forceUpdate()}},{key:"invalidateCellSizeAfterRender",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.columnIndex,n=void 0===a?0:a,t=e.rowIndex,i=void 0===t?0:t;this._deferredInvalidateColumnIndex="number"==typeof this._deferredInvalidateColumnIndex?Math.min(this._deferredInvalidateColumnIndex,n):n,this._deferredInvalidateRowIndex="number"==typeof this._deferredInvalidateRowIndex?Math.min(this._deferredInvalidateRowIndex,i):i}},{key:"measureAllCells",value:function(){this._bottomLeftGrid&&this._bottomLeftGrid.measureAllCells(),this._bottomRightGrid&&this._bottomRightGrid.measureAllCells(),this._topLeftGrid&&this._topLeftGrid.measureAllCells(),this._topRightGrid&&this._topRightGrid.measureAllCells()}},{key:"recomputeGridSize",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.columnIndex,n=void 0===a?0:a,t=e.rowIndex,i=void 0===t?0:t,r=this.props,s=r.fixedColumnCount,l=r.fixedRowCount,o=Math.max(0,n-s),u=Math.max(0,i-l);this._bottomLeftGrid&&this._bottomLeftGrid.recomputeGridSize({columnIndex:n,rowIndex:u}),this._bottomRightGrid&&this._bottomRightGrid.recomputeGridSize({columnIndex:o,rowIndex:u}),this._topLeftGrid&&this._topLeftGrid.recomputeGridSize({columnIndex:n,rowIndex:i}),this._topRightGrid&&this._topRightGrid.recomputeGridSize({columnIndex:o,rowIndex:i}),this._leftGridWidth=null,this._topGridHeight=null,this._maybeCalculateCachedStyles(!0)}},{key:"componentDidMount",value:function(){var e=this.props,a=e.scrollLeft,n=e.scrollTop;if(a>0||n>0){var t={};a>0&&(t.scrollLeft=a),n>0&&(t.scrollTop=n),this.setState(t)}this._handleInvalidatedGridSize()}},{key:"componentDidUpdate",value:function(){this._handleInvalidatedGridSize()}},{key:"render",value:function(){var e=this.props,a=e.onScroll,n=e.onSectionRendered,t=(e.onScrollbarPresenceChange,e.scrollLeft,e.scrollToColumn),i=(e.scrollTop,e.scrollToRow),r=R()(e,["onScroll","onSectionRendered","onScrollbarPresenceChange","scrollLeft","scrollToColumn","scrollTop","scrollToRow"]);if(this._prepareForRender(),0===this.props.width||0===this.props.height)return null;var s=this.state,l=s.scrollLeft,o=s.scrollTop;return A.createElement("div",{style:this._containerOuterStyle},A.createElement("div",{style:this._containerTopStyle},this._renderTopLeftGrid(r),this._renderTopRightGrid(na({},r,{onScroll:a,scrollLeft:l}))),A.createElement("div",{style:this._containerBottomStyle},this._renderBottomLeftGrid(na({},r,{onScroll:a,scrollTop:o})),this._renderBottomRightGrid(na({},r,{onScroll:a,onSectionRendered:n,scrollLeft:l,scrollToColumn:t,scrollToRow:i,scrollTop:o}))))}},{key:"_getBottomGridHeight",value:function(e){return e.height-this._getTopGridHeight(e)}},{key:"_getLeftGridWidth",value:function(e){var a=e.fixedColumnCount,n=e.columnWidth;if(null==this._leftGridWidth)if("function"==typeof n){for(var t=0,i=0;i<a;i++)t+=n({index:i});this._leftGridWidth=t}else this._leftGridWidth=n*a;return this._leftGridWidth}},{key:"_getRightGridWidth",value:function(e){return e.width-this._getLeftGridWidth(e)}},{key:"_getTopGridHeight",value:function(e){var a=e.fixedRowCount,n=e.rowHeight;if(null==this._topGridHeight)if("function"==typeof n){for(var t=0,i=0;i<a;i++)t+=n({index:i});this._topGridHeight=t}else this._topGridHeight=n*a;return this._topGridHeight}},{key:"_handleInvalidatedGridSize",value:function(){if("number"==typeof this._deferredInvalidateColumnIndex){var e=this._deferredInvalidateColumnIndex,a=this._deferredInvalidateRowIndex;this._deferredInvalidateColumnIndex=null,this._deferredInvalidateRowIndex=null,this.recomputeGridSize({columnIndex:e,rowIndex:a}),this.forceUpdate()}}},{key:"_maybeCalculateCachedStyles",value:function(e){var a=this.props,n=a.columnWidth,t=a.enableFixedColumnScroll,i=a.enableFixedRowScroll,r=a.height,s=a.fixedColumnCount,l=a.fixedRowCount,o=a.rowHeight,u=a.style,m=a.styleBottomLeftGrid,c=a.styleBottomRightGrid,d=a.styleTopLeftGrid,_=a.styleTopRightGrid,v=a.width,p=e||r!==this._lastRenderedHeight||v!==this._lastRenderedWidth,T=e||n!==this._lastRenderedColumnWidth||s!==this._lastRenderedFixedColumnCount,A=e||l!==this._lastRenderedFixedRowCount||o!==this._lastRenderedRowHeight;(e||p||u!==this._lastRenderedStyle)&&(this._containerOuterStyle=na({height:r,overflow:"visible",width:v},u)),(e||p||A)&&(this._containerTopStyle={height:this._getTopGridHeight(this.props),position:"relative",width:v},this._containerBottomStyle={height:r-this._getTopGridHeight(this.props),overflow:"visible",position:"relative",width:v}),(e||m!==this._lastRenderedStyleBottomLeftGrid)&&(this._bottomLeftGridStyle=na({left:0,overflowX:"hidden",overflowY:t?"auto":"hidden",position:"absolute"},m)),(e||T||c!==this._lastRenderedStyleBottomRightGrid)&&(this._bottomRightGridStyle=na({left:this._getLeftGridWidth(this.props),position:"absolute"},c)),(e||d!==this._lastRenderedStyleTopLeftGrid)&&(this._topLeftGridStyle=na({left:0,overflowX:"hidden",overflowY:"hidden",position:"absolute",top:0},d)),(e||T||_!==this._lastRenderedStyleTopRightGrid)&&(this._topRightGridStyle=na({left:this._getLeftGridWidth(this.props),overflowX:i?"auto":"hidden",overflowY:"hidden",position:"absolute",top:0},_)),this._lastRenderedColumnWidth=n,this._lastRenderedFixedColumnCount=s,this._lastRenderedFixedRowCount=l,this._lastRenderedHeight=r,this._lastRenderedRowHeight=o,this._lastRenderedStyle=u,this._lastRenderedStyleBottomLeftGrid=m,this._lastRenderedStyleBottomRightGrid=c,this._lastRenderedStyleTopLeftGrid=d,this._lastRenderedStyleTopRightGrid=_,this._lastRenderedWidth=v}},{key:"_prepareForRender",value:function(){this._lastRenderedColumnWidth===this.props.columnWidth&&this._lastRenderedFixedColumnCount===this.props.fixedColumnCount||(this._leftGridWidth=null),this._lastRenderedFixedRowCount===this.props.fixedRowCount&&this._lastRenderedRowHeight===this.props.rowHeight||(this._topGridHeight=null),this._maybeCalculateCachedStyles(),this._lastRenderedColumnWidth=this.props.columnWidth,this._lastRenderedFixedColumnCount=this.props.fixedColumnCount,this._lastRenderedFixedRowCount=this.props.fixedRowCount,this._lastRenderedRowHeight=this.props.rowHeight}},{key:"_renderBottomLeftGrid",value:function(e){var a=e.enableFixedColumnScroll,n=e.fixedColumnCount,t=e.fixedRowCount,i=e.rowCount,r=e.hideBottomLeftGridScrollbar,s=this.state.showVerticalScrollbar;if(!n)return null;var l=s?1:0,o=this._getBottomGridHeight(e),u=this._getLeftGridWidth(e),m=this.state.showVerticalScrollbar?this.state.scrollbarSize:0,c=r?u+m:u,d=A.createElement(X,E()({},e,{cellRenderer:this._cellRendererBottomLeftGrid,className:this.props.classNameBottomLeftGrid,columnCount:n,deferredMeasurementCache:this._deferredMeasurementCacheBottomLeftGrid,height:o,onScroll:a?this._onScrollTop:void 0,ref:this._bottomLeftGridRef,rowCount:Math.max(0,i-t)+l,rowHeight:this._rowHeightBottomGrid,style:this._bottomLeftGridStyle,tabIndex:null,width:c}));return r?A.createElement("div",{className:"BottomLeftGrid_ScrollWrapper",style:na({},this._bottomLeftGridStyle,{height:o,width:u,overflowY:"hidden"})},d):d}},{key:"_renderBottomRightGrid",value:function(e){var a=e.columnCount,n=e.fixedColumnCount,t=e.fixedRowCount,i=e.rowCount,r=e.scrollToColumn,s=e.scrollToRow;return A.createElement(X,E()({},e,{cellRenderer:this._cellRendererBottomRightGrid,className:this.props.classNameBottomRightGrid,columnCount:Math.max(0,a-n),columnWidth:this._columnWidthRightGrid,deferredMeasurementCache:this._deferredMeasurementCacheBottomRightGrid,height:this._getBottomGridHeight(e),onScroll:this._onScroll,onScrollbarPresenceChange:this._onScrollbarPresenceChange,ref:this._bottomRightGridRef,rowCount:Math.max(0,i-t),rowHeight:this._rowHeightBottomGrid,scrollToColumn:r-n,scrollToRow:s-t,style:this._bottomRightGridStyle,width:this._getRightGridWidth(e)}))}},{key:"_renderTopLeftGrid",value:function(e){var a=e.fixedColumnCount,n=e.fixedRowCount;return a&&n?A.createElement(X,E()({},e,{className:this.props.classNameTopLeftGrid,columnCount:a,height:this._getTopGridHeight(e),ref:this._topLeftGridRef,rowCount:n,style:this._topLeftGridStyle,tabIndex:null,width:this._getLeftGridWidth(e)})):null}},{key:"_renderTopRightGrid",value:function(e){var a=e.columnCount,n=e.enableFixedRowScroll,t=e.fixedColumnCount,i=e.fixedRowCount,r=e.scrollLeft,s=e.hideTopRightGridScrollbar,l=this.state,o=l.showHorizontalScrollbar,u=l.scrollbarSize;if(!i)return null;var m=o?1:0,c=this._getTopGridHeight(e),d=this._getRightGridWidth(e),_=o?u:0,v=c,p=this._topRightGridStyle;s&&(v=c+_,p=na({},this._topRightGridStyle,{left:0}));var T=A.createElement(X,E()({},e,{cellRenderer:this._cellRendererTopRightGrid,className:this.props.classNameTopRightGrid,columnCount:Math.max(0,a-t)+m,columnWidth:this._columnWidthRightGrid,deferredMeasurementCache:this._deferredMeasurementCacheTopRightGrid,height:v,onScroll:n?this._onScrollLeft:void 0,ref:this._topRightGridRef,rowCount:i,scrollLeft:r,style:p,tabIndex:null,width:d}));return s?A.createElement("div",{className:"TopRightGrid_ScrollWrapper",style:na({},this._topRightGridStyle,{height:c,width:d,overflowX:"hidden"})},T):T}}],[{key:"getDerivedStateFromProps",value:function(e,a){return e.scrollLeft!==a.scrollLeft||e.scrollTop!==a.scrollTop?{scrollLeft:null!=e.scrollLeft&&e.scrollLeft>=0?e.scrollLeft:a.scrollLeft,scrollTop:null!=e.scrollTop&&e.scrollTop>=0?e.scrollTop:a.scrollTop}:null}}]),a}(A.PureComponent);function ia(e){var a=e.className,n=e.columns,t=e.style;return A.createElement("div",{className:a,role:"row",style:t},n)}T()(ta,"defaultProps",{classNameBottomLeftGrid:"",classNameBottomRightGrid:"",classNameTopLeftGrid:"",classNameTopRightGrid:"",enableFixedColumnScroll:!1,enableFixedRowScroll:!1,fixedColumnCount:0,fixedRowCount:0,scrollToColumn:-1,scrollToRow:-1,style:{},styleBottomLeftGrid:{},styleBottomRightGrid:{},styleTopLeftGrid:{},styleTopRightGrid:{},hideTopRightGridScrollbar:!1,hideBottomLeftGridScrollbar:!1}),ta.propTypes={},b(ta),(function(e){function a(e,n){var t;return i()(this,a),(t=o()(this,m()(a).call(this,e,n))).state={clientHeight:0,clientWidth:0,scrollHeight:0,scrollLeft:0,scrollTop:0,scrollWidth:0},t._onScroll=t._onScroll.bind(d()(t)),t}return v()(a,e),s()(a,[{key:"render",value:function(){var e=this.props.children,a=this.state,n=a.clientHeight,t=a.clientWidth,i=a.scrollHeight,r=a.scrollLeft,s=a.scrollTop,l=a.scrollWidth;return e({clientHeight:n,clientWidth:t,onScroll:this._onScroll,scrollHeight:i,scrollLeft:r,scrollTop:s,scrollWidth:l})}},{key:"_onScroll",value:function(e){var a=e.clientHeight,n=e.clientWidth,t=e.scrollHeight,i=e.scrollLeft,r=e.scrollTop,s=e.scrollWidth;this.setState({clientHeight:a,clientWidth:n,scrollHeight:t,scrollLeft:i,scrollTop:r,scrollWidth:s})}}]),a}(A.PureComponent)).propTypes={},ia.propTypes=null;const ra="ASC",sa="DESC";function la(e){var a=e.sortDirection,n=O("ReactVirtualized__Table__sortableHeaderIcon",{"ReactVirtualized__Table__sortableHeaderIcon--ASC":a===ra,"ReactVirtualized__Table__sortableHeaderIcon--DESC":a===sa});return A.createElement("svg",{className:n,width:18,height:18,viewBox:"0 0 24 24"},a===ra?A.createElement("path",{d:"M7 14l5-5 5 5z"}):A.createElement("path",{d:"M7 10l5 5 5-5z"}),A.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}))}function oa(e){var a=e.dataKey,n=e.label,t=e.sortBy,i=e.sortDirection,r=t===a,s=[A.createElement("span",{className:"ReactVirtualized__Table__headerTruncatedText",key:"label",title:"string"==typeof n?n:null},n)];return r&&s.push(A.createElement(la,{key:"SortIndicator",sortDirection:i})),s}function ua(e){var a=e.className,n=e.columns,t=e.index,i=e.key,r=e.onRowClick,s=e.onRowDoubleClick,l=e.onRowMouseOut,o=e.onRowMouseOver,u=e.onRowRightClick,m=e.rowData,c=e.style,d={"aria-rowindex":t+1};return(r||s||l||o||u)&&(d["aria-label"]="row",d.tabIndex=0,r&&(d.onClick=function(e){return r({event:e,index:t,rowData:m})}),s&&(d.onDoubleClick=function(e){return s({event:e,index:t,rowData:m})}),l&&(d.onMouseOut=function(e){return l({event:e,index:t,rowData:m})}),o&&(d.onMouseOver=function(e){return o({event:e,index:t,rowData:m})}),u&&(d.onContextMenu=function(e){return u({event:e,index:t,rowData:m})})),A.createElement("div",E()({},d,{className:a,key:i,role:"row",style:c}),n)}la.propTypes={},oa.propTypes=null,ua.propTypes=null;var ma=function(e){function a(){return i()(this,a),o()(this,m()(a).apply(this,arguments))}return v()(a,e),a}(A.Component);function ca(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function da(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?ca(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ca(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}T()(ma,"defaultProps",{cellDataGetter:function(e){var a=e.dataKey,n=e.rowData;return"function"==typeof n.get?n.get(a):n[a]},cellRenderer:function(e){var a=e.cellData;return null==a?"":String(a)},defaultSortDirection:ra,flexGrow:0,flexShrink:1,headerRenderer:oa,style:{}}),ma.propTypes={};var _a=function(e){function a(e){var n;return i()(this,a),(n=o()(this,m()(a).call(this,e))).state={scrollbarWidth:0},n._createColumn=n._createColumn.bind(d()(n)),n._createRow=n._createRow.bind(d()(n)),n._onScroll=n._onScroll.bind(d()(n)),n._onSectionRendered=n._onSectionRendered.bind(d()(n)),n._setRef=n._setRef.bind(d()(n)),n}return v()(a,e),s()(a,[{key:"forceUpdateGrid",value:function(){this.Grid&&this.Grid.forceUpdate()}},{key:"getOffsetForRow",value:function(e){var a=e.alignment,n=e.index;return this.Grid?this.Grid.getOffsetForCell({alignment:a,rowIndex:n}).scrollTop:0}},{key:"invalidateCellSizeAfterRender",value:function(e){var a=e.columnIndex,n=e.rowIndex;this.Grid&&this.Grid.invalidateCellSizeAfterRender({rowIndex:n,columnIndex:a})}},{key:"measureAllRows",value:function(){this.Grid&&this.Grid.measureAllCells()}},{key:"recomputeGridSize",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.columnIndex,n=void 0===a?0:a,t=e.rowIndex,i=void 0===t?0:t;this.Grid&&this.Grid.recomputeGridSize({rowIndex:i,columnIndex:n})}},{key:"recomputeRowHeights",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.Grid&&this.Grid.recomputeGridSize({rowIndex:e})}},{key:"scrollToPosition",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.Grid&&this.Grid.scrollToPosition({scrollTop:e})}},{key:"scrollToRow",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.Grid&&this.Grid.scrollToCell({columnIndex:0,rowIndex:e})}},{key:"getScrollbarWidth",value:function(){if(this.Grid){var e=(0,ue.findDOMNode)(this.Grid),a=e.clientWidth||0;return(e.offsetWidth||0)-a}return 0}},{key:"componentDidMount",value:function(){this._setScrollbarWidth()}},{key:"componentDidUpdate",value:function(){this._setScrollbarWidth()}},{key:"render",value:function(){var e=this,a=this.props,n=a.children,t=a.className,i=a.disableHeader,r=a.gridClassName,s=a.gridStyle,l=a.headerHeight,o=a.headerRowRenderer,u=a.height,m=a.id,c=a.noRowsRenderer,d=a.rowClassName,_=a.rowStyle,v=a.scrollToIndex,p=a.style,T=a.width,f=this.state.scrollbarWidth,h=i?u:u-l,g="function"==typeof d?d({index:-1}):d,b="function"==typeof _?_({index:-1}):_;return this._cachedColumnStyles=[],A.Children.toArray(n).forEach((function(a,n){var t=e._getFlexStyleForColumn(a,a.props.style);e._cachedColumnStyles[n]=da({overflow:"hidden"},t)})),A.createElement("div",{"aria-label":this.props["aria-label"],"aria-labelledby":this.props["aria-labelledby"],"aria-colcount":A.Children.toArray(n).length,"aria-rowcount":this.props.rowCount,className:O("ReactVirtualized__Table",t),id:m,role:"grid",style:p},!i&&o({className:O("ReactVirtualized__Table__headerRow",g),columns:this._getHeaderColumns(),style:da({height:l,overflow:"hidden",paddingRight:f,width:T},b)}),A.createElement(X,E()({},this.props,{"aria-readonly":null,autoContainerWidth:!0,className:O("ReactVirtualized__Table__Grid",r),cellRenderer:this._createRow,columnWidth:T,columnCount:1,height:h,id:void 0,noContentRenderer:c,onScroll:this._onScroll,onSectionRendered:this._onSectionRendered,ref:this._setRef,role:"rowgroup",scrollbarWidth:f,scrollToRow:v,style:da({},s,{overflowX:"hidden"})})))}},{key:"_createColumn",value:function(e){var a=e.column,n=e.columnIndex,t=e.isScrolling,i=e.parent,r=e.rowData,s=e.rowIndex,l=this.props.onColumnClick,o=a.props,u=o.cellDataGetter,m=o.cellRenderer,c=o.className,d=o.columnData,_=o.dataKey,v=o.id,p=m({cellData:u({columnData:d,dataKey:_,rowData:r}),columnData:d,columnIndex:n,dataKey:_,isScrolling:t,parent:i,rowData:r,rowIndex:s}),T=this._cachedColumnStyles[n],f="string"==typeof p?p:null;return A.createElement("div",{"aria-colindex":n+1,"aria-describedby":v,className:O("ReactVirtualized__Table__rowColumn",c),key:"Row"+s+"-Col"+n,onClick:function(e){l&&l({columnData:d,dataKey:_,event:e})},role:"gridcell",style:T,title:f},p)}},{key:"_createHeader",value:function(e){var a,n,t,i,r,s=e.column,l=e.index,o=this.props,u=o.headerClassName,m=o.headerStyle,c=o.onHeaderClick,d=o.sort,_=o.sortBy,v=o.sortDirection,p=s.props,T=p.columnData,f=p.dataKey,h=p.defaultSortDirection,g=p.disableSort,b=p.headerRenderer,y=p.id,E=p.label,C=!g&&d,I=O("ReactVirtualized__Table__headerColumn",u,s.props.headerClassName,{ReactVirtualized__Table__sortableHeaderColumn:C}),S=this._getFlexStyleForColumn(s,da({},m,{},s.props.headerStyle)),R=b({columnData:T,dataKey:f,disableSort:g,label:E,sortBy:_,sortDirection:v});if(C||c){var D=_!==f?h:v===sa?ra:sa,k=function(e){C&&d({defaultSortDirection:h,event:e,sortBy:f,sortDirection:D}),c&&c({columnData:T,dataKey:f,event:e})};r=s.props["aria-label"]||E||f,i="none",t=0,a=k,n=function(e){"Enter"!==e.key&&" "!==e.key||k(e)}}return _===f&&(i=v===ra?"ascending":"descending"),A.createElement("div",{"aria-label":r,"aria-sort":i,className:I,id:y,key:"Header-Col"+l,onClick:a,onKeyDown:n,role:"columnheader",style:S,tabIndex:t},R)}},{key:"_createRow",value:function(e){var a=this,n=e.rowIndex,t=e.isScrolling,i=e.key,r=e.parent,s=e.style,l=this.props,o=l.children,u=l.onRowClick,m=l.onRowDoubleClick,c=l.onRowRightClick,d=l.onRowMouseOver,_=l.onRowMouseOut,v=l.rowClassName,p=l.rowGetter,T=l.rowRenderer,f=l.rowStyle,h=this.state.scrollbarWidth,g="function"==typeof v?v({index:n}):v,b="function"==typeof f?f({index:n}):f,y=p({index:n}),E=A.Children.toArray(o).map((function(e,i){return a._createColumn({column:e,columnIndex:i,isScrolling:t,parent:r,rowData:y,rowIndex:n,scrollbarWidth:h})})),C=O("ReactVirtualized__Table__row",g),I=da({},s,{height:this._getRowHeight(n),overflow:"hidden",paddingRight:h},b);return T({className:C,columns:E,index:n,isScrolling:t,key:i,onRowClick:u,onRowDoubleClick:m,onRowRightClick:c,onRowMouseOver:d,onRowMouseOut:_,rowData:y,style:I})}},{key:"_getFlexStyleForColumn",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n="".concat(e.props.flexGrow," ").concat(e.props.flexShrink," ").concat(e.props.width,"px"),t=da({},a,{flex:n,msFlex:n,WebkitFlex:n});return e.props.maxWidth&&(t.maxWidth=e.props.maxWidth),e.props.minWidth&&(t.minWidth=e.props.minWidth),t}},{key:"_getHeaderColumns",value:function(){var e=this,a=this.props,n=a.children;return(a.disableHeader?[]:A.Children.toArray(n)).map((function(a,n){return e._createHeader({column:a,index:n})}))}},{key:"_getRowHeight",value:function(e){var a=this.props.rowHeight;return"function"==typeof a?a({index:e}):a}},{key:"_onScroll",value:function(e){var a=e.clientHeight,n=e.scrollHeight,t=e.scrollTop;(0,this.props.onScroll)({clientHeight:a,scrollHeight:n,scrollTop:t})}},{key:"_onSectionRendered",value:function(e){var a=e.rowOverscanStartIndex,n=e.rowOverscanStopIndex,t=e.rowStartIndex,i=e.rowStopIndex;(0,this.props.onRowsRendered)({overscanStartIndex:a,overscanStopIndex:n,startIndex:t,stopIndex:i})}},{key:"_setRef",value:function(e){this.Grid=e}},{key:"_setScrollbarWidth",value:function(){var e=this.getScrollbarWidth();this.setState({scrollbarWidth:e})}}]),a}(A.PureComponent);T()(_a,"defaultProps",{disableHeader:!1,estimatedRowSize:30,headerHeight:0,headerStyle:{},noRowsRenderer:function(){return null},onRowsRendered:function(){return null},onScroll:function(){return null},overscanIndicesGetter:Q,overscanRowCount:10,rowRenderer:ua,headerRowRenderer:ia,rowStyle:{},scrollToAlignment:"auto",scrollToIndex:-1,style:{}}),_a.propTypes={};var va=[],pa=null,Ta=null;function Aa(){Ta&&(Ta=null,document.body&&null!=pa&&(document.body.style.pointerEvents=pa),pa=null)}function fa(){Aa(),va.forEach((function(e){return e.__resetIsScrolling()}))}function ha(e){e.currentTarget===window&&null==pa&&document.body&&(pa=document.body.style.pointerEvents,document.body.style.pointerEvents="none"),function(){Ta&&Y(Ta);var e=0;va.forEach((function(a){e=Math.max(e,a.props.scrollingResetTimeInterval)})),Ta=W(fa,e)}(),va.forEach((function(a){a.props.scrollElement===e.currentTarget&&a.__handleWindowScrollEvent()}))}function ga(e,a){va.some((function(e){return e.props.scrollElement===a}))||a.addEventListener("scroll",ha),va.push(e)}function ba(e,a){(va=va.filter((function(a){return a!==e}))).length||(a.removeEventListener("scroll",ha),Ta&&(Y(Ta),Aa()))}var ya,Ea,Ca=function(e){return e===window},Oa=function(e){return e.getBoundingClientRect()};function Ia(e,a){if(e){if(Ca(e)){var n=window,t=n.innerHeight,i=n.innerWidth;return{height:"number"==typeof t?t:0,width:"number"==typeof i?i:0}}return Oa(e)}return{height:a.serverHeight,width:a.serverWidth}}function Sa(e,a){if(Ca(a)&&document.documentElement){var n=document.documentElement,t=Oa(e),i=Oa(n);return{top:t.top-i.top,left:t.left-i.left}}var r=Ra(a),s=Oa(e),l=Oa(a);return{top:s.top+r.top-l.top,left:s.left+r.left-l.left}}function Ra(e){return Ca(e)&&document.documentElement?{top:"scrollY"in window?window.scrollY:document.documentElement.scrollTop,left:"scrollX"in window?window.scrollX:document.documentElement.scrollLeft}:{top:e.scrollTop,left:e.scrollLeft}}function Da(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function ka(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?Da(n,!0).forEach((function(a){T()(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Da(n).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var Pa=function(){return"undefined"!=typeof window?window:void 0},Ma=(Ea=ya=function(e){function a(){var e,n;i()(this,a);for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n=o()(this,(e=m()(a)).call.apply(e,[this].concat(r))),T()(d()(n),"_window",Pa()),T()(d()(n),"_isMounted",!1),T()(d()(n),"_positionFromTop",0),T()(d()(n),"_positionFromLeft",0),T()(d()(n),"_detectElementResize",void 0),T()(d()(n),"_child",void 0),T()(d()(n),"state",ka({},Ia(n.props.scrollElement,n.props),{isScrolling:!1,scrollLeft:0,scrollTop:0})),T()(d()(n),"_registerChild",(function(e){!e||e instanceof Element||console.warn("WindowScroller registerChild expects to be passed Element or null"),n._child=e,n.updatePosition()})),T()(d()(n),"_onChildScroll",(function(e){var a=e.scrollTop;if(n.state.scrollTop!==a){var t=n.props.scrollElement;t&&("function"==typeof t.scrollTo?t.scrollTo(0,a+n._positionFromTop):t.scrollTop=a+n._positionFromTop)}})),T()(d()(n),"_registerResizeListener",(function(e){e===window?window.addEventListener("resize",n._onResize,!1):n._detectElementResize.addResizeListener(e,n._onResize)})),T()(d()(n),"_unregisterResizeListener",(function(e){e===window?window.removeEventListener("resize",n._onResize,!1):e&&n._detectElementResize.removeResizeListener(e,n._onResize)})),T()(d()(n),"_onResize",(function(){n.updatePosition()})),T()(d()(n),"__handleWindowScrollEvent",(function(){if(n._isMounted){var e=n.props.onScroll,a=n.props.scrollElement;if(a){var t=Ra(a),i=Math.max(0,t.left-n._positionFromLeft),r=Math.max(0,t.top-n._positionFromTop);n.setState({isScrolling:!0,scrollLeft:i,scrollTop:r}),e({scrollLeft:i,scrollTop:r})}}})),T()(d()(n),"__resetIsScrolling",(function(){n.setState({isScrolling:!1})})),n}return v()(a,e),s()(a,[{key:"updatePosition",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props.scrollElement,a=this.props.onResize,n=this.state,t=n.height,i=n.width,r=this._child||ue.findDOMNode(this);if(r instanceof Element&&e){var s=Sa(r,e);this._positionFromTop=s.top,this._positionFromLeft=s.left}var l=Ia(e,this.props);t===l.height&&i===l.width||(this.setState({height:l.height,width:l.width}),a({height:l.height,width:l.width}))}},{key:"componentDidMount",value:function(){var e=this.props.scrollElement;this._detectElementResize=te(),this.updatePosition(e),e&&(ga(this,e),this._registerResizeListener(e)),this._isMounted=!0}},{key:"componentDidUpdate",value:function(e,a){var n=this.props.scrollElement,t=e.scrollElement;t!==n&&null!=t&&null!=n&&(this.updatePosition(n),ba(this,t),ga(this,n),this._unregisterResizeListener(t),this._registerResizeListener(n))}},{key:"componentWillUnmount",value:function(){var e=this.props.scrollElement;e&&(ba(this,e),this._unregisterResizeListener(e)),this._isMounted=!1}},{key:"render",value:function(){var e=this.props.children,a=this.state,n=a.isScrolling,t=a.scrollTop,i=a.scrollLeft,r=a.height,s=a.width;return e({onChildScroll:this._onChildScroll,registerChild:this._registerChild,height:r,isScrolling:n,scrollLeft:i,scrollTop:t,width:s})}}]),a}(A.PureComponent),T()(ya,"propTypes",null),Ea);T()(Ma,"defaultProps",{onResize:function(){},onScroll:function(){},scrollingResetTimeInterval:150,scrollElement:Pa(),serverHeight:0,serverWidth:0})},mrSG:(e,a,n)=>{"use strict";n.r(a),n.d(a,{__extends:()=>i,__assign:()=>r,__rest:()=>s,__decorate:()=>l,__param:()=>o,__metadata:()=>u,__awaiter:()=>m,__generator:()=>c,__createBinding:()=>d,__exportStar:()=>_,__values:()=>v,__read:()=>p,__spread:()=>T,__spreadArrays:()=>A,__await:()=>f,__asyncGenerator:()=>h,__asyncDelegator:()=>g,__asyncValues:()=>b,__makeTemplateObject:()=>y,__importStar:()=>C,__importDefault:()=>O,__classPrivateFieldGet:()=>I,__classPrivateFieldSet:()=>S});var t=function(e,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])})(e,a)};function i(e,a){function n(){this.constructor=e}t(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}var r=function(){return(r=Object.assign||function(e){for(var a,n=1,t=arguments.length;n<t;n++)for(var i in a=arguments[n])Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i]);return e}).apply(this,arguments)};function s(e,a){var n={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(t=Object.getOwnPropertySymbols(e);i<t.length;i++)a.indexOf(t[i])<0&&Object.prototype.propertyIsEnumerable.call(e,t[i])&&(n[t[i]]=e[t[i]])}return n}function l(e,a,n,t){var i,r=arguments.length,s=r<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,a,n,t);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(s=(r<3?i(s):r>3?i(a,n,s):i(a,n))||s);return r>3&&s&&Object.defineProperty(a,n,s),s}function o(e,a){return function(n,t){a(n,t,e)}}function u(e,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,a)}function m(e,a,n,t){return new(n||(n=Promise))((function(i,r){function s(e){try{o(t.next(e))}catch(e){r(e)}}function l(e){try{o(t.throw(e))}catch(e){r(e)}}function o(e){var a;e.done?i(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(s,l)}o((t=t.apply(e,a||[])).next())}))}function c(e,a){var n,t,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function l(r){return function(l){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,t&&(i=2&r[0]?t.return:r[0]?t.throw||((i=t.return)&&i.call(t),0):t.next)&&!(i=i.call(t,r[1])).done)return i;switch(t=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,t=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==r[0]&&2!==r[0])){s=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){s.label=r[1];break}if(6===r[0]&&s.label<i[1]){s.label=i[1],i=r;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(r);break}i[2]&&s.ops.pop(),s.trys.pop();continue}r=a.call(e,s)}catch(e){r=[6,e],t=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,l])}}}var d=Object.create?function(e,a,n,t){void 0===t&&(t=n),Object.defineProperty(e,t,{enumerable:!0,get:function(){return a[n]}})}:function(e,a,n,t){void 0===t&&(t=n),e[t]=a[n]};function _(e,a){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(a,n)||d(a,e,n)}function v(e){var a="function"==typeof Symbol&&Symbol.iterator,n=a&&e[a],t=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&t>=e.length&&(e=void 0),{value:e&&e[t++],done:!e}}};throw new TypeError(a?"Object is not iterable.":"Symbol.iterator is not defined.")}function p(e,a){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var t,i,r=n.call(e),s=[];try{for(;(void 0===a||a-- >0)&&!(t=r.next()).done;)s.push(t.value)}catch(e){i={error:e}}finally{try{t&&!t.done&&(n=r.return)&&n.call(r)}finally{if(i)throw i.error}}return s}function T(){for(var e=[],a=0;a<arguments.length;a++)e=e.concat(p(arguments[a]));return e}function A(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length;var t=Array(e),i=0;for(a=0;a<n;a++)for(var r=arguments[a],s=0,l=r.length;s<l;s++,i++)t[i]=r[s];return t}function f(e){return this instanceof f?(this.v=e,this):new f(e)}function h(e,a,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,i=n.apply(e,a||[]),r=[];return t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t;function s(e){i[e]&&(t[e]=function(a){return new Promise((function(n,t){r.push([e,a,n,t])>1||l(e,a)}))})}function l(e,a){try{(n=i[e](a)).value instanceof f?Promise.resolve(n.value.v).then(o,u):m(r[0][2],n)}catch(e){m(r[0][3],e)}var n}function o(e){l("next",e)}function u(e){l("throw",e)}function m(e,a){e(a),r.shift(),r.length&&l(r[0][0],r[0][1])}}function g(e){var a,n;return a={},t("next"),t("throw",(function(e){throw e})),t("return"),a[Symbol.iterator]=function(){return this},a;function t(t,i){a[t]=e[t]?function(a){return(n=!n)?{value:f(e[t](a)),done:"return"===t}:i?i(a):a}:i}}function b(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a,n=e[Symbol.asyncIterator];return n?n.call(e):(e=v(e),a={},t("next"),t("throw"),t("return"),a[Symbol.asyncIterator]=function(){return this},a);function t(n){a[n]=e[n]&&function(a){return new Promise((function(t,i){!function(e,a,n,t){Promise.resolve(t).then((function(a){e({value:a,done:n})}),a)}(t,i,(a=e[n](a)).done,a.value)}))}}}function y(e,a){return Object.defineProperty?Object.defineProperty(e,"raw",{value:a}):e.raw=a,e}var E=Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a};function C(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&d(a,e,n);return E(a,e),a}function O(e){return e&&e.__esModule?e:{default:e}}function I(e,a){if(!a.has(e))throw new TypeError("attempted to get private field on non-instance");return a.get(e)}function S(e,a,n){if(!a.has(e))throw new TypeError("attempted to set private field on non-instance");return a.set(e,n),n}}}]);
//# sourceMappingURL=74.4de6bdcaaa2ec9ef2577.js.map